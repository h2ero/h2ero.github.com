{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"source/.nojekyll","path":".nojekyll","modified":0,"renderable":0},{"_id":"themes/pure/source/books/index.md","path":"books/index.md","modified":0,"renderable":1},{"_id":"themes/pure/source/categories/index.md","path":"categories/index.md","modified":0,"renderable":1},{"_id":"themes/pure/source/links/index.md","path":"links/index.md","modified":0,"renderable":1},{"_id":"themes/pure/source/tags/index.md","path":"tags/index.md","modified":0,"renderable":1},{"_id":"themes/pure/source/404/index.md","path":"404/index.md","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1615184700853},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"c934705c2c01e4b9facaee8b3aefd4b10505ba33","modified":1615184762597},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":499162500000},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1615185292211},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1615185292211},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1615185292211},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1615185292211},{"_id":"themes/pure/_config.yml","hash":"e58502c9a1bfd9f1e7bc9e24eb808f11180a4fe5","modified":1615192715776},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1615185292227},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1615185292212},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1615185292214},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1615185292214},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1615185292215},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1615185292215},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1615185292225},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1615185292225},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1615185292225},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1615185292225},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1615185292225},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1615185292225},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1615185292226},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1615185292226},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1615185292226},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1615185292226},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1615185292226},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1615185292226},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1615185292226},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1615185292246},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1615185292248},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1615185292210},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1615185292210},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1615185292211},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1615185292222},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1615185292223},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1615185292223},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1615185292223},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1615185292222},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1615185292223},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1615185292223},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1615185292224},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1615185292223},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1615185292224},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1615185292224},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1615185292224},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1615185292224},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1615185292224},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1615185292225},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1615185292225},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1615185292224},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1615185292224},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1615185292225},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1615185292215},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1615185292216},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1615185292216},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1615185292216},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1615185292217},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1615185292216},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1615185292217},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1615185292217},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1615185292217},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1615185292217},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1615185292217},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1615185292217},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1615185292218},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1615185292218},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1615185292218},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1615185292218},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1615185292218},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1615185292221},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1615185292221},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1615185292212},{"_id":"themes/pure/_source/_data/links.yml","hash":"8dc7c472280b36c3cf1823459a5086a827d9c992","modified":1615192245291},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1615185292221},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1615185292212},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1615185292213},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1615185292213},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1615185292214},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1615185292214},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1615185292213},{"_id":"themes/pure/_source/links/index.md","hash":"a1e612897fb6e0ddff25c92fef8352beddfd3080","modified":1615192675075},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1615185292249},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1615185292249},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1615185292251},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1615185292251},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1615185292254},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1615185292252},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1615185292255},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1615185292254},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1615185292255},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1615185292255},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1615185292221},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1615185292221},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1615185292221},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1615185292222},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1615185292222},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1615185292221},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1615185292222},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1615185292222},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1615185292222},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1615185292222},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1615185292219},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1615185292222},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1615185292219},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1615185292220},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1615185292219},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1615185292219},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1615185292220},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1615185292220},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1615185292220},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1615185292220},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1615185292220},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1615185292220},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1615185292253},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1615185292252},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1615185292220},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1615185292253},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1615185292253},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1615185292254},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1615185292233},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1615185292231},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1615185292230},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1615185292232},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1615185292229},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1615185292260},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1615185292256},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1615185292258},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1615185292247},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1615185292250},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1615185292248},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1615185292259},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1615185292246},{"_id":"themes/pure/tags","hash":"7c863be43db3216880d267b84a7fc1324e1616d1","modified":1615186299402},{"_id":"source/_posts/2011/2011-04-13-ubuntu-grub-rescue.md","hash":"3daa6a7a1b2e378d46201729036fa7d2227343ec","modified":1615188459523},{"_id":"source/_posts/2011/2011-07-15-ie-png-opacity.md","hash":"e70eccdd1f3e5f9a80199a72ee2f2e15c9739b04","modified":1615187843581},{"_id":"source/_posts/2011/2011-04-23-DedeCMS-Run-PHP.md","hash":"5809a4bb0b1da56824e25624e899fa613c24f85b","modified":1615187843539},{"_id":"source/_posts/2011/2011-02-26-php-compress-css.md","hash":"e4c484341619dfb6a1b864f0e88fe0db13583ecf","modified":1615187747829},{"_id":"source/_posts/2011/2011-04-05-linux-directory.md","hash":"087825e04ebc5d50927958df030b72fb249dd513","modified":1615188057676},{"_id":"source/_posts/2011/2011-04-12-vim-tip.md","hash":"d45f008866d5e420f45228903bb13b5691f231d1","modified":1615187807718},{"_id":"source/_posts/2011/2011-12-17-codeigniter-get-domain.md","hash":"d6880117c2e4a243990bc32eab91c8aec7a7826f","modified":1615187843629},{"_id":"source/_posts/tpl.md","hash":"20a884b63f97be32360f4d4c018d8f60a5a27542","modified":1615187331567},{"_id":"source/_posts/write_blog_mac","hash":"35dc57a2a0624fd2cfa8339d972bf80815ec6cd4","modified":1615187000042},{"_id":"source/_posts/write_blog","hash":"15a71fd96c6b087542aa006091e4af009b4caf67","modified":1615187000024},{"_id":"source/_posts/2012/2012-07-06-regx.md","hash":"39b56c93464a0e54dc862b5af29f2ba940b2e0f6","modified":1615188035492},{"_id":"source/_posts/2012/2012-07-29-php-tip.md","hash":"fba88fe1594cd0015264d561fc4626a997ac247c","modified":1615188035537},{"_id":"source/_posts/2012/2012-08-27-ubuntu-vsftp-add-user.md","hash":"692fad9b5b2e10044f6f1fb368f9263111025fee","modified":1615188035613},{"_id":"source/_posts/2012/2012-07-06-h2ero-new-blog-new-life.md","hash":"1533a8acb257a0b8f10ca6e748b9626ed314c219","modified":1615188035439},{"_id":"source/_posts/2012/2012-08-02-hack-website.md","hash":"e4ab2c4a47aaea28c0bcb340f7293bdd13aa3de2","modified":1615188035571},{"_id":"source/_posts/2012/2012-11-29-jvi-netbeans.md","hash":"55b9f6beca45304f097b883bfcce4f93e17d880b","modified":1615188035716},{"_id":"source/_posts/2012/2012-12-18-YouTube_Google_Analytics.md","hash":"f75e73611086fced3bb87bae1d13a447ba33bd9c","modified":1615188314997},{"_id":"source/_posts/wiki/2012-09-01-shell-wiki.md","hash":"e4dacee95edf730e047075975a9e912fb4adfbe2","modified":1615188036023},{"_id":"source/_posts/2012/2012-11-25-Mac-SMTP-Postfix-enable.md","hash":"7f84e6be96205c3b57bf2183824aef534dc67eb8","modified":1615188035689},{"_id":"source/_posts/2012/2012-11-25-fuelphp-multisit.md","hash":"32bb103c9e8a5bf58dcae4a015db2de4d0cdaf9c","modified":1615188035649},{"_id":"source/_posts/2012/2012-12-09-spider.md","hash":"db89875132a8faae5d9466d75484eaaeaf875d97","modified":1615188035749},{"_id":"source/_posts/wiki/2012-09-22-Git-wiki.md","hash":"a162ddd761810d4bbfd167a40f6681c4d017c61d","modified":1615188035334},{"_id":"source/_posts/2013/2013-01-24-2012.md","hash":"5dd094b26fdfde6a926fbd0caa7b26d5510bb954","modified":1615188499147},{"_id":"source/_posts/2012/2012-05-06-ie-min-height-css-hack.md","hash":"e966d899361670e5f59b42a71685a9269bd88c84","modified":1615188035388},{"_id":"source/_posts/wiki/2012-09-04-vim-wiki.md","hash":"73960e758bb227cb78837a4c81963a2097bed111","modified":1615188036093},{"_id":"source/_posts/wiki/2012-11-18-mysql-wiki.md","hash":"9dabae6fea36a2b5c9d976fb8fa14a26aede9e65","modified":1615188036139},{"_id":"source/_posts/wiki/tpl.md","hash":"30bd4ee30d225672972b293aa018f0bf2ea59496","modified":1615187331674},{"_id":"source/_posts/wiki/.2012-09-22-Git-wiki.md.swp","hash":"0b00085ce7b568dba49335c16062a82ef6f9f97b","modified":1615188045716},{"_id":"source/_posts/2011/.2011-02-26-php-compress-css.md.swp","hash":"5395ae9dc2b8ce4ac52f8a2d5e79208ff5dad8ad","modified":1615187793498},{"_id":"source/_posts/2011/.2011-04-05-linux-directory.md.swp","hash":"93eb76189b1f2a9ac421b7567d9b14a4591a77ac","modified":1615188069929},{"_id":"source/_posts/2011/.2011-04-12-vim-tip.md.swp","hash":"f749cdb6cf2689d6b905c9f9062c4f3333345f85","modified":1615187864609},{"_id":"source/_posts/2011/.2011-04-13-ubuntu-grub-rescue.md.swp","hash":"ee7e62c28f4a22059c9d6aa9790a965117331527","modified":1615188523659},{"_id":"source/_posts/2011/.2011-04-23-DedeCMS-Run-PHP.md.swp","hash":"20795fb2ce83a18098413bb2f81cd5162693d012","modified":1615187864609},{"_id":"source/_posts/2011/.2011-07-15-ie-png-opacity.md.swp","hash":"ec6336614adc562d1409a235c5581b8d305fc820","modified":1615187864609},{"_id":"source/_posts/2011/.2011-12-17-codeigniter-get-domain.md.swp","hash":"8ded835386db8b5c6aecba82bd4137bcd1bcef12","modified":1615187864609},{"_id":"source/_posts/2012/.2012-05-06-ie-min-height-css-hack.md.swp","hash":"9a8f235d83e46d34196113b68d47987b5963324d","modified":1615188045716},{"_id":"source/_posts/2012/.2012-07-06-h2ero-new-blog-new-life.md.swp","hash":"b7327ae70cff4ed1ea0dc95a5ce5d42b8772e7d1","modified":1615188045716},{"_id":"source/_posts/2012/.2012-07-06-regx.md.swp","hash":"8a5a6e97261ddfd542678ba6930d0e0964595e84","modified":1615188045716},{"_id":"source/_posts/2012/.2012-07-29-php-tip.md.swp","hash":"e28ae68755846f9d7adca24c6ccfc57f1db069dd","modified":1615188045716},{"_id":"source/_posts/2012/.2012-08-02-hack-website.md.swp","hash":"293883de81febd08da75146d8021098dbcef5e03","modified":1615188045716},{"_id":"source/_posts/2012/.2012-08-27-ubuntu-vsftp-add-user.md.swp","hash":"5f8f5fdfa6a0bbf5e1c846813e3b67c0b4046345","modified":1615188045716},{"_id":"source/_posts/2012/.2012-11-25-Mac-SMTP-Postfix-enable.md.swp","hash":"cbdc6b0b61e1c395868d17b4427e86f38f236310","modified":1615188045716},{"_id":"source/_posts/2012/.2012-11-25-fuelphp-multisit.md.swp","hash":"236a19b8a36968c56663605b79670ad2c29a3962","modified":1615188045716},{"_id":"source/_posts/2012/.2012-11-29-jvi-netbeans.md.swp","hash":"0e6b2b381d873a8fbbb8ba765e6b9af6d4bfdc2e","modified":1615188045716},{"_id":"source/_posts/2012/.2012-12-09-spider.md.swp","hash":"adafba47c08c94ae67bbaa55f508ef9626f541cd","modified":1615188045716},{"_id":"source/_posts/2012/.2012-12-18-YouTube_Google_Analytics.md.swp","hash":"1fc165bec412d78b55272b5ee936bc7013c12c81","modified":1615188327311},{"_id":"source/_posts/wiki/.2012-09-01-shell-wiki.md.swp","hash":"3aec3a23fe08945c5cee3b966ee9912df7c6f9d8","modified":1615188045716},{"_id":"source/_posts/wiki/.2012-09-04-vim-wiki.md.swp","hash":"ed9c16f49420a693c5f867768402ab6b2758cfc6","modified":1615188045716},{"_id":"source/_posts/wiki/.2012-11-18-mysql-wiki.md.swp","hash":"cf5274063d24d69907faba36c6a9164ad1a54b8b","modified":1615188045717},{"_id":"source/_posts/2013/.2013-01-24-2012.md.swp","hash":"b094727cb6779c1694bc7548d04004d81aeae4f9","modified":1615188523659},{"_id":"themes/pure/._config.yml.swp","hash":"3b7afdd3fd7d8a8ca9340440acb4fdfbe7a7a2ce","modified":1615192606817},{"_id":"themes/pure/languages/.default.yml.swp","hash":"cf64a1f4db3801303e280daadd475fe9afc2aa6e","modified":1615187684654},{"_id":"themes/pure/layout/.post.ejs.swp","hash":"ec0e2de53d8c99f8d0fd08f3fe4f82683c9818c5","modified":1615187667942},{"_id":"themes/pure/_source/repository/.index.md.swp","hash":"0dad1c8569d3beca9606c89633178becac198dfa","modified":1615187667942},{"_id":"themes/pure/_source/404/.index.md.swp","hash":"13a0b86c31faf4290e932cbb67281edcf42c4179","modified":1615192558405},{"_id":"source/.nojekyll","hash":"71853c6197a6a7f222db0f1978c7cb232b87c5ee","modified":1615191739980},{"_id":"public/baidusitemap.xml","hash":"d5e4ec707db20e354dca5b1b50499f0925de16f9","modified":1615191934502},{"_id":"public/atom.xml","hash":"900e336b231a17e6ff4fc525136eb61b658879ce","modified":1615191934502},{"_id":"public/content.json","hash":"055919ed00bcf5a84bc65a8ba8b88b1fb5ac61c7","modified":1615193786072},{"_id":"public/sitemap.xml","hash":"44f0e6643790e03d18e487efd9fb7425395cd285","modified":1615193786072},{"_id":"public/wiki/tpl.html","hash":"b2311a5a0d0490f31e98e1e47778a36eaed9eac4","modified":1615191934502},{"_id":"public/2013/2013-01-24-2012.html","hash":"0dbb96840f86b75d61c05f138a5cfc8ea348ef6a","modified":1615191934502},{"_id":"public/2012/2012-12-18-YouTube_Google_Analytics.html","hash":"9b4c2d9ca1c2d844bbd555139ff17f68b06d09a2","modified":1615191934502},{"_id":"public/2012/2012-12-09-spider.html","hash":"576fd38cc89c71bb4b2de2cbfe4649c6cbb6cd70","modified":1615191934502},{"_id":"public/2012/2012-11-29-jvi-netbeans.html","hash":"eac27f05cbbe18a292ca82d036d84222a032b063","modified":1615191934502},{"_id":"public/2012/2012-11-25-Mac-SMTP-Postfix-enable.html","hash":"9921855267906c8e1c341941c657c11bb7679c64","modified":1615191934502},{"_id":"public/2012/2012-11-25-fuelphp-multisit.html","hash":"f05e6177e6c38340c4160b957ae9e6b1756f4e96","modified":1615191934502},{"_id":"public/wiki/2012-09-22-Git-wiki.html","hash":"d80f54962caae51bc1caa3b4328305645ae37bdc","modified":1615191934502},{"_id":"public/wiki/2012-11-18-mysql-wiki.html","hash":"7865d7d0cab388a95503e03247b4f7ad18440846","modified":1615191934502},{"_id":"public/wiki/2012-09-04-vim-wiki.html","hash":"b149f236d6a7b92bf529058a725986b3beb3da9c","modified":1615191934502},{"_id":"public/wiki/2012-09-01-shell-wiki.html","hash":"c98e4f4a1de0e65892ac40562447cd37270e1d47","modified":1615191934502},{"_id":"public/2012/2012-08-02-hack-website.html","hash":"1fbd01b13edf0ad13a5b78e06d63d2f21f4d5827","modified":1615191934502},{"_id":"public/2012/2012-08-27-ubuntu-vsftp-add-user.html","hash":"c82cf641e8a9576fb60f4f0bff6c64d8d3e649d6","modified":1615191934502},{"_id":"public/2012/2012-07-29-php-tip.html","hash":"1062267d36cfa2cfeef1577bad5c9e424718c74d","modified":1615191934502},{"_id":"public/2012/2012-07-06-regx.html","hash":"a26052717cc278167a126d8cf4f8e0169371b5b0","modified":1615191934502},{"_id":"public/2012/2012-05-06-ie-min-height-css-hack.html","hash":"bacb16285cb9d8c0450d642b54ab7124cebd45fa","modified":1615191934502},{"_id":"public/2012/2012-07-06-h2ero-new-blog-new-life.html","hash":"7105f3515ee018bd4eb0e70e410ff6cde311ce40","modified":1615191934502},{"_id":"public/2011/2011-12-17-codeigniter-get-domain.html","hash":"69bbcd926569a75a8eb866c7602e0093fa332ee4","modified":1615191934502},{"_id":"public/2011/2011-07-15-ie-png-opacity.html","hash":"285f6a813c5456b84c3afd6a6ffb0cfd497568e3","modified":1615191934502},{"_id":"public/2011/2011-04-23-DedeCMS-Run-PHP.html","hash":"c3bab854bae420b535c924caa2158d6e619b3a4c","modified":1615191934502},{"_id":"public/2011/2011-04-12-vim-tip.html","hash":"127df1a92623a9202947727792af39362a551407","modified":1615191934502},{"_id":"public/2011/2011-04-13-ubuntu-grub-rescue.html","hash":"fb31c3dd4acce5fbf4f5b63184960ffae8384735","modified":1615191934502},{"_id":"public/2011/2011-04-05-linux-directory.html","hash":"7ed56d1e0f6695d8c2cca9a8dc7e3da0eaf3dfd3","modified":1615191934502},{"_id":"public/archives/index.html","hash":"119353377c0489a1a4c21e5c922208b0b295af1a","modified":1615191934502},{"_id":"public/2011/2011-02-26-php-compress-css.html","hash":"97c8a1f5b474e233dba8cd585b34afb275f4b018","modified":1615191934502},{"_id":"public/archives/page/2/index.html","hash":"e982fff9ae55f002f6885d50003fb68f863f5b78","modified":1615191934502},{"_id":"public/archives/page/3/index.html","hash":"53be179dba0f4b1b7bf9d6fbe3d4fa622d8a0331","modified":1615191934502},{"_id":"public/archives/2011/index.html","hash":"dc4f1d8f30a0c7ece234486d4b60e5b054f9002f","modified":1615191934502},{"_id":"public/archives/2011/02/index.html","hash":"6d0b958718f54cf4900dd61c95aa257bf945e125","modified":1615191934502},{"_id":"public/archives/2011/04/index.html","hash":"ed6e273f7bc92ca9adbc8af285390f40fc5e5d84","modified":1615191934502},{"_id":"public/archives/2011/07/index.html","hash":"fbd9ca0292696556c720105d6bd7f3108d00b2b1","modified":1615191934502},{"_id":"public/archives/2011/12/index.html","hash":"b72f50082471e245755da5c58b34ecd07e1fc39a","modified":1615191934502},{"_id":"public/archives/2012/index.html","hash":"068b095d07b4a2692bf5453775f09dad2276d199","modified":1615191934502},{"_id":"public/archives/2012/page/2/index.html","hash":"3dfdc5fcb89dde3d050e4649784d3b5bade4bdcd","modified":1615191934502},{"_id":"public/archives/2012/05/index.html","hash":"653cc29c01c45114ef31865bb405cc2dcda764ae","modified":1615191934502},{"_id":"public/archives/2012/07/index.html","hash":"ce764adeeb26360a6ce5426b199933d5c2f1cd06","modified":1615191934502},{"_id":"public/archives/2012/08/index.html","hash":"555fb5791b2073f0865df7c755abbdb016d7b997","modified":1615191934502},{"_id":"public/archives/2012/09/index.html","hash":"dbfe45ddd226b5ebeaca851771dcd45a76ff81e9","modified":1615191934502},{"_id":"public/archives/2012/11/index.html","hash":"1d11f221358f0ed59ee2862ae9610c2837b5d703","modified":1615191934502},{"_id":"public/archives/2012/12/index.html","hash":"42c5a12b2a00005080a8d89e3ca94bdcdc9c5ecd","modified":1615191934502},{"_id":"public/archives/2013/index.html","hash":"0e550ad801f69e89db493225fcc6f63545274245","modified":1615191934502},{"_id":"public/archives/2013/01/index.html","hash":"931532897e52eb80d6f87b7cc976afe8ea540ce3","modified":1615191934502},{"_id":"public/archives/2021/index.html","hash":"c94cd2a6890b4c8504bcedf40548d64bbada145c","modified":1615191934502},{"_id":"public/archives/2021/03/index.html","hash":"a82ac7f6e1f4fc51742abb9b3b157e3e0126c045","modified":1615191934502},{"_id":"public/categories/linux/index.html","hash":"04bd1d2a433aab963533b75e0fbb9b36cdc3ea10","modified":1615191934502},{"_id":"public/categories/php/index.html","hash":"e20600407dc913bd43262cfc428bb0c262ae8883","modified":1615191934502},{"_id":"public/categories/web/index.html","hash":"ce91468bd3ea05a8255cd696f6d329016115153d","modified":1615191934502},{"_id":"public/categories/wiki/index.html","hash":"306c6269f72aaad322541efa2f39f59e2c5529cb","modified":1615191934502},{"_id":"public/categories/mysql/index.html","hash":"d8e445d692f89af429618b38812b0d78acdda7a6","modified":1615191934502},{"_id":"public/categories/note/index.html","hash":"9e6bf61b43c2e2d974453fcbbe33124ddd52ba14","modified":1615191934502},{"_id":"public/categories/hack/index.html","hash":"d9ab19d5912ac784877c3e37b47c28d4d7a788fe","modified":1615191934502},{"_id":"public/categories/mac/index.html","hash":"175718b7d88374017e67bef834136539322d0c6a","modified":1615191934502},{"_id":"public/categories/plugin/index.html","hash":"d5d177d41234e33957f8f1bf9db7f2479d33e34f","modified":1615191934502},{"_id":"public/categories/self/index.html","hash":"0b1e72600ac0ca888abecbdc350a1484063040ab","modified":1615191934502},{"_id":"public/index.html","hash":"476f7759dd0abb67c5bba82c7f799a43ef1954b8","modified":1615191934502},{"_id":"public/page/2/index.html","hash":"662ece0f2e6ae2a010cc55a3e0f058b20fe35b3c","modified":1615191934502},{"_id":"public/page/3/index.html","hash":"af1a855121b8ecf5d3b2c1b8ca30224ed6139b1b","modified":1615191934502},{"_id":"public/tags/vim/index.html","hash":"198450868538bf08c4bfca50d43c92cb835580c7","modified":1615191934502},{"_id":"public/tags/dedecms/index.html","hash":"e4b95e697af87a2a28100e89a176793b18e58a9b","modified":1615191934502},{"_id":"public/tags/IE6/index.html","hash":"282b37d2c162c5034e891eb6a7697174aaee3563","modified":1615191934502},{"_id":"public/tags/css-compression/index.html","hash":"9594241aebbb2aebd57c47c76916147153f58272","modified":1615191934502},{"_id":"public/tags/codeigniter/index.html","hash":"f85ad3e2f4dccbc11bce4ff9dcf216a057b98969","modified":1615191934502},{"_id":"public/tags/shell-terminator/index.html","hash":"7dc42120160ce8b5a50a868145d4d3d57e2f855d","modified":1615191934502},{"_id":"public/tags/git/index.html","hash":"1aa31313c342a95ae0ecc070d53621a5e5e463ad","modified":1615191934502},{"_id":"public/tags/mysql/index.html","hash":"1452d597055bad55caaa99c7f98da05dfc0e23f9","modified":1615191934502},{"_id":"public/tags/css/index.html","hash":"dbbdeace5842e1120fd4744b4fcc5ad913bb0962","modified":1615191934502},{"_id":"public/tags/php-javascript/index.html","hash":"fd1a08fa3da347b23024706b8b17170b7a7ea0fb","modified":1615191934502},{"_id":"public/tags/Postfix-Mac-SMTP/index.html","hash":"703b8db9c8c61aed1583ec559b8dd03f080a6e2a","modified":1615191934502},{"_id":"public/tags/vsftpd-ubuntu-ftp/index.html","hash":"a0f5a57bcef66664ad96d2f1c98fdb94205c15c2","modified":1615191934502},{"_id":"public/tags/fuelphp-php-framework/index.html","hash":"51258ea6b6063d6b4cd7acb43cc7f3ac53f383c2","modified":1615191934502},{"_id":"public/tags/netbens-jVi-plugin/index.html","hash":"8a2f25fa65b4e010c04a6b638437d95f44eb3dbf","modified":1615191934502},{"_id":"public/tags/Youtube-GoogleAnalytics/index.html","hash":"ebfdc04d60b89ef07cf2072f9dd1488225fd62fd","modified":1615191934502},{"_id":"public/tags/search/index.html","hash":"df6d4d8be6e5907ddad844842e097743772cf55e","modified":1615191934502},{"_id":"public/.nojekyll","hash":"71853c6197a6a7f222db0f1978c7cb232b87c5ee","modified":1615191934502},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1615191934502},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1615191934502},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1615191934502},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1615191934502},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1615191934502},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1615191934502},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1615191934502},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1615191934502},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1615191934502},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1615191934502},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1615191934502},{"_id":"themes/pure/source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1615192153962},{"_id":"themes/pure/source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1615192121974},{"_id":"themes/pure/source/links/.index.md.swp","hash":"e8d0f1ca4e63490b8d68c3229172a5443f544013","modified":1615192139125},{"_id":"themes/pure/source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1615192139124},{"_id":"themes/pure/source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1615192147255},{"_id":"public/books/index.html","hash":"c1c95eac6ca915e706c543f7287c992e9fb088cf","modified":1615193786072},{"_id":"public/links/index.html","hash":"531a9609fa6c095a81e8b535641f2942119d43aa","modified":1615193786072},{"_id":"public/tags/index.html","hash":"0f7c5eff01a8ab5f4741575192bb4d7ea96e2436","modified":1615193786072},{"_id":"public/categories/index.html","hash":"97af19b19589b453a17a5ad52228e4348850da99","modified":1615193786072},{"_id":"themes/pure/source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1615192316832},{"_id":"themes/pure/source/_data/.gallery.yml.swp","hash":"6181569df68b87f136229c58bbc2a344e3ad4ff7","modified":1615192366684},{"_id":"themes/pure/source/_data/.links.yml.swp","hash":"69ce0cfbe1846e8c0c3b321f5c7d2727d0c34f72","modified":1615192386378},{"_id":"themes/pure/source/_data/links.yml","hash":"16280d47b6f9a560d06093c9e96e39890b04d66a","modified":1615192378254},{"_id":"themes/pure/source/404/.index.md.swp","hash":"b0519356dec5918783f035a7a009ca0de11b869f","modified":1615192550293},{"_id":"themes/pure/source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1615192550293},{"_id":"themes/pure/_source/links/.index.md.swp","hash":"5897d28c88432079c7d9050c7d40ba722e6ecec8","modified":1615192624525},{"_id":"source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1615192746291},{"_id":"source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1615192746293},{"_id":"source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1615192746292},{"_id":"source/_data/links.yml","hash":"383a7e7c008495645b5151ec370f137444d580af","modified":1615193738564},{"_id":"source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1615192746294},{"_id":"source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1615192746294},{"_id":"source/links/index.md","hash":"a1e612897fb6e0ddff25c92fef8352beddfd3080","modified":1615192746295},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1615192746296},{"_id":"source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1615192746297},{"_id":"public/404.html","hash":"cc330a96a82a90e8eee6ef9c80bbe8c690217845","modified":1615193786072},{"_id":"public/about/index.html","hash":"bf4fa8b1488e63fac446333cb8ac2842ac904dc4","modified":1615193786072},{"_id":"public/repository/index.html","hash":"76ff8b04407885bbd4d89e20a1b50c1e3696108c","modified":1615193786072},{"_id":"public/404/index.html","hash":"ab3ab1dcd85b4e598f700882fdc7eaddfb961ea8","modified":1615193786072}],"Category":[{"name":"linux","_id":"ckm08nrdu0002gcu1bxn71lw2"},{"name":"php","_id":"ckm08nre1000egcu1ahky03le"},{"name":"web","_id":"ckm08nre2000igcu1193peoww"},{"name":"wiki","_id":"ckm08nri7000wgcu14cry07ri"},{"name":"mysql","_id":"ckm08nrid0019gcu1dwc3h4dr"},{"name":"note","_id":"ckm08nrio001kgcu15mfmh003"},{"name":"hack","_id":"ckm08nrit001qgcu1dznwhall"},{"name":"mac","_id":"ckm08nriv001wgcu1ercdfm7z"},{"name":"plugin","_id":"ckm08nriz0023gcu19mmfhr0m"},{"name":"self","_id":"ckm08nrj00029gcu1fkqu2y1k"}],"Data":[{"_id":"gallery","data":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}},{"_id":"links","data":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","date":"2021-03-08T08:39:06.291Z","updated":"2021-03-08T08:39:06.291Z","path":"/404.html","layout":"page","_id":"ckm0coecl0000cxu1365ah3ow","content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n"},{"title":"关于","description":"个人简介","layout":"about","comments":0,"sidebar":"custom","_content":"个人详细介绍","source":"about/index.md","raw":"---\ntitle: 关于\ndescription: 个人简介\nlayout: about\ncomments: false\nsidebar: custom\n---\n个人详细介绍","date":"2021-03-08T08:39:06.293Z","updated":"2021-03-08T08:39:06.293Z","path":"about/index.html","_id":"ckm0coeco0001cxu19szu43ns","content":"<p>个人详细介绍</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}},"excerpt":"","more":"<p>个人详细介绍</p>\n"},{"title":"书单","layout":"books","comments":0,"sidebar":"none","_content":"","source":"books/index.md","raw":"---\ntitle: 书单\nlayout: books\ncomments: false\nsidebar: none\n---","date":"2021-03-08T08:39:06.294Z","updated":"2021-03-08T08:39:06.294Z","path":"books/index.html","_id":"ckm0coecp0002cxu1g1nugrem","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}},"excerpt":"","more":""},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2021-03-08T08:39:06.295Z","updated":"2021-03-08T08:39:06.294Z","path":"categories/index.html","_id":"ckm0coecp0003cxu10a2nhf5u","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}},"excerpt":"","more":""},{"title":"友情链接","layout":"links","comments":1,"sidebar":"none","_content":"","source":"links/index.md","raw":"---\ntitle: 友情链接\nlayout: links\ncomments: true\nsidebar: none\n---\n","date":"2021-03-08T08:39:06.295Z","updated":"2021-03-08T08:39:06.295Z","path":"links/index.html","_id":"ckm0coecq0004cxu1658o8ydd","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}},"excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2021-03-08T08:39:06.296Z","updated":"2021-03-08T08:39:06.296Z","path":"repository/index.html","_id":"ckm0coecq0005cxu1htg1dvio","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}},"excerpt":"","more":""},{"title":"标签","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\ncomments: false\n---\n","date":"2021-03-08T08:39:06.297Z","updated":"2021-03-08T08:39:06.297Z","path":"tags/index.html","_id":"ckm0coecs0006cxu13sfg2wne","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"阿小信大人":{"link":"http://www.axiaoxin.com/","avatar":"http://www.axiaoxin.com/static/img/icon.png","desc":"阿小信大人"}}}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"Ubuntu等Linux系统文件目录作用","date":"2011-04-04T16:00:00.000Z","_content":"```\n/bin 二进制可执行命令\n/dev 设备特殊文件\n/etc 系统管理和配置文件\n/etc/rc.d 启动的配置文件和脚本\n/home 用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示\n/lib 标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件\n/sbin 系统管理命令，这里存放的是系统管理员使用的管理程序\n/tmp 公用的临时文件存储点\n/root 系统管理员的主目录（呵呵，特权阶级）\n/mnt 系统提供这个目录是让用户临时挂载其他的文件系统。\n/lost+found 这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里\n/proc 虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。\n/var 某些大文件的溢出区，比方说各种服务的日志文件\n/usr 最庞大的目录，要用到的应用程序和文件几乎都在这个目录。其中包含：\n/usr/X11R6 存放X window的目录\n/usr/bin 众多的应用程序\n/usr/sbin 超级用户的一些管理程序\n/usr/doc linux文档\n/usr/include linux下开发和编译应用程序所需要的头文件\n/usr/lib 常用的动态链接库和软件包的配置文件\n/usr/man 帮助文档\n/usr/src 源代码，linux内核的源代码就放在/usr/src/linux里\n/usr/local/bin 本地增加的命令\n/usr/local/lib 本地增加的库\n```\n\n","source":"_posts/2011/2011-04-05-linux-directory.md","raw":"---\nlayout: post\ntitle: Ubuntu等Linux系统文件目录作用\ntags: \ndate: 2011-04-05\ncategories: linux\n---\n```\n/bin 二进制可执行命令\n/dev 设备特殊文件\n/etc 系统管理和配置文件\n/etc/rc.d 启动的配置文件和脚本\n/home 用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示\n/lib 标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件\n/sbin 系统管理命令，这里存放的是系统管理员使用的管理程序\n/tmp 公用的临时文件存储点\n/root 系统管理员的主目录（呵呵，特权阶级）\n/mnt 系统提供这个目录是让用户临时挂载其他的文件系统。\n/lost+found 这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里\n/proc 虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。\n/var 某些大文件的溢出区，比方说各种服务的日志文件\n/usr 最庞大的目录，要用到的应用程序和文件几乎都在这个目录。其中包含：\n/usr/X11R6 存放X window的目录\n/usr/bin 众多的应用程序\n/usr/sbin 超级用户的一些管理程序\n/usr/doc linux文档\n/usr/include linux下开发和编译应用程序所需要的头文件\n/usr/lib 常用的动态链接库和软件包的配置文件\n/usr/man 帮助文档\n/usr/src 源代码，linux内核的源代码就放在/usr/src/linux里\n/usr/local/bin 本地增加的命令\n/usr/local/lib 本地增加的库\n```\n\n","slug":"2011/2011-04-05-linux-directory","published":1,"updated":"2021-03-08T07:20:57.676Z","_id":"ckm08nrdo0000gcu1gksfdsmp","comments":1,"photos":[],"link":"","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;bin 二进制可执行命令</span><br><span class=\"line\">&#x2F;dev 设备特殊文件</span><br><span class=\"line\">&#x2F;etc 系统管理和配置文件</span><br><span class=\"line\">&#x2F;etc&#x2F;rc.d 启动的配置文件和脚本</span><br><span class=\"line\">&#x2F;home 用户主目录的基点，比如用户user的主目录就是&#x2F;home&#x2F;user，可以用~user表示</span><br><span class=\"line\">&#x2F;lib 标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件</span><br><span class=\"line\">&#x2F;sbin 系统管理命令，这里存放的是系统管理员使用的管理程序</span><br><span class=\"line\">&#x2F;tmp 公用的临时文件存储点</span><br><span class=\"line\">&#x2F;root 系统管理员的主目录（呵呵，特权阶级）</span><br><span class=\"line\">&#x2F;mnt 系统提供这个目录是让用户临时挂载其他的文件系统。</span><br><span class=\"line\">&#x2F;lost+found 这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里</span><br><span class=\"line\">&#x2F;proc 虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。</span><br><span class=\"line\">&#x2F;var 某些大文件的溢出区，比方说各种服务的日志文件</span><br><span class=\"line\">&#x2F;usr 最庞大的目录，要用到的应用程序和文件几乎都在这个目录。其中包含：</span><br><span class=\"line\">&#x2F;usr&#x2F;X11R6 存放X window的目录</span><br><span class=\"line\">&#x2F;usr&#x2F;bin 众多的应用程序</span><br><span class=\"line\">&#x2F;usr&#x2F;sbin 超级用户的一些管理程序</span><br><span class=\"line\">&#x2F;usr&#x2F;doc linux文档</span><br><span class=\"line\">&#x2F;usr&#x2F;include linux下开发和编译应用程序所需要的头文件</span><br><span class=\"line\">&#x2F;usr&#x2F;lib 常用的动态链接库和软件包的配置文件</span><br><span class=\"line\">&#x2F;usr&#x2F;man 帮助文档</span><br><span class=\"line\">&#x2F;usr&#x2F;src 源代码，linux内核的源代码就放在&#x2F;usr&#x2F;src&#x2F;linux里</span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;bin 本地增加的命令</span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;lib 本地增加的库</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;bin 二进制可执行命令</span><br><span class=\"line\">&#x2F;dev 设备特殊文件</span><br><span class=\"line\">&#x2F;etc 系统管理和配置文件</span><br><span class=\"line\">&#x2F;etc&#x2F;rc.d 启动的配置文件和脚本</span><br><span class=\"line\">&#x2F;home 用户主目录的基点，比如用户user的主目录就是&#x2F;home&#x2F;user，可以用~user表示</span><br><span class=\"line\">&#x2F;lib 标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件</span><br><span class=\"line\">&#x2F;sbin 系统管理命令，这里存放的是系统管理员使用的管理程序</span><br><span class=\"line\">&#x2F;tmp 公用的临时文件存储点</span><br><span class=\"line\">&#x2F;root 系统管理员的主目录（呵呵，特权阶级）</span><br><span class=\"line\">&#x2F;mnt 系统提供这个目录是让用户临时挂载其他的文件系统。</span><br><span class=\"line\">&#x2F;lost+found 这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里</span><br><span class=\"line\">&#x2F;proc 虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。</span><br><span class=\"line\">&#x2F;var 某些大文件的溢出区，比方说各种服务的日志文件</span><br><span class=\"line\">&#x2F;usr 最庞大的目录，要用到的应用程序和文件几乎都在这个目录。其中包含：</span><br><span class=\"line\">&#x2F;usr&#x2F;X11R6 存放X window的目录</span><br><span class=\"line\">&#x2F;usr&#x2F;bin 众多的应用程序</span><br><span class=\"line\">&#x2F;usr&#x2F;sbin 超级用户的一些管理程序</span><br><span class=\"line\">&#x2F;usr&#x2F;doc linux文档</span><br><span class=\"line\">&#x2F;usr&#x2F;include linux下开发和编译应用程序所需要的头文件</span><br><span class=\"line\">&#x2F;usr&#x2F;lib 常用的动态链接库和软件包的配置文件</span><br><span class=\"line\">&#x2F;usr&#x2F;man 帮助文档</span><br><span class=\"line\">&#x2F;usr&#x2F;src 源代码，linux内核的源代码就放在&#x2F;usr&#x2F;src&#x2F;linux里</span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;bin 本地增加的命令</span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;lib 本地增加的库</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"vim命令拾遗","date":"2011-04-12T16:00:00.000Z","_content":"```\nH M L 移动光标到屏幕的上/中/下\n* 读取光标处的字符串 移动到再次出现的地方 # 为反向\n| 移动列\n+/- 移动到下/上N行非空白字符前\n(/）移动到上/下一个句子\nCtrl+u/d 上下翻页 相当于pagedown pageup\nCtrl+f/b 下上一屏\n\nCtrl+i/o 跳转到较早/较晚的地方，\n:marks  列出所有的标记\nm{a-zA-Z}\t用标记 {a-zA-Z} 记录当前位置\n`{a-z}\t\t至当前文件中的标记 {a-z}\n`{A-Z}\t\t至任何文件中的标记 {A-Z}\n`{0-9}\t\t至 Vim 上次退出的位置\n``\t\t\t至上次跳转之前的位置\n`\"\t\t\t至上次编辑此文件的位置\n`[\t\t\t至上次被操作或放置的文本的开始\n`]\t\t\t至上次被操作或放置的文本的结尾\n`<\t\t\t至 (前次) 可视区域的开始\n`>\t\t\t至 (前次) 可视区域的结尾\n`.\t\t\t至当前文件最后被改动的位置\n\nd 删除 dd dw de(不包括空格) d$ d^ d2as  “aw”一个单词（a word）、”as”一个句子（a sentence）、”ap”一个段落（a paragraph）\ni 插入  6if esc 插入6个f，css中常用\nU 撤销所有\nCtrl+R 撤销撤销的\ncw 改变单词部分或者全部c$/^改变行尾或行首\n% 匹配(){}[]等等\n: (%这个文件替换)s/replaced/replaced（/g全行替换/c询问用户替换）\n:#,#s/old/new/g (两行中间替换)\nCtrl+N/P 关键词自动补全 前提输入过的\nCtrl+g 显示文件所在位置，和光标所在位置\nw 保存 #,#w filename 保存部分行\nr 读取文件进来\nset xxx 设置 xxx 选项 如 set ic /set hls is\nq/ q? 显示搜索命令历史的窗口\nC-z fg或者:sh exit 切换到shell\nguw 将光标所在的单词变为小写\nguw 将光标所在的单词变为小写\ngUw 将光标所在的单词变为大写\nguu 光标所在的行所有字符变为小写\ngUU 光标所在的行所有字符变为大写\ng~~ 光标所在的行所有字符大小写反向转换\n:1,$!sort 将文件内的所有内容排序\nga 显示光标所在字符的内码（包括十进制码，十六进制码以及八进制码）\nShift-k 查找光标所在命令或函数的 man 帮助\nq: 显示命令行命令历史的窗口\n:help 帮助\ngR gr 替换保持布局\n<< >> 左右移动\n>3j 下面三行右移动\nV以行开始高亮\ngv高亮上次高亮的\n```\n","source":"_posts/2011/2011-04-12-vim-tip.md","raw":"---\nlayout: post\ntitle: vim命令拾遗\ntags: vim\ndate: 2011-04-13\ncategories: linux\n---\n```\nH M L 移动光标到屏幕的上/中/下\n* 读取光标处的字符串 移动到再次出现的地方 # 为反向\n| 移动列\n+/- 移动到下/上N行非空白字符前\n(/）移动到上/下一个句子\nCtrl+u/d 上下翻页 相当于pagedown pageup\nCtrl+f/b 下上一屏\n\nCtrl+i/o 跳转到较早/较晚的地方，\n:marks  列出所有的标记\nm{a-zA-Z}\t用标记 {a-zA-Z} 记录当前位置\n`{a-z}\t\t至当前文件中的标记 {a-z}\n`{A-Z}\t\t至任何文件中的标记 {A-Z}\n`{0-9}\t\t至 Vim 上次退出的位置\n``\t\t\t至上次跳转之前的位置\n`\"\t\t\t至上次编辑此文件的位置\n`[\t\t\t至上次被操作或放置的文本的开始\n`]\t\t\t至上次被操作或放置的文本的结尾\n`<\t\t\t至 (前次) 可视区域的开始\n`>\t\t\t至 (前次) 可视区域的结尾\n`.\t\t\t至当前文件最后被改动的位置\n\nd 删除 dd dw de(不包括空格) d$ d^ d2as  “aw”一个单词（a word）、”as”一个句子（a sentence）、”ap”一个段落（a paragraph）\ni 插入  6if esc 插入6个f，css中常用\nU 撤销所有\nCtrl+R 撤销撤销的\ncw 改变单词部分或者全部c$/^改变行尾或行首\n% 匹配(){}[]等等\n: (%这个文件替换)s/replaced/replaced（/g全行替换/c询问用户替换）\n:#,#s/old/new/g (两行中间替换)\nCtrl+N/P 关键词自动补全 前提输入过的\nCtrl+g 显示文件所在位置，和光标所在位置\nw 保存 #,#w filename 保存部分行\nr 读取文件进来\nset xxx 设置 xxx 选项 如 set ic /set hls is\nq/ q? 显示搜索命令历史的窗口\nC-z fg或者:sh exit 切换到shell\nguw 将光标所在的单词变为小写\nguw 将光标所在的单词变为小写\ngUw 将光标所在的单词变为大写\nguu 光标所在的行所有字符变为小写\ngUU 光标所在的行所有字符变为大写\ng~~ 光标所在的行所有字符大小写反向转换\n:1,$!sort 将文件内的所有内容排序\nga 显示光标所在字符的内码（包括十进制码，十六进制码以及八进制码）\nShift-k 查找光标所在命令或函数的 man 帮助\nq: 显示命令行命令历史的窗口\n:help 帮助\ngR gr 替换保持布局\n<< >> 左右移动\n>3j 下面三行右移动\nV以行开始高亮\ngv高亮上次高亮的\n```\n","slug":"2011/2011-04-12-vim-tip","published":1,"updated":"2021-03-08T07:16:47.718Z","_id":"ckm08nrds0001gcu18mx29uqa","comments":1,"photos":[],"link":"","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H M L 移动光标到屏幕的上&#x2F;中&#x2F;下</span><br><span class=\"line\">* 读取光标处的字符串 移动到再次出现的地方 # 为反向</span><br><span class=\"line\">| 移动列</span><br><span class=\"line\">+&#x2F;- 移动到下&#x2F;上N行非空白字符前</span><br><span class=\"line\">(&#x2F;）移动到上&#x2F;下一个句子</span><br><span class=\"line\">Ctrl+u&#x2F;d 上下翻页 相当于pagedown pageup</span><br><span class=\"line\">Ctrl+f&#x2F;b 下上一屏</span><br><span class=\"line\"></span><br><span class=\"line\">Ctrl+i&#x2F;o 跳转到较早&#x2F;较晚的地方，</span><br><span class=\"line\">:marks  列出所有的标记</span><br><span class=\"line\">m&#123;a-zA-Z&#125;\t用标记 &#123;a-zA-Z&#125; 记录当前位置</span><br><span class=\"line\">&#96;&#123;a-z&#125;\t\t至当前文件中的标记 &#123;a-z&#125;</span><br><span class=\"line\">&#96;&#123;A-Z&#125;\t\t至任何文件中的标记 &#123;A-Z&#125;</span><br><span class=\"line\">&#96;&#123;0-9&#125;\t\t至 Vim 上次退出的位置</span><br><span class=\"line\">&#96;&#96;\t\t\t至上次跳转之前的位置</span><br><span class=\"line\">&#96;&quot;\t\t\t至上次编辑此文件的位置</span><br><span class=\"line\">&#96;[\t\t\t至上次被操作或放置的文本的开始</span><br><span class=\"line\">&#96;]\t\t\t至上次被操作或放置的文本的结尾</span><br><span class=\"line\">&#96;&lt;\t\t\t至 (前次) 可视区域的开始</span><br><span class=\"line\">&#96;&gt;\t\t\t至 (前次) 可视区域的结尾</span><br><span class=\"line\">&#96;.\t\t\t至当前文件最后被改动的位置</span><br><span class=\"line\"></span><br><span class=\"line\">d 删除 dd dw de(不包括空格) d$ d^ d2as  “aw”一个单词（a word）、”as”一个句子（a sentence）、”ap”一个段落（a paragraph）</span><br><span class=\"line\">i 插入  6if esc 插入6个f，css中常用</span><br><span class=\"line\">U 撤销所有</span><br><span class=\"line\">Ctrl+R 撤销撤销的</span><br><span class=\"line\">cw 改变单词部分或者全部c$&#x2F;^改变行尾或行首</span><br><span class=\"line\">% 匹配()&#123;&#125;[]等等</span><br><span class=\"line\">: (%这个文件替换)s&#x2F;replaced&#x2F;replaced（&#x2F;g全行替换&#x2F;c询问用户替换）</span><br><span class=\"line\">:#,#s&#x2F;old&#x2F;new&#x2F;g (两行中间替换)</span><br><span class=\"line\">Ctrl+N&#x2F;P 关键词自动补全 前提输入过的</span><br><span class=\"line\">Ctrl+g 显示文件所在位置，和光标所在位置</span><br><span class=\"line\">w 保存 #,#w filename 保存部分行</span><br><span class=\"line\">r 读取文件进来</span><br><span class=\"line\">set xxx 设置 xxx 选项 如 set ic &#x2F;set hls is</span><br><span class=\"line\">q&#x2F; q? 显示搜索命令历史的窗口</span><br><span class=\"line\">C-z fg或者:sh exit 切换到shell</span><br><span class=\"line\">guw 将光标所在的单词变为小写</span><br><span class=\"line\">guw 将光标所在的单词变为小写</span><br><span class=\"line\">gUw 将光标所在的单词变为大写</span><br><span class=\"line\">guu 光标所在的行所有字符变为小写</span><br><span class=\"line\">gUU 光标所在的行所有字符变为大写</span><br><span class=\"line\">g~~ 光标所在的行所有字符大小写反向转换</span><br><span class=\"line\">:1,$!sort 将文件内的所有内容排序</span><br><span class=\"line\">ga 显示光标所在字符的内码（包括十进制码，十六进制码以及八进制码）</span><br><span class=\"line\">Shift-k 查找光标所在命令或函数的 man 帮助</span><br><span class=\"line\">q: 显示命令行命令历史的窗口</span><br><span class=\"line\">:help 帮助</span><br><span class=\"line\">gR gr 替换保持布局</span><br><span class=\"line\">&lt;&lt; &gt;&gt; 左右移动</span><br><span class=\"line\">&gt;3j 下面三行右移动</span><br><span class=\"line\">V以行开始高亮</span><br><span class=\"line\">gv高亮上次高亮的</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H M L 移动光标到屏幕的上&#x2F;中&#x2F;下</span><br><span class=\"line\">* 读取光标处的字符串 移动到再次出现的地方 # 为反向</span><br><span class=\"line\">| 移动列</span><br><span class=\"line\">+&#x2F;- 移动到下&#x2F;上N行非空白字符前</span><br><span class=\"line\">(&#x2F;）移动到上&#x2F;下一个句子</span><br><span class=\"line\">Ctrl+u&#x2F;d 上下翻页 相当于pagedown pageup</span><br><span class=\"line\">Ctrl+f&#x2F;b 下上一屏</span><br><span class=\"line\"></span><br><span class=\"line\">Ctrl+i&#x2F;o 跳转到较早&#x2F;较晚的地方，</span><br><span class=\"line\">:marks  列出所有的标记</span><br><span class=\"line\">m&#123;a-zA-Z&#125;\t用标记 &#123;a-zA-Z&#125; 记录当前位置</span><br><span class=\"line\">&#96;&#123;a-z&#125;\t\t至当前文件中的标记 &#123;a-z&#125;</span><br><span class=\"line\">&#96;&#123;A-Z&#125;\t\t至任何文件中的标记 &#123;A-Z&#125;</span><br><span class=\"line\">&#96;&#123;0-9&#125;\t\t至 Vim 上次退出的位置</span><br><span class=\"line\">&#96;&#96;\t\t\t至上次跳转之前的位置</span><br><span class=\"line\">&#96;&quot;\t\t\t至上次编辑此文件的位置</span><br><span class=\"line\">&#96;[\t\t\t至上次被操作或放置的文本的开始</span><br><span class=\"line\">&#96;]\t\t\t至上次被操作或放置的文本的结尾</span><br><span class=\"line\">&#96;&lt;\t\t\t至 (前次) 可视区域的开始</span><br><span class=\"line\">&#96;&gt;\t\t\t至 (前次) 可视区域的结尾</span><br><span class=\"line\">&#96;.\t\t\t至当前文件最后被改动的位置</span><br><span class=\"line\"></span><br><span class=\"line\">d 删除 dd dw de(不包括空格) d$ d^ d2as  “aw”一个单词（a word）、”as”一个句子（a sentence）、”ap”一个段落（a paragraph）</span><br><span class=\"line\">i 插入  6if esc 插入6个f，css中常用</span><br><span class=\"line\">U 撤销所有</span><br><span class=\"line\">Ctrl+R 撤销撤销的</span><br><span class=\"line\">cw 改变单词部分或者全部c$&#x2F;^改变行尾或行首</span><br><span class=\"line\">% 匹配()&#123;&#125;[]等等</span><br><span class=\"line\">: (%这个文件替换)s&#x2F;replaced&#x2F;replaced（&#x2F;g全行替换&#x2F;c询问用户替换）</span><br><span class=\"line\">:#,#s&#x2F;old&#x2F;new&#x2F;g (两行中间替换)</span><br><span class=\"line\">Ctrl+N&#x2F;P 关键词自动补全 前提输入过的</span><br><span class=\"line\">Ctrl+g 显示文件所在位置，和光标所在位置</span><br><span class=\"line\">w 保存 #,#w filename 保存部分行</span><br><span class=\"line\">r 读取文件进来</span><br><span class=\"line\">set xxx 设置 xxx 选项 如 set ic &#x2F;set hls is</span><br><span class=\"line\">q&#x2F; q? 显示搜索命令历史的窗口</span><br><span class=\"line\">C-z fg或者:sh exit 切换到shell</span><br><span class=\"line\">guw 将光标所在的单词变为小写</span><br><span class=\"line\">guw 将光标所在的单词变为小写</span><br><span class=\"line\">gUw 将光标所在的单词变为大写</span><br><span class=\"line\">guu 光标所在的行所有字符变为小写</span><br><span class=\"line\">gUU 光标所在的行所有字符变为大写</span><br><span class=\"line\">g~~ 光标所在的行所有字符大小写反向转换</span><br><span class=\"line\">:1,$!sort 将文件内的所有内容排序</span><br><span class=\"line\">ga 显示光标所在字符的内码（包括十进制码，十六进制码以及八进制码）</span><br><span class=\"line\">Shift-k 查找光标所在命令或函数的 man 帮助</span><br><span class=\"line\">q: 显示命令行命令历史的窗口</span><br><span class=\"line\">:help 帮助</span><br><span class=\"line\">gR gr 替换保持布局</span><br><span class=\"line\">&lt;&lt; &gt;&gt; 左右移动</span><br><span class=\"line\">&gt;3j 下面三行右移动</span><br><span class=\"line\">V以行开始高亮</span><br><span class=\"line\">gv高亮上次高亮的</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"grub rescue Ubuntu开机问题","date":"2011-04-12T16:00:00.000Z","_content":"昨天晚上格式化了两个分区，今天早晨起来然后Ubuntu1就罢工了，直接显示grub rescue看到grub就知道是引导出错了，拿出刻录的Ubuntu的cd在网上查了半天，基本都给解决了，不过以前哪个开机启动画面的分辨率又给恢复为以前的样子了，郁闷。\n\n原因：格式化分区后，分区的h0,x x变了，找不到引导文件\n\n解决方法：\n```\ngrub rescue>ls\n#先list出所有的分区 如hd(0,7)等\ngrub rescue>ls hd(0,7)/boot/grub\n#在循环查看/grub所在的分区\ngrub rescue>set root=hd(0,7)\n#hd(0,7)为你ls grub是能查看到目录里面的文件是的hd(x,x)\ngrub rescue>set prefix=hd(0,7)/boot/grub\ngrub rescue>insmod  /boot/grub/normal.mod\ngrub rescue>normal\n#然后就进入系统了\n#Alt+Ctrl+t 调出终端\n$update-grub\n$grub-install /dev/sda6\n#sda6是你grub所在的分区可以在系统管理-磁盘工具 里面查看\n```\n","source":"_posts/2011/2011-04-13-ubuntu-grub-rescue.md","raw":"---\nlayout: post\ntitle: grub rescue Ubuntu开机问题\ntags: \ndate: 2011-04-13\ncategories: linux\n---\n昨天晚上格式化了两个分区，今天早晨起来然后Ubuntu1就罢工了，直接显示grub rescue看到grub就知道是引导出错了，拿出刻录的Ubuntu的cd在网上查了半天，基本都给解决了，不过以前哪个开机启动画面的分辨率又给恢复为以前的样子了，郁闷。\n\n原因：格式化分区后，分区的h0,x x变了，找不到引导文件\n\n解决方法：\n```\ngrub rescue>ls\n#先list出所有的分区 如hd(0,7)等\ngrub rescue>ls hd(0,7)/boot/grub\n#在循环查看/grub所在的分区\ngrub rescue>set root=hd(0,7)\n#hd(0,7)为你ls grub是能查看到目录里面的文件是的hd(x,x)\ngrub rescue>set prefix=hd(0,7)/boot/grub\ngrub rescue>insmod  /boot/grub/normal.mod\ngrub rescue>normal\n#然后就进入系统了\n#Alt+Ctrl+t 调出终端\n$update-grub\n$grub-install /dev/sda6\n#sda6是你grub所在的分区可以在系统管理-磁盘工具 里面查看\n```\n","slug":"2011/2011-04-13-ubuntu-grub-rescue","published":1,"updated":"2021-03-08T07:27:39.523Z","_id":"ckm08nrdu0003gcu1h08hbzow","comments":1,"photos":[],"link":"","content":"<p>昨天晚上格式化了两个分区，今天早晨起来然后Ubuntu1就罢工了，直接显示grub rescue看到grub就知道是引导出错了，拿出刻录的Ubuntu的cd在网上查了半天，基本都给解决了，不过以前哪个开机启动画面的分辨率又给恢复为以前的样子了，郁闷。</p>\n<p>原因：格式化分区后，分区的h0,x x变了，找不到引导文件</p>\n<p>解决方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grub rescue&gt;ls</span><br><span class=\"line\">#先list出所有的分区 如hd(0,7)等</span><br><span class=\"line\">grub rescue&gt;ls hd(0,7)&#x2F;boot&#x2F;grub</span><br><span class=\"line\">#在循环查看&#x2F;grub所在的分区</span><br><span class=\"line\">grub rescue&gt;set root&#x3D;hd(0,7)</span><br><span class=\"line\">#hd(0,7)为你ls grub是能查看到目录里面的文件是的hd(x,x)</span><br><span class=\"line\">grub rescue&gt;set prefix&#x3D;hd(0,7)&#x2F;boot&#x2F;grub</span><br><span class=\"line\">grub rescue&gt;insmod  &#x2F;boot&#x2F;grub&#x2F;normal.mod</span><br><span class=\"line\">grub rescue&gt;normal</span><br><span class=\"line\">#然后就进入系统了</span><br><span class=\"line\">#Alt+Ctrl+t 调出终端</span><br><span class=\"line\">$update-grub</span><br><span class=\"line\">$grub-install &#x2F;dev&#x2F;sda6</span><br><span class=\"line\">#sda6是你grub所在的分区可以在系统管理-磁盘工具 里面查看</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天晚上格式化了两个分区，今天早晨起来然后Ubuntu1就罢工了，直接显示grub rescue看到grub就知道是引导出错了，拿出刻录的Ubuntu的cd在网上查了半天，基本都给解决了，不过以前哪个开机启动画面的分辨率又给恢复为以前的样子了，郁闷。</p>\n<p>原因：格式化分区后，分区的h0,x x变了，找不到引导文件</p>\n<p>解决方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grub rescue&gt;ls</span><br><span class=\"line\">#先list出所有的分区 如hd(0,7)等</span><br><span class=\"line\">grub rescue&gt;ls hd(0,7)&#x2F;boot&#x2F;grub</span><br><span class=\"line\">#在循环查看&#x2F;grub所在的分区</span><br><span class=\"line\">grub rescue&gt;set root&#x3D;hd(0,7)</span><br><span class=\"line\">#hd(0,7)为你ls grub是能查看到目录里面的文件是的hd(x,x)</span><br><span class=\"line\">grub rescue&gt;set prefix&#x3D;hd(0,7)&#x2F;boot&#x2F;grub</span><br><span class=\"line\">grub rescue&gt;insmod  &#x2F;boot&#x2F;grub&#x2F;normal.mod</span><br><span class=\"line\">grub rescue&gt;normal</span><br><span class=\"line\">#然后就进入系统了</span><br><span class=\"line\">#Alt+Ctrl+t 调出终端</span><br><span class=\"line\">$update-grub</span><br><span class=\"line\">$grub-install &#x2F;dev&#x2F;sda6</span><br><span class=\"line\">#sda6是你grub所在的分区可以在系统管理-磁盘工具 里面查看</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"dedecms模板标签中运行php代码","date":"2011-04-22T16:00:00.000Z","_content":"大清早爬起来看了看《松药店的儿子们》，然后想弄弄网站，把头像网站给升级为dedecms5.7去了，图片集多了一个描述的编辑框，以前都没有用那个，都是在摘要里面写的描述，现在有了就想用，可是有个问题就是摘要和描述要同时判断下然后在输出，无奈，找了半天的资料终于给解决了。\n\ndedecms使用php：\n```\n<?php\n{dede:field name='array' runphp='yes'}\nif (@me['body']=='')\n@me=@me['description'];\nelse @me=@me['body'];\n{/dede:field}\n//其中的＠me为输出的内容，不能直接echo，比如判断有短标题输出短标题，没有则输出完整的标题，\n{dede:field name='array' runphp='yes'}\nif (@me['shorttitle']=='')\n@me=@me['title'];\nelse @me=@me['shorttitle'];\n{/dede:field}\n\n?>\n```\n一看就能明白，找这例子写就行了，\n","source":"_posts/2011/2011-04-23-DedeCMS-Run-PHP.md","raw":"---\nlayout: post\ntitle: dedecms模板标签中运行php代码\ntags: dedecms\ndate: 2011-04-23\ncategories: php\n---\n大清早爬起来看了看《松药店的儿子们》，然后想弄弄网站，把头像网站给升级为dedecms5.7去了，图片集多了一个描述的编辑框，以前都没有用那个，都是在摘要里面写的描述，现在有了就想用，可是有个问题就是摘要和描述要同时判断下然后在输出，无奈，找了半天的资料终于给解决了。\n\ndedecms使用php：\n```\n<?php\n{dede:field name='array' runphp='yes'}\nif (@me['body']=='')\n@me=@me['description'];\nelse @me=@me['body'];\n{/dede:field}\n//其中的＠me为输出的内容，不能直接echo，比如判断有短标题输出短标题，没有则输出完整的标题，\n{dede:field name='array' runphp='yes'}\nif (@me['shorttitle']=='')\n@me=@me['title'];\nelse @me=@me['shorttitle'];\n{/dede:field}\n\n?>\n```\n一看就能明白，找这例子写就行了，\n","slug":"2011/2011-04-23-DedeCMS-Run-PHP","published":1,"updated":"2021-03-08T07:17:23.539Z","_id":"ckm08nrdw0005gcu1cxzx17me","comments":1,"photos":[],"link":"","content":"<p>大清早爬起来看了看《松药店的儿子们》，然后想弄弄网站，把头像网站给升级为dedecms5.7去了，图片集多了一个描述的编辑框，以前都没有用那个，都是在摘要里面写的描述，现在有了就想用，可是有个问题就是摘要和描述要同时判断下然后在输出，无奈，找了半天的资料终于给解决了。</p>\n<p>dedecms使用php：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#123;dede:field name&#x3D;&#39;array&#39; runphp&#x3D;&#39;yes&#39;&#125;</span><br><span class=\"line\">if (@me[&#39;body&#39;]&#x3D;&#x3D;&#39;&#39;)</span><br><span class=\"line\">@me&#x3D;@me[&#39;description&#39;];</span><br><span class=\"line\">else @me&#x3D;@me[&#39;body&#39;];</span><br><span class=\"line\">&#123;&#x2F;dede:field&#125;</span><br><span class=\"line\">&#x2F;&#x2F;其中的＠me为输出的内容，不能直接echo，比如判断有短标题输出短标题，没有则输出完整的标题，</span><br><span class=\"line\">&#123;dede:field name&#x3D;&#39;array&#39; runphp&#x3D;&#39;yes&#39;&#125;</span><br><span class=\"line\">if (@me[&#39;shorttitle&#39;]&#x3D;&#x3D;&#39;&#39;)</span><br><span class=\"line\">@me&#x3D;@me[&#39;title&#39;];</span><br><span class=\"line\">else @me&#x3D;@me[&#39;shorttitle&#39;];</span><br><span class=\"line\">&#123;&#x2F;dede:field&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>一看就能明白，找这例子写就行了，</p>\n","site":{"data":{}},"excerpt":"","more":"<p>大清早爬起来看了看《松药店的儿子们》，然后想弄弄网站，把头像网站给升级为dedecms5.7去了，图片集多了一个描述的编辑框，以前都没有用那个，都是在摘要里面写的描述，现在有了就想用，可是有个问题就是摘要和描述要同时判断下然后在输出，无奈，找了半天的资料终于给解决了。</p>\n<p>dedecms使用php：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#123;dede:field name&#x3D;&#39;array&#39; runphp&#x3D;&#39;yes&#39;&#125;</span><br><span class=\"line\">if (@me[&#39;body&#39;]&#x3D;&#x3D;&#39;&#39;)</span><br><span class=\"line\">@me&#x3D;@me[&#39;description&#39;];</span><br><span class=\"line\">else @me&#x3D;@me[&#39;body&#39;];</span><br><span class=\"line\">&#123;&#x2F;dede:field&#125;</span><br><span class=\"line\">&#x2F;&#x2F;其中的＠me为输出的内容，不能直接echo，比如判断有短标题输出短标题，没有则输出完整的标题，</span><br><span class=\"line\">&#123;dede:field name&#x3D;&#39;array&#39; runphp&#x3D;&#39;yes&#39;&#125;</span><br><span class=\"line\">if (@me[&#39;shorttitle&#39;]&#x3D;&#x3D;&#39;&#39;)</span><br><span class=\"line\">@me&#x3D;@me[&#39;title&#39;];</span><br><span class=\"line\">else @me&#x3D;@me[&#39;shorttitle&#39;];</span><br><span class=\"line\">&#123;&#x2F;dede:field&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>一看就能明白，找这例子写就行了，</p>\n"},{"layout":"post","title":"IE6下PNG背景图片透明","date":"2011-07-14T16:00:00.000Z","_content":"```\n#h1{\n    width: 500px;\n    height: 250px;\n    background: url(“images/oa.png”);\n    _filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=’style/images/oa.png’); /* IE6 */\n    _ background-image: none; /* IE6 */\n}\n\n```\n","source":"_posts/2011/2011-07-15-ie-png-opacity.md","raw":"---\nlayout: post\ntitle: IE6下PNG背景图片透明\ntags: IE6\ndate: 2011-07-15\ncategories: web\n---\n```\n#h1{\n    width: 500px;\n    height: 250px;\n    background: url(“images/oa.png”);\n    _filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=’style/images/oa.png’); /* IE6 */\n    _ background-image: none; /* IE6 */\n}\n\n```\n","slug":"2011/2011-07-15-ie-png-opacity","published":1,"updated":"2021-03-08T07:17:23.581Z","_id":"ckm08nrdx0006gcu1fxqv0e9r","comments":1,"photos":[],"link":"","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#h1&#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">    height: 250px;</span><br><span class=\"line\">    background: url(“images&#x2F;oa.png”);</span><br><span class=\"line\">    _filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src&#x3D;’style&#x2F;images&#x2F;oa.png’); &#x2F;* IE6 *&#x2F;</span><br><span class=\"line\">    _ background-image: none; &#x2F;* IE6 *&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#h1&#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">    height: 250px;</span><br><span class=\"line\">    background: url(“images&#x2F;oa.png”);</span><br><span class=\"line\">    _filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src&#x3D;’style&#x2F;images&#x2F;oa.png’); &#x2F;* IE6 *&#x2F;</span><br><span class=\"line\">    _ background-image: none; &#x2F;* IE6 *&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"php对css格式化和压缩","date":"2011-02-25T16:00:00.000Z","_content":"今天在csdn看到有人问这个问题，于是答了下，结果发现答错了，囧~，下来自己写了下，不知不觉就花了3个小时才解决，\n哎谁叫俺还是个新手拉，不过学到了很多东西，\n大致格式化为这样\n```\nbody{font-size:12px;font-weight:bold;}\n.nav ul.user{float:right;margin:15px 5px 0 0;font-weight:bold;}\n.nav ul.user li{color:#000;font-weight:normal;}\n.nav ul.user li a{color:#000;padding:0 6px;}\n.nav ul.user #vName{font-weight:bold;color:#000;}\n```\n\n```\n<?php\n/*\n* 思路：\n* {}里面的进行替换\n* 再对外边的进行替换\n* @Date 2011-2-26\n* @Author h2ero\n* Email 122750707@qq.com\n* Blog blog.h2ero.cn\n*/\n$str=<<body{\nfont-size:12px;\nfont-weight:bold;\n}\n.nav ul.user{float:right;margin:\n15px 5px 0 0;font-weight:\nbold;}\n\n.nav ul.user li{color:#000;\nfont-weight:normal;}\n\n.nav ul.user li a{color:#000;\npadding:0 6px;}\n.nav ul.user #vName{font-weight:bold;color:#000;}\n.nav ul.user input.btn{margin:0 3px -5px 0;}\neof;\n\nfunction replaceblank($s){\n$s=$s[1];\n$search=array('/([\\r\\n])[\\s]+/');\n$replace=array('');\n$result=preg_replace($search,$replace,$s);\n$result=\"{\".\"$result\".\"}\";\nreturn $result;\n}\n\n$pattern='/\\{(.*?)\\}/is';\n$str=preg_replace_callback($pattern,replaceblank,$str);//先删除{}的空格和换行\n$str=preg_replace('/\\r\\n/','\\\\1',$str);//去除{}外边的换行,因为可能有多个所以删了再添加下\n$replace=\"\\\\1}\".chr(13);\n$str=preg_replace('/}/',$replace,$str);//在}后添加换行\n$pattern='/(.*?)[\\r\\n]/is';\npreg_match_all($pattern,$str,$result);//逐行读出在去掉空格换行\nfor($i=0;$i {\n$result[0][$i]=trim($result[0][$i]);\n$resultstring.=$result[0][$i].chr(13);//再添加换行这儿不添加换行就等于压缩了\n}\nprint_r($resultstring);\n?>\n```\n","source":"_posts/2011/2011-02-26-php-compress-css.md","raw":"---\nlayout: post\ntitle: php对css格式化和压缩\ntags: \n- css compression\ndate: 2011-02-26\ncategories: php\n---\n今天在csdn看到有人问这个问题，于是答了下，结果发现答错了，囧~，下来自己写了下，不知不觉就花了3个小时才解决，\n哎谁叫俺还是个新手拉，不过学到了很多东西，\n大致格式化为这样\n```\nbody{font-size:12px;font-weight:bold;}\n.nav ul.user{float:right;margin:15px 5px 0 0;font-weight:bold;}\n.nav ul.user li{color:#000;font-weight:normal;}\n.nav ul.user li a{color:#000;padding:0 6px;}\n.nav ul.user #vName{font-weight:bold;color:#000;}\n```\n\n```\n<?php\n/*\n* 思路：\n* {}里面的进行替换\n* 再对外边的进行替换\n* @Date 2011-2-26\n* @Author h2ero\n* Email 122750707@qq.com\n* Blog blog.h2ero.cn\n*/\n$str=<<body{\nfont-size:12px;\nfont-weight:bold;\n}\n.nav ul.user{float:right;margin:\n15px 5px 0 0;font-weight:\nbold;}\n\n.nav ul.user li{color:#000;\nfont-weight:normal;}\n\n.nav ul.user li a{color:#000;\npadding:0 6px;}\n.nav ul.user #vName{font-weight:bold;color:#000;}\n.nav ul.user input.btn{margin:0 3px -5px 0;}\neof;\n\nfunction replaceblank($s){\n$s=$s[1];\n$search=array('/([\\r\\n])[\\s]+/');\n$replace=array('');\n$result=preg_replace($search,$replace,$s);\n$result=\"{\".\"$result\".\"}\";\nreturn $result;\n}\n\n$pattern='/\\{(.*?)\\}/is';\n$str=preg_replace_callback($pattern,replaceblank,$str);//先删除{}的空格和换行\n$str=preg_replace('/\\r\\n/','\\\\1',$str);//去除{}外边的换行,因为可能有多个所以删了再添加下\n$replace=\"\\\\1}\".chr(13);\n$str=preg_replace('/}/',$replace,$str);//在}后添加换行\n$pattern='/(.*?)[\\r\\n]/is';\npreg_match_all($pattern,$str,$result);//逐行读出在去掉空格换行\nfor($i=0;$i {\n$result[0][$i]=trim($result[0][$i]);\n$resultstring.=$result[0][$i].chr(13);//再添加换行这儿不添加换行就等于压缩了\n}\nprint_r($resultstring);\n?>\n```\n","slug":"2011/2011-02-26-php-compress-css","published":1,"updated":"2021-03-08T07:31:48.556Z","_id":"ckm08nre3000lgcu18l8w6obb","comments":1,"photos":[],"link":"","content":"<p>今天在csdn看到有人问这个问题，于是答了下，结果发现答错了，囧~，下来自己写了下，不知不觉就花了3个小时才解决，<br>哎谁叫俺还是个新手拉，不过学到了很多东西，<br>大致格式化为这样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body&#123;font-size:12px;font-weight:bold;&#125;</span><br><span class=\"line\">.nav ul.user&#123;float:right;margin:15px 5px 0 0;font-weight:bold;&#125;</span><br><span class=\"line\">.nav ul.user li&#123;color:#000;font-weight:normal;&#125;</span><br><span class=\"line\">.nav ul.user li a&#123;color:#000;padding:0 6px;&#125;</span><br><span class=\"line\">.nav ul.user #vName&#123;font-weight:bold;color:#000;&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\">* 思路：</span><br><span class=\"line\">* &#123;&#125;里面的进行替换</span><br><span class=\"line\">* 再对外边的进行替换</span><br><span class=\"line\">* @Date 2011-2-26</span><br><span class=\"line\">* @Author h2ero</span><br><span class=\"line\">* Email 122750707@qq.com</span><br><span class=\"line\">* Blog blog.h2ero.cn</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">$str&#x3D;&lt;&lt;body&#123;</span><br><span class=\"line\">font-size:12px;</span><br><span class=\"line\">font-weight:bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nav ul.user&#123;float:right;margin:</span><br><span class=\"line\">15px 5px 0 0;font-weight:</span><br><span class=\"line\">bold;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.nav ul.user li&#123;color:#000;</span><br><span class=\"line\">font-weight:normal;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.nav ul.user li a&#123;color:#000;</span><br><span class=\"line\">padding:0 6px;&#125;</span><br><span class=\"line\">.nav ul.user #vName&#123;font-weight:bold;color:#000;&#125;</span><br><span class=\"line\">.nav ul.user input.btn&#123;margin:0 3px -5px 0;&#125;</span><br><span class=\"line\">eof;</span><br><span class=\"line\"></span><br><span class=\"line\">function replaceblank($s)&#123;</span><br><span class=\"line\">$s&#x3D;$s[1];</span><br><span class=\"line\">$search&#x3D;array(&#39;&#x2F;([\\r\\n])[\\s]+&#x2F;&#39;);</span><br><span class=\"line\">$replace&#x3D;array(&#39;&#39;);</span><br><span class=\"line\">$result&#x3D;preg_replace($search,$replace,$s);</span><br><span class=\"line\">$result&#x3D;&quot;&#123;&quot;.&quot;$result&quot;.&quot;&#125;&quot;;</span><br><span class=\"line\">return $result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$pattern&#x3D;&#39;&#x2F;\\&#123;(.*?)\\&#125;&#x2F;is&#39;;</span><br><span class=\"line\">$str&#x3D;preg_replace_callback($pattern,replaceblank,$str);&#x2F;&#x2F;先删除&#123;&#125;的空格和换行</span><br><span class=\"line\">$str&#x3D;preg_replace(&#39;&#x2F;\\r\\n&#x2F;&#39;,&#39;\\\\1&#39;,$str);&#x2F;&#x2F;去除&#123;&#125;外边的换行,因为可能有多个所以删了再添加下</span><br><span class=\"line\">$replace&#x3D;&quot;\\\\1&#125;&quot;.chr(13);</span><br><span class=\"line\">$str&#x3D;preg_replace(&#39;&#x2F;&#125;&#x2F;&#39;,$replace,$str);&#x2F;&#x2F;在&#125;后添加换行</span><br><span class=\"line\">$pattern&#x3D;&#39;&#x2F;(.*?)[\\r\\n]&#x2F;is&#39;;</span><br><span class=\"line\">preg_match_all($pattern,$str,$result);&#x2F;&#x2F;逐行读出在去掉空格换行</span><br><span class=\"line\">for($i&#x3D;0;$i &#123;</span><br><span class=\"line\">$result[0][$i]&#x3D;trim($result[0][$i]);</span><br><span class=\"line\">$resultstring.&#x3D;$result[0][$i].chr(13);&#x2F;&#x2F;再添加换行这儿不添加换行就等于压缩了</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print_r($resultstring);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>今天在csdn看到有人问这个问题，于是答了下，结果发现答错了，囧~，下来自己写了下，不知不觉就花了3个小时才解决，<br>哎谁叫俺还是个新手拉，不过学到了很多东西，<br>大致格式化为这样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body&#123;font-size:12px;font-weight:bold;&#125;</span><br><span class=\"line\">.nav ul.user&#123;float:right;margin:15px 5px 0 0;font-weight:bold;&#125;</span><br><span class=\"line\">.nav ul.user li&#123;color:#000;font-weight:normal;&#125;</span><br><span class=\"line\">.nav ul.user li a&#123;color:#000;padding:0 6px;&#125;</span><br><span class=\"line\">.nav ul.user #vName&#123;font-weight:bold;color:#000;&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\">* 思路：</span><br><span class=\"line\">* &#123;&#125;里面的进行替换</span><br><span class=\"line\">* 再对外边的进行替换</span><br><span class=\"line\">* @Date 2011-2-26</span><br><span class=\"line\">* @Author h2ero</span><br><span class=\"line\">* Email 122750707@qq.com</span><br><span class=\"line\">* Blog blog.h2ero.cn</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">$str&#x3D;&lt;&lt;body&#123;</span><br><span class=\"line\">font-size:12px;</span><br><span class=\"line\">font-weight:bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nav ul.user&#123;float:right;margin:</span><br><span class=\"line\">15px 5px 0 0;font-weight:</span><br><span class=\"line\">bold;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.nav ul.user li&#123;color:#000;</span><br><span class=\"line\">font-weight:normal;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.nav ul.user li a&#123;color:#000;</span><br><span class=\"line\">padding:0 6px;&#125;</span><br><span class=\"line\">.nav ul.user #vName&#123;font-weight:bold;color:#000;&#125;</span><br><span class=\"line\">.nav ul.user input.btn&#123;margin:0 3px -5px 0;&#125;</span><br><span class=\"line\">eof;</span><br><span class=\"line\"></span><br><span class=\"line\">function replaceblank($s)&#123;</span><br><span class=\"line\">$s&#x3D;$s[1];</span><br><span class=\"line\">$search&#x3D;array(&#39;&#x2F;([\\r\\n])[\\s]+&#x2F;&#39;);</span><br><span class=\"line\">$replace&#x3D;array(&#39;&#39;);</span><br><span class=\"line\">$result&#x3D;preg_replace($search,$replace,$s);</span><br><span class=\"line\">$result&#x3D;&quot;&#123;&quot;.&quot;$result&quot;.&quot;&#125;&quot;;</span><br><span class=\"line\">return $result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$pattern&#x3D;&#39;&#x2F;\\&#123;(.*?)\\&#125;&#x2F;is&#39;;</span><br><span class=\"line\">$str&#x3D;preg_replace_callback($pattern,replaceblank,$str);&#x2F;&#x2F;先删除&#123;&#125;的空格和换行</span><br><span class=\"line\">$str&#x3D;preg_replace(&#39;&#x2F;\\r\\n&#x2F;&#39;,&#39;\\\\1&#39;,$str);&#x2F;&#x2F;去除&#123;&#125;外边的换行,因为可能有多个所以删了再添加下</span><br><span class=\"line\">$replace&#x3D;&quot;\\\\1&#125;&quot;.chr(13);</span><br><span class=\"line\">$str&#x3D;preg_replace(&#39;&#x2F;&#125;&#x2F;&#39;,$replace,$str);&#x2F;&#x2F;在&#125;后添加换行</span><br><span class=\"line\">$pattern&#x3D;&#39;&#x2F;(.*?)[\\r\\n]&#x2F;is&#39;;</span><br><span class=\"line\">preg_match_all($pattern,$str,$result);&#x2F;&#x2F;逐行读出在去掉空格换行</span><br><span class=\"line\">for($i&#x3D;0;$i &#123;</span><br><span class=\"line\">$result[0][$i]&#x3D;trim($result[0][$i]);</span><br><span class=\"line\">$resultstring.&#x3D;$result[0][$i].chr(13);&#x2F;&#x2F;再添加换行这儿不添加换行就等于压缩了</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print_r($resultstring);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"codeigniter 获取域名","date":"2011-12-16T16:00:00.000Z","_content":"人懒直接找的网上的，设置cookie的时候需要用到，添加下面的函数到url_helper.php中即可\n\n```\n<?php\n/**\n * Get domain\n *\n * Return the domain name only based on the \"base_url\" item from your config file.\n *\n * @access    public\n * @return    string\n */    \n\nfunction getDomain()\n{\n    $CI =& get_instance();\n    return preg_replace(\"/^[\\w]{2,6}:\\/\\/([\\w\\d\\.\\-]+).*$/\",\"$1\", $CI->config->slash_item('base_url'));\n}\n?>\n```\n","source":"_posts/2011/2011-12-17-codeigniter-get-domain.md","raw":"---\nlayout: post\ntitle: codeigniter 获取域名\ntags: codeigniter\ndate: 2011-12-17\ncategories: php\n---\n人懒直接找的网上的，设置cookie的时候需要用到，添加下面的函数到url_helper.php中即可\n\n```\n<?php\n/**\n * Get domain\n *\n * Return the domain name only based on the \"base_url\" item from your config file.\n *\n * @access    public\n * @return    string\n */    \n\nfunction getDomain()\n{\n    $CI =& get_instance();\n    return preg_replace(\"/^[\\w]{2,6}:\\/\\/([\\w\\d\\.\\-]+).*$/\",\"$1\", $CI->config->slash_item('base_url'));\n}\n?>\n```\n","slug":"2011/2011-12-17-codeigniter-get-domain","published":1,"updated":"2021-03-08T07:17:23.629Z","_id":"ckm08nre4000mgcu1c7wp2br7","comments":1,"photos":[],"link":"","content":"<p>人懒直接找的网上的，设置cookie的时候需要用到，添加下面的函数到url_helper.php中即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * Get domain</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * Return the domain name only based on the &quot;base_url&quot; item from your config file.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @access    public</span><br><span class=\"line\"> * @return    string</span><br><span class=\"line\"> *&#x2F;    </span><br><span class=\"line\"></span><br><span class=\"line\">function getDomain()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $CI &#x3D;&amp; get_instance();</span><br><span class=\"line\">    return preg_replace(&quot;&#x2F;^[\\w]&#123;2,6&#125;:\\&#x2F;\\&#x2F;([\\w\\d\\.\\-]+).*$&#x2F;&quot;,&quot;$1&quot;, $CI-&gt;config-&gt;slash_item(&#39;base_url&#39;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>人懒直接找的网上的，设置cookie的时候需要用到，添加下面的函数到url_helper.php中即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * Get domain</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * Return the domain name only based on the &quot;base_url&quot; item from your config file.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @access    public</span><br><span class=\"line\"> * @return    string</span><br><span class=\"line\"> *&#x2F;    </span><br><span class=\"line\"></span><br><span class=\"line\">function getDomain()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $CI &#x3D;&amp; get_instance();</span><br><span class=\"line\">    return preg_replace(&quot;&#x2F;^[\\w]&#123;2,6&#125;:\\&#x2F;\\&#x2F;([\\w\\d\\.\\-]+).*$&#x2F;&quot;,&quot;$1&quot;, $CI-&gt;config-&gt;slash_item(&#39;base_url&#39;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"SHELL","date":"2012-08-31T16:00:00.000Z","_content":"##基础知识\n###linux文件分类\n+ \\-  一般文件\n+ d  目录\n+ l  符号链接文件\n+ b  磁盘设备文件\n+ c  字符设备文件\n+ s  Socket文件\n+ p  连接文件\n\n判断方式ls -l,file filename\n\n###文件权限\n+ 三种身份 u g o\n+ 四种权限 r(read)4 w(write)2 x(execute)1 s(set user/group id|sticky bit) \n\t+ set user id 执行者变为文件的拥有者4755\n\t+ set group id 执行者变为用户组 2755\n\t+ sticky bit 只有文件拥有者才可以删除 1777\n\n###Login Shell\n/etc/passwd字段含义:帐号:x:UID:GID:用户信息:主目录:login shell\neg:lightdm:x:104:111:Light Display Manager:/var/lib/lightdm:/bin/false\n\n###配置文件\n+ 登录执行脚本及顺序\n\t1. /etc/profile\n\t2. .bash_profile\n\t3. .bash_login\n\t4. .profile\n+ 注销\n\t1. .bash_logout\n+ 执行新Shell\n\t1. 交互模式(interactive) .bashrc\n\t2. 非交互模式 /bin/bash 检查BASH_ENV /bin/sh不检查任何文件\n\n###括号匹配\n+ echo l{i,o}ve\n+ cp file{,.bak} 备份文件\n+ mkdir {1,2}/{3,4}\n\n##Shell Script\n###执行\n+ `bash script.sh`\n+ `sh script.sh`\n+ `. script.sh`\n+ `source .bashrc` 直接使配置生效\n+ . source 都会让script.sh在父Shell中执行`echo $SHLVL` `ps axf`查看层级\n\n###调试\n+ 检测语法 `bash -v script.sh`\n+ 不执行查看程序代码 `bash -n script.sh`\n+ 追踪脚本执行 `bash -x`\n\n##命令\n###内置命令\n1.  `type bg`  bg is a shell builtin 判断内置命令\n2.  `help -s` 显示命令语法 eg: `help -s alias`  alias: alias [-p] [name[=value] ... ]\n3.  `echo` -n 不换行 -e \\n等解释\n4.  `cd -` 返回先前目录\n5.  `:` 传回真值\n6.  `alias ll='ls -l'` 重命名命令,取消`alias ll='ll'` 或者 `unalias ll` `unalias -a`取消所有别名\n7.  `umask` 显示文件权限屏蔽值 创建文件时候 文件权限值=系统默认权限-umask值\n8.  `set` 设置Bash Shell属性 `set -o vi`开启vi模式，`set +o vi` 关闭vi模式,`set -o noclobber`/`set -C`转向输出保护存在文件\n9.  `shopt` 设置Bash Shell行为模式\n10. `time` 指令执行耗时统计 `time ls -la`\n11. read 读取变量\n\t+ `read input` 如果没有input变量，默认为$REPLY\n\t+ `read -p \"please input a word:\"`\n\t+ `read -a arr<<(echo 1,2,3,6,5,4)` 读取数组\n\t+ `IFS=\":\";read f1 f2 f3 f4 < datafile` 没有设置IFS则默认空格\n\t+ `read -r raw` 不过滤\\\n12. `exec` `eval` 执行命令\n13. `man -k sort` 查找命令\n\n###命令行程序\n执行时候需要到$PATH中寻找\n\n1.  `which top` 在PATH找寻第一top命令所在位置 -a 找寻全部\n2.  `locate my.conf` 在文件索引数据库中找寻my.conf文件\n3.  date\n    + `date MMDDhhmmYY`调整时间 \n    + `date + \"%d%h%m\"` 产生指定时间格式\n    + `date -R` 产生与RFC-2822兼容的时间格式\n4.  ls\n    + `ls -A` 与 `ls -a`相同但不显示 .,..\n    + `ls -F` 在结果中加入标识符(\\*可执行文件，@软链接文件，=socket文件，|管道文件,不加则表示普通文件)\n5.  `cat >file`输入内容<kbd>CTRL</kbd>+<kbd>D</kbd>编辑保存文件内容到file\n6.  `head -n 4`显示前4行内容，`head -c -20`不显示前面20bytes内容,`tail`类似\n7.  `wc` -c/w/l计算文件字符/单词/行\n8.  `finde . -name \"*.txt\" -ctime 2 --exec rm -f {} \\; ` 找寻2天内修改过的text文件删除\n9.  tar\n\t+ `tar -zxvf backup.tgz -C www/public` 解压到指定目录\n\t+ tar tvf etc.tar 显示文件内容\n\t+ tar xzvf etc.tar 解压\n\t+ tar zcvf etc.tar 压缩\n\t+ tar rvf etc.tar re.add.file 添加\n\t+ tar uvf etc.tar add.file 更新\n\t+ tar Avf 1.tar 2.tar all.tar 合并\n\t+ tar vf etc.tar --delete etc/hosts 删除指定文件\n10. `basename /path/filename` 取filename\n11. `dirname /path/filename` 取path \n12. `sort -nr +2 -t: /etc/passwd` -t 分隔符 +2 跳过两列排序第三列 -nr 反序按数值排序(默认按ASCII)\n13. `uniq file`删除文件中重复的行，-d找出重复行，-c 计算重复行出现的次数\n14. cut\n\t+ `cut -c2-3 file` 抽取第2-3个字符\n\t+ `cut -c9- file` 抽取第9以后的\n\t+ `cut -c1` 抽取第1个字符\n\t+ `cut -c-3,22- file`抽取第1-3,和22以后的字符\n\t+ `cut -d: -f3,1 /etc/passwd` 抽取paawd见3,1列\n15. tr 转换或删除字符\n\t+ `tr '[a-z]' '[A-Z]' < file` 转换大写\n\t+ `tr -d k` 删除字符k\n\t+ `tr -s '[a-z]' '[a-z]' <file `压缩aaa为a\n16. grep\n\t+ `grep -Rin \"word\" *`/`grep -Ril \"word\" *` 匹配所有word显示行号，不区分大小\n\t+ `grep -v \"word\" *` 显示不包含word eg:`ps -ef | grep nautilus| grep -v \"grep nautilus\"`\n\t+ `grep -q \"word\" file` 返回1/0，并放到$?这个变量中\n\t+ `grep -A 2 -e 'someone (love|like) you' file` 找到h2..以后显示接下来的两行\n17. tee\n\t+ `tee -a file`=`cat >>file`文件内容<kbd>Ctrl</kbd>+<kbd>D</kbd>\n\t+ `tee file`存在清空，不存在输入然后<kbd>Ctrl</kbd>+<kbd>D</kbd>\n18. `script log`记录接下来命令的执行过程及结果,直到`exit`退出\n19. top <kby>z</kby>切换彩色显示\n20. 关机命令\n\t+ sync&&shutdown -h now/+30/20:00\n\t+ init 0\n\t\t+ 0 关机\n\t\t+ 3 纯文本\n\t\t+ 5 图形界面\n\t\t+ 6 重新启动\n\t+ poweroff -f\n21. chown root:root file\n22. chmod \n\t+ chmod u=rwx,g=rw file\n\t+ chmod a-x file\n\n###文件操作\n20. touch file 建立新文件等同于 > file :>file\n21. mkdir -m 777 file\n22. mknod -m 666 file c/b/p n m 建立字符/区块/管道文件 主要设备代码n 次要设备代码m\n23. mkfifo file 建立管道文件 使用 echo \"h2ero\" > file ,  cat < file\n24. ln -sf file lnfile 删除ln再次建立\n25. stat file 查看文件的所有属性 \n\t+ stat -c \"%a%n\" 单独查看文件相关属性输出 \n\t+ stat -f \"%a\" 单独查看分区相关属性输出 \n26. chattr +attr =attr -attr AaiD 为文件设置文件取用时间不变/只能转向开启文件进行写入/不能修改文件/不需要dump 特殊属性 \n27. lsattr file 查看文件特殊属性\n28. gzip \n\t* gzip -d 解压\n\t* gzip -c 压缩\n        * zcat\n\n\n###历史命令\n+ fc\n\t+ fc ssh 查找最近一个包含ssh\n\t+ fc -s ssh 查找最近一个包含ssh，并执行\n+ 历史命令扩展\n\t+ !! 执行上一条 = !-1\n\t+ !historyline 执行编号为historyline的指令\n\t+ !-n 调用倒数第n条指令\n\t+ !ssh 调用最近含有ssh的命令\n\t+ !?home? 调用最近含有home的命令\n\t+ ^var1^var2^ 将前一个历史命令中的var1替换为var2再执行\n\t+ !# 前面输入的所有字符。ls !# 相当于执行ls ls\n\t+ !!:$ 前一条命令的最后一个参数=$_\n\t+ !ls:1 找出最近一条以ls开头的命令的第一个参数=!ls:^\n\t+ !ls:* 找出最近一天以ls开头的所有参数\n\t+ !!:3-5 找出前一条3-5的参数\n\t+ !!:s/var/var1/替换前1条指令中的var 为 var1\n\t+ !!:h 删除后面的文件名\n\t+ !!:t 删除前面的目录\n\t+ !!:p 显示前一条命令但是不执行\n\n\n###执行多条命令\n1. cmd1&&cmd2 cmd1执行成功cmd2才执行\n2. cmd1||cmd2 cmd1执行失败cmd2才执行\n3. (cmd1,cmd2,cmd3)子shell中执行\n4. { cmd1,cmd2,cmd3 }在当前shell中执行\n\n##变量\n###数组\n+ 语法${A[index]}}，声明arr=(1 2 3 4)\n+ 所有元素`${A[@]}/${A[*]}`\n+ 长度`${#A[@]}/${#A[*]}`\n+ 赋值 `arr[${#arr[*]}]=2`\n\n###取消变量\n+ unset -v variable unset -f function\n\n###环境变量\n+ export -p 显示全部环境变量\n+ `declare -x LANG=\"en_US.UTF-8\"` 或者 `export LANG=\"en_US.UTF-8\"`\n###Bash 内置变量\n+ $BASH bash完整路径\n+ $BASH_VERSION bash版本\n+ $CDPATH cd切换搜寻目录\n+ $HISCONTROL 控制指令是否存入历史，三个值ignorespace,ignoredups,ignoreboth，\n+ $HISTFILESIZE 行数\n+ $HISTIGNORE `export HISTIGNORE=ls:ps:cd:t*:\\& `\n+ HISTTIMEFORMAT='%F%T' 时间格式\n+ `locale` 语系\n+ $PATH 命令搜索目录\n+ RANDOM\n+ $* 所有参数一个字符串 \"arg1 arg2 arg3\"\n+ $n 第n个参数\n+ $@ 所有参数分开字符串 \"arg1\" \"arg2\" \"arg3\"\n+ $# 位置参数个数\n+ $? 上一条命令传回的值1/0 成功或者失败\n+ $$ 当前bash shell 进程标号 eg: kill $$\n+ $_ \n\t+ script执行时候bash路径/bin/bash\n\t+ 上一条命令最后一个参数值\n\t+ 检查邮件时候,邮件文件名\n\n###变量属性\n+ readonly\n\t+ readonly -p 显示所有只读属性\n\t+ readonly -a/f 声明只读变量或者函数\n+ declare \n\t+ declare -p | grep x  显示x变量属性\n\t+ declare -p x 显示x变量属性\n\t+ declare -a/f/i/r/x 声明数组/函数/整数/只读/环境变量\n\t+ declare -F 显示所有的函数名称及属性\n\n###HEREDOC\n1. 重定向到msg文件\n\t\tcat  <<HEREDOC >msg \n\t\tdoc\n\t\tHEREDOC\n2. 直接输出\n\t\tcat <<HEREDOC \n\t\t$USER can be used\n\t\tHEREDOC\n3. 直接输出不支持变量替换\n\t\tcat <<\"HEREDOC\"\n\t\t$USER can't be used\n\t\tHEREDOC\n\n##高级变量\n###分类\n1. ${var} 变量扩展\n\t+ 测试存在\n            \n\t   条件式              | 目的                   | 判断条件       | 符合的处理方法                         \n       --------------------|------------------------|----------------|---------------------------------------\n\t   ${待测变量-默认值}  | 给不存在变量赋值       | 不存在         | 赋值                                   \n\t   ${待测变量:-默认值} | 给不存在或空值变量赋值 | 不存在或空值   | 赋值                                   \n\t   ${待测变量:=默认值} | 给空值赋值             | 不存在或空值   | 赋值                                   \n\t   ${待测变量:?默认值} | 检查变量是否完备       | 不存在或空值   | 显示变量名称:提示信息，停止执行后面的  \n\t   ${待测变量:i默认值} | 判断是否为真           | 测试存在且非空 | 传回默认值                             \n\n\t   记忆\n\n\t   | : | 空     | 测试值                   | \n\t   |---|--------|--------------------------| \n\t   | - | 负向   | 测不存在                 | \n\t   | = | 设值   | 给空值变量设置一个默认值 | \n\t   | ? | 有问题 | 检查条件是否完备后再执行 | \n\t   | - | 正向   | 测试存在                 | \n\n\n\t+ 取字符串\n\n\t   | ${var:start}     | 指定位置截取到最后       | \n\t   |------------------|--------------------------|\n\t   | ${var:start:len} | 指定位置截取len个        | \n\t   | ${#var}          | 变量字符长度             | \n\t   | ${#var[@]}       | 数组元素个数             | \n\t   | ${#var[\\*]}      | 数组元素个数             | \n\t   | ${var:start:len} | 指定位置截取len个        | \n\t   | ${@:start}       | 指定位置截取到最后的参数 | \n\t   | ${@:start:count} | 指定位置截取到最后的参数 | \n\n\t+ 对比\n\n\t   | ${var#tpl}  | 由前面对比删除最短 | \n\t   |-------------|--------------------|\n\t   | ${var##tpl} | 由前面对比删除最长 | \n\t   | ${var%tpl}  | 由后面对比删除最短 | \n\t   | ${var%%tpl} | 由后面对比删除最长 | \n\n\t+ 修改 若不加/str则为删除，替换为空\n\n       | 1 | ${var/tpl/str}  | 替换地一个符tpl的  |\n       |---|-----------------|--------------------|\n       | 2 | ${var//tpl/str} | 替换地全部符合tpl的|\n       | 3 | ${var#tpl/str}  | 同1，由开始替换    |\n       | 4 | ${var#tpl/str}  | 同2，由开始替换    |\n\n\t+ 取变量\n\t\t1. ${!var@} 或者 `${!var*}` 去所有一var开头的变量名称\n\t\t2. ${!arr[@]} 或者 `${!arr[*]}` 取所有数组索引\n2. $(cmd) 或者 `cmd` 命令扩展\n3. 算术扩展\n\t1. $((exp)) \n\t2. `expr exp`\n\t3. $[exp]\n\n##流程控制\n1. if cmd1&&cmd2 也可当做if用\n\t1. if-then\n\t\t\tif condition;then\n\t\t\t\tcmd\n\t\t\tfi\n\t2. if-then-else\n\t\t\tif condition;then\n\t\t\t\tcmd\n\t\t\telse\n\t\t\t\tcmd\n\t\t\tfi\n\t3. if-then-elif-then-else\n\t\t\tif condition;then\n\t\t\t\tcmd\n\t\t\telif condition;then\n\t\t\telse\n\t\t\t\tcmd\n\t\t\tfi\n2. 条件\n\t1. 执行命令返回的结果，eg: grep -q ^h2ero$ filename\n\t2. [[ ]] eg: [[ str > xyz ]]\n\t3. test eg: test \"str\"\\>\"xyz\"\n\t4. [ ] eg:[ \"str\"\\>\"xyz\" ] , [ -f dir/file ]\n3. case 如果shopt -s extglob 则开启高级样式\n\t\tcase testitem in\n\t\t\tj|k|l) cmd;;\n\t\tesac\n4. for\n\t\tfor i in arr\n\t\tdo\n\t\t\tcmd\n\t\tdone\n\t\tfor ((i=1;i<10;i++))\n\t\tdo\n\t\t\tcmd\n\t\tdone\n5. while or until\n\t\twhile condition\n\t\tdo \n\t\t\tcmd\n\t\tdone\n\t\t死循环\n\t\twhile ((1))|true|:\n\t\tfor(;1;)\n\t\tdo\n\t\t\tcmd\n\t\tdone\n6. select \n\t\tselect s in arr\n\t\tdo \n\t\t\t$REPLY $f\n\t\tdone\n\t\teg:\n\t\tselect i in $(ls ../)\n\t\tdo\n\t\t\tif [ $REPLY=='q' ];then\n\t\t\t\tkill -INT $$\n\t\t\tfi\n\t\tdone\n##转向\n###默认文件代码(file descriptor)\n+ stdin 0 stdout 1 stderr 2\n\n###文件代码操作\n+ fileDescriptor<>file 打开文件\n+ fileDescriptor<&- 关闭文件\n+ fileDescriptor>&- 关闭转向输出文件\n+ n<&m 复制转向输入的文件代码m存为n,使n连接到m\n+ n>&m 复制转向输出的文件代码m存为n,使n连接到m\n+ `>|` 忽略noclobber直接覆盖\n+ eg:exec 6 < file ;cat <&6\n\n##系统信号\n+ `kill -l/trap -l`显示使用系统信号\n+ kill \n\t+ `kill -信号id/名 PID` 或者 `kill -s 信号 PID`\n\t+ `kill -HUP PID` 重启进程，若是daemon就重新读取系统配置。\n\t+ <kbd>CTRL</kbd>+<kbd>C</kbd> 发出INT信号。\n+ trap\n\t+ `trap \"echo 'kill this ?'\" INT`  注册INT信号\n\t+ `trap - INT`  取消注册INT信号\n\t+ `trap '' INT` 忽略INT信号\n\t+ `trap -p` 显示全部注册信号\n\n##进程\n+ 进程字段|USER|PID|%CUP|%MEN|VSZ|RSS|TTY|STAT|START|TIME|COMMAND|\n+ 进程NI(nice) 值，NI值越大，优先度越小。\n\t+ `nice -n num runapp`\n\t+ `renice num -p PID -g GROUP -u USER` 为指定进程/群组/用户调整NI值\n\n###工作控制\n+ <kbd>Ctrl</kbd>+<kbd>Z</kbd>暂停执行程序，bg后台执行。\n+ jobs -l 查看执行程序,%% 或者 %+调用当前程序，%- 调用前一个。%n调用编号为n的程序等同fg %n,后台执行%n&或者bg %n\n\n##用户管理\n+ 建立帐号\n\t\t\n\t\tadduser h2ero\n\t\tuseradd -D 显示创建用户时候的默认配置，/etc/default/useradd\n\t\tdeluser/userdle username ~目录保存 \n\n##其他\n1. 添加字符集\n\t\t\n\t\tcat /usr/share/i18n/SUPPORTED\n\t\tvim /var/lib/locales/supported.d/local\n\t\tdpkg-reconfigure --force locales\n2. 目录转换\n\t\t\n\t\texport LANG=en_US\n\t\txdg-user-dirs-gtk-update\n\t\texport LANG=zh_CN\n","source":"_posts/wiki/2012-09-01-shell-wiki.md","raw":"---\nlayout: post\ntitle: SHELL\ntags: shell terminator\ndate: 2012-09-01\ncategories:  wiki\n---\n##基础知识\n###linux文件分类\n+ \\-  一般文件\n+ d  目录\n+ l  符号链接文件\n+ b  磁盘设备文件\n+ c  字符设备文件\n+ s  Socket文件\n+ p  连接文件\n\n判断方式ls -l,file filename\n\n###文件权限\n+ 三种身份 u g o\n+ 四种权限 r(read)4 w(write)2 x(execute)1 s(set user/group id|sticky bit) \n\t+ set user id 执行者变为文件的拥有者4755\n\t+ set group id 执行者变为用户组 2755\n\t+ sticky bit 只有文件拥有者才可以删除 1777\n\n###Login Shell\n/etc/passwd字段含义:帐号:x:UID:GID:用户信息:主目录:login shell\neg:lightdm:x:104:111:Light Display Manager:/var/lib/lightdm:/bin/false\n\n###配置文件\n+ 登录执行脚本及顺序\n\t1. /etc/profile\n\t2. .bash_profile\n\t3. .bash_login\n\t4. .profile\n+ 注销\n\t1. .bash_logout\n+ 执行新Shell\n\t1. 交互模式(interactive) .bashrc\n\t2. 非交互模式 /bin/bash 检查BASH_ENV /bin/sh不检查任何文件\n\n###括号匹配\n+ echo l{i,o}ve\n+ cp file{,.bak} 备份文件\n+ mkdir {1,2}/{3,4}\n\n##Shell Script\n###执行\n+ `bash script.sh`\n+ `sh script.sh`\n+ `. script.sh`\n+ `source .bashrc` 直接使配置生效\n+ . source 都会让script.sh在父Shell中执行`echo $SHLVL` `ps axf`查看层级\n\n###调试\n+ 检测语法 `bash -v script.sh`\n+ 不执行查看程序代码 `bash -n script.sh`\n+ 追踪脚本执行 `bash -x`\n\n##命令\n###内置命令\n1.  `type bg`  bg is a shell builtin 判断内置命令\n2.  `help -s` 显示命令语法 eg: `help -s alias`  alias: alias [-p] [name[=value] ... ]\n3.  `echo` -n 不换行 -e \\n等解释\n4.  `cd -` 返回先前目录\n5.  `:` 传回真值\n6.  `alias ll='ls -l'` 重命名命令,取消`alias ll='ll'` 或者 `unalias ll` `unalias -a`取消所有别名\n7.  `umask` 显示文件权限屏蔽值 创建文件时候 文件权限值=系统默认权限-umask值\n8.  `set` 设置Bash Shell属性 `set -o vi`开启vi模式，`set +o vi` 关闭vi模式,`set -o noclobber`/`set -C`转向输出保护存在文件\n9.  `shopt` 设置Bash Shell行为模式\n10. `time` 指令执行耗时统计 `time ls -la`\n11. read 读取变量\n\t+ `read input` 如果没有input变量，默认为$REPLY\n\t+ `read -p \"please input a word:\"`\n\t+ `read -a arr<<(echo 1,2,3,6,5,4)` 读取数组\n\t+ `IFS=\":\";read f1 f2 f3 f4 < datafile` 没有设置IFS则默认空格\n\t+ `read -r raw` 不过滤\\\n12. `exec` `eval` 执行命令\n13. `man -k sort` 查找命令\n\n###命令行程序\n执行时候需要到$PATH中寻找\n\n1.  `which top` 在PATH找寻第一top命令所在位置 -a 找寻全部\n2.  `locate my.conf` 在文件索引数据库中找寻my.conf文件\n3.  date\n    + `date MMDDhhmmYY`调整时间 \n    + `date + \"%d%h%m\"` 产生指定时间格式\n    + `date -R` 产生与RFC-2822兼容的时间格式\n4.  ls\n    + `ls -A` 与 `ls -a`相同但不显示 .,..\n    + `ls -F` 在结果中加入标识符(\\*可执行文件，@软链接文件，=socket文件，|管道文件,不加则表示普通文件)\n5.  `cat >file`输入内容<kbd>CTRL</kbd>+<kbd>D</kbd>编辑保存文件内容到file\n6.  `head -n 4`显示前4行内容，`head -c -20`不显示前面20bytes内容,`tail`类似\n7.  `wc` -c/w/l计算文件字符/单词/行\n8.  `finde . -name \"*.txt\" -ctime 2 --exec rm -f {} \\; ` 找寻2天内修改过的text文件删除\n9.  tar\n\t+ `tar -zxvf backup.tgz -C www/public` 解压到指定目录\n\t+ tar tvf etc.tar 显示文件内容\n\t+ tar xzvf etc.tar 解压\n\t+ tar zcvf etc.tar 压缩\n\t+ tar rvf etc.tar re.add.file 添加\n\t+ tar uvf etc.tar add.file 更新\n\t+ tar Avf 1.tar 2.tar all.tar 合并\n\t+ tar vf etc.tar --delete etc/hosts 删除指定文件\n10. `basename /path/filename` 取filename\n11. `dirname /path/filename` 取path \n12. `sort -nr +2 -t: /etc/passwd` -t 分隔符 +2 跳过两列排序第三列 -nr 反序按数值排序(默认按ASCII)\n13. `uniq file`删除文件中重复的行，-d找出重复行，-c 计算重复行出现的次数\n14. cut\n\t+ `cut -c2-3 file` 抽取第2-3个字符\n\t+ `cut -c9- file` 抽取第9以后的\n\t+ `cut -c1` 抽取第1个字符\n\t+ `cut -c-3,22- file`抽取第1-3,和22以后的字符\n\t+ `cut -d: -f3,1 /etc/passwd` 抽取paawd见3,1列\n15. tr 转换或删除字符\n\t+ `tr '[a-z]' '[A-Z]' < file` 转换大写\n\t+ `tr -d k` 删除字符k\n\t+ `tr -s '[a-z]' '[a-z]' <file `压缩aaa为a\n16. grep\n\t+ `grep -Rin \"word\" *`/`grep -Ril \"word\" *` 匹配所有word显示行号，不区分大小\n\t+ `grep -v \"word\" *` 显示不包含word eg:`ps -ef | grep nautilus| grep -v \"grep nautilus\"`\n\t+ `grep -q \"word\" file` 返回1/0，并放到$?这个变量中\n\t+ `grep -A 2 -e 'someone (love|like) you' file` 找到h2..以后显示接下来的两行\n17. tee\n\t+ `tee -a file`=`cat >>file`文件内容<kbd>Ctrl</kbd>+<kbd>D</kbd>\n\t+ `tee file`存在清空，不存在输入然后<kbd>Ctrl</kbd>+<kbd>D</kbd>\n18. `script log`记录接下来命令的执行过程及结果,直到`exit`退出\n19. top <kby>z</kby>切换彩色显示\n20. 关机命令\n\t+ sync&&shutdown -h now/+30/20:00\n\t+ init 0\n\t\t+ 0 关机\n\t\t+ 3 纯文本\n\t\t+ 5 图形界面\n\t\t+ 6 重新启动\n\t+ poweroff -f\n21. chown root:root file\n22. chmod \n\t+ chmod u=rwx,g=rw file\n\t+ chmod a-x file\n\n###文件操作\n20. touch file 建立新文件等同于 > file :>file\n21. mkdir -m 777 file\n22. mknod -m 666 file c/b/p n m 建立字符/区块/管道文件 主要设备代码n 次要设备代码m\n23. mkfifo file 建立管道文件 使用 echo \"h2ero\" > file ,  cat < file\n24. ln -sf file lnfile 删除ln再次建立\n25. stat file 查看文件的所有属性 \n\t+ stat -c \"%a%n\" 单独查看文件相关属性输出 \n\t+ stat -f \"%a\" 单独查看分区相关属性输出 \n26. chattr +attr =attr -attr AaiD 为文件设置文件取用时间不变/只能转向开启文件进行写入/不能修改文件/不需要dump 特殊属性 \n27. lsattr file 查看文件特殊属性\n28. gzip \n\t* gzip -d 解压\n\t* gzip -c 压缩\n        * zcat\n\n\n###历史命令\n+ fc\n\t+ fc ssh 查找最近一个包含ssh\n\t+ fc -s ssh 查找最近一个包含ssh，并执行\n+ 历史命令扩展\n\t+ !! 执行上一条 = !-1\n\t+ !historyline 执行编号为historyline的指令\n\t+ !-n 调用倒数第n条指令\n\t+ !ssh 调用最近含有ssh的命令\n\t+ !?home? 调用最近含有home的命令\n\t+ ^var1^var2^ 将前一个历史命令中的var1替换为var2再执行\n\t+ !# 前面输入的所有字符。ls !# 相当于执行ls ls\n\t+ !!:$ 前一条命令的最后一个参数=$_\n\t+ !ls:1 找出最近一条以ls开头的命令的第一个参数=!ls:^\n\t+ !ls:* 找出最近一天以ls开头的所有参数\n\t+ !!:3-5 找出前一条3-5的参数\n\t+ !!:s/var/var1/替换前1条指令中的var 为 var1\n\t+ !!:h 删除后面的文件名\n\t+ !!:t 删除前面的目录\n\t+ !!:p 显示前一条命令但是不执行\n\n\n###执行多条命令\n1. cmd1&&cmd2 cmd1执行成功cmd2才执行\n2. cmd1||cmd2 cmd1执行失败cmd2才执行\n3. (cmd1,cmd2,cmd3)子shell中执行\n4. { cmd1,cmd2,cmd3 }在当前shell中执行\n\n##变量\n###数组\n+ 语法${A[index]}}，声明arr=(1 2 3 4)\n+ 所有元素`${A[@]}/${A[*]}`\n+ 长度`${#A[@]}/${#A[*]}`\n+ 赋值 `arr[${#arr[*]}]=2`\n\n###取消变量\n+ unset -v variable unset -f function\n\n###环境变量\n+ export -p 显示全部环境变量\n+ `declare -x LANG=\"en_US.UTF-8\"` 或者 `export LANG=\"en_US.UTF-8\"`\n###Bash 内置变量\n+ $BASH bash完整路径\n+ $BASH_VERSION bash版本\n+ $CDPATH cd切换搜寻目录\n+ $HISCONTROL 控制指令是否存入历史，三个值ignorespace,ignoredups,ignoreboth，\n+ $HISTFILESIZE 行数\n+ $HISTIGNORE `export HISTIGNORE=ls:ps:cd:t*:\\& `\n+ HISTTIMEFORMAT='%F%T' 时间格式\n+ `locale` 语系\n+ $PATH 命令搜索目录\n+ RANDOM\n+ $* 所有参数一个字符串 \"arg1 arg2 arg3\"\n+ $n 第n个参数\n+ $@ 所有参数分开字符串 \"arg1\" \"arg2\" \"arg3\"\n+ $# 位置参数个数\n+ $? 上一条命令传回的值1/0 成功或者失败\n+ $$ 当前bash shell 进程标号 eg: kill $$\n+ $_ \n\t+ script执行时候bash路径/bin/bash\n\t+ 上一条命令最后一个参数值\n\t+ 检查邮件时候,邮件文件名\n\n###变量属性\n+ readonly\n\t+ readonly -p 显示所有只读属性\n\t+ readonly -a/f 声明只读变量或者函数\n+ declare \n\t+ declare -p | grep x  显示x变量属性\n\t+ declare -p x 显示x变量属性\n\t+ declare -a/f/i/r/x 声明数组/函数/整数/只读/环境变量\n\t+ declare -F 显示所有的函数名称及属性\n\n###HEREDOC\n1. 重定向到msg文件\n\t\tcat  <<HEREDOC >msg \n\t\tdoc\n\t\tHEREDOC\n2. 直接输出\n\t\tcat <<HEREDOC \n\t\t$USER can be used\n\t\tHEREDOC\n3. 直接输出不支持变量替换\n\t\tcat <<\"HEREDOC\"\n\t\t$USER can't be used\n\t\tHEREDOC\n\n##高级变量\n###分类\n1. ${var} 变量扩展\n\t+ 测试存在\n            \n\t   条件式              | 目的                   | 判断条件       | 符合的处理方法                         \n       --------------------|------------------------|----------------|---------------------------------------\n\t   ${待测变量-默认值}  | 给不存在变量赋值       | 不存在         | 赋值                                   \n\t   ${待测变量:-默认值} | 给不存在或空值变量赋值 | 不存在或空值   | 赋值                                   \n\t   ${待测变量:=默认值} | 给空值赋值             | 不存在或空值   | 赋值                                   \n\t   ${待测变量:?默认值} | 检查变量是否完备       | 不存在或空值   | 显示变量名称:提示信息，停止执行后面的  \n\t   ${待测变量:i默认值} | 判断是否为真           | 测试存在且非空 | 传回默认值                             \n\n\t   记忆\n\n\t   | : | 空     | 测试值                   | \n\t   |---|--------|--------------------------| \n\t   | - | 负向   | 测不存在                 | \n\t   | = | 设值   | 给空值变量设置一个默认值 | \n\t   | ? | 有问题 | 检查条件是否完备后再执行 | \n\t   | - | 正向   | 测试存在                 | \n\n\n\t+ 取字符串\n\n\t   | ${var:start}     | 指定位置截取到最后       | \n\t   |------------------|--------------------------|\n\t   | ${var:start:len} | 指定位置截取len个        | \n\t   | ${#var}          | 变量字符长度             | \n\t   | ${#var[@]}       | 数组元素个数             | \n\t   | ${#var[\\*]}      | 数组元素个数             | \n\t   | ${var:start:len} | 指定位置截取len个        | \n\t   | ${@:start}       | 指定位置截取到最后的参数 | \n\t   | ${@:start:count} | 指定位置截取到最后的参数 | \n\n\t+ 对比\n\n\t   | ${var#tpl}  | 由前面对比删除最短 | \n\t   |-------------|--------------------|\n\t   | ${var##tpl} | 由前面对比删除最长 | \n\t   | ${var%tpl}  | 由后面对比删除最短 | \n\t   | ${var%%tpl} | 由后面对比删除最长 | \n\n\t+ 修改 若不加/str则为删除，替换为空\n\n       | 1 | ${var/tpl/str}  | 替换地一个符tpl的  |\n       |---|-----------------|--------------------|\n       | 2 | ${var//tpl/str} | 替换地全部符合tpl的|\n       | 3 | ${var#tpl/str}  | 同1，由开始替换    |\n       | 4 | ${var#tpl/str}  | 同2，由开始替换    |\n\n\t+ 取变量\n\t\t1. ${!var@} 或者 `${!var*}` 去所有一var开头的变量名称\n\t\t2. ${!arr[@]} 或者 `${!arr[*]}` 取所有数组索引\n2. $(cmd) 或者 `cmd` 命令扩展\n3. 算术扩展\n\t1. $((exp)) \n\t2. `expr exp`\n\t3. $[exp]\n\n##流程控制\n1. if cmd1&&cmd2 也可当做if用\n\t1. if-then\n\t\t\tif condition;then\n\t\t\t\tcmd\n\t\t\tfi\n\t2. if-then-else\n\t\t\tif condition;then\n\t\t\t\tcmd\n\t\t\telse\n\t\t\t\tcmd\n\t\t\tfi\n\t3. if-then-elif-then-else\n\t\t\tif condition;then\n\t\t\t\tcmd\n\t\t\telif condition;then\n\t\t\telse\n\t\t\t\tcmd\n\t\t\tfi\n2. 条件\n\t1. 执行命令返回的结果，eg: grep -q ^h2ero$ filename\n\t2. [[ ]] eg: [[ str > xyz ]]\n\t3. test eg: test \"str\"\\>\"xyz\"\n\t4. [ ] eg:[ \"str\"\\>\"xyz\" ] , [ -f dir/file ]\n3. case 如果shopt -s extglob 则开启高级样式\n\t\tcase testitem in\n\t\t\tj|k|l) cmd;;\n\t\tesac\n4. for\n\t\tfor i in arr\n\t\tdo\n\t\t\tcmd\n\t\tdone\n\t\tfor ((i=1;i<10;i++))\n\t\tdo\n\t\t\tcmd\n\t\tdone\n5. while or until\n\t\twhile condition\n\t\tdo \n\t\t\tcmd\n\t\tdone\n\t\t死循环\n\t\twhile ((1))|true|:\n\t\tfor(;1;)\n\t\tdo\n\t\t\tcmd\n\t\tdone\n6. select \n\t\tselect s in arr\n\t\tdo \n\t\t\t$REPLY $f\n\t\tdone\n\t\teg:\n\t\tselect i in $(ls ../)\n\t\tdo\n\t\t\tif [ $REPLY=='q' ];then\n\t\t\t\tkill -INT $$\n\t\t\tfi\n\t\tdone\n##转向\n###默认文件代码(file descriptor)\n+ stdin 0 stdout 1 stderr 2\n\n###文件代码操作\n+ fileDescriptor<>file 打开文件\n+ fileDescriptor<&- 关闭文件\n+ fileDescriptor>&- 关闭转向输出文件\n+ n<&m 复制转向输入的文件代码m存为n,使n连接到m\n+ n>&m 复制转向输出的文件代码m存为n,使n连接到m\n+ `>|` 忽略noclobber直接覆盖\n+ eg:exec 6 < file ;cat <&6\n\n##系统信号\n+ `kill -l/trap -l`显示使用系统信号\n+ kill \n\t+ `kill -信号id/名 PID` 或者 `kill -s 信号 PID`\n\t+ `kill -HUP PID` 重启进程，若是daemon就重新读取系统配置。\n\t+ <kbd>CTRL</kbd>+<kbd>C</kbd> 发出INT信号。\n+ trap\n\t+ `trap \"echo 'kill this ?'\" INT`  注册INT信号\n\t+ `trap - INT`  取消注册INT信号\n\t+ `trap '' INT` 忽略INT信号\n\t+ `trap -p` 显示全部注册信号\n\n##进程\n+ 进程字段|USER|PID|%CUP|%MEN|VSZ|RSS|TTY|STAT|START|TIME|COMMAND|\n+ 进程NI(nice) 值，NI值越大，优先度越小。\n\t+ `nice -n num runapp`\n\t+ `renice num -p PID -g GROUP -u USER` 为指定进程/群组/用户调整NI值\n\n###工作控制\n+ <kbd>Ctrl</kbd>+<kbd>Z</kbd>暂停执行程序，bg后台执行。\n+ jobs -l 查看执行程序,%% 或者 %+调用当前程序，%- 调用前一个。%n调用编号为n的程序等同fg %n,后台执行%n&或者bg %n\n\n##用户管理\n+ 建立帐号\n\t\t\n\t\tadduser h2ero\n\t\tuseradd -D 显示创建用户时候的默认配置，/etc/default/useradd\n\t\tdeluser/userdle username ~目录保存 \n\n##其他\n1. 添加字符集\n\t\t\n\t\tcat /usr/share/i18n/SUPPORTED\n\t\tvim /var/lib/locales/supported.d/local\n\t\tdpkg-reconfigure --force locales\n2. 目录转换\n\t\t\n\t\texport LANG=en_US\n\t\txdg-user-dirs-gtk-update\n\t\texport LANG=zh_CN\n","slug":"wiki/2012-09-01-shell-wiki","published":1,"updated":"2021-03-08T07:20:36.023Z","_id":"ckm08nri5000ugcu1fxq8evh7","comments":1,"photos":[],"link":"","content":"<p>##基础知识<br>###linux文件分类</p>\n<ul>\n<li>-  一般文件</li>\n<li>d  目录</li>\n<li>l  符号链接文件</li>\n<li>b  磁盘设备文件</li>\n<li>c  字符设备文件</li>\n<li>s  Socket文件</li>\n<li>p  连接文件</li>\n</ul>\n<p>判断方式ls -l,file filename</p>\n<p>###文件权限</p>\n<ul>\n<li>三种身份 u g o</li>\n<li>四种权限 r(read)4 w(write)2 x(execute)1 s(set user/group id|sticky bit) <ul>\n<li>set user id 执行者变为文件的拥有者4755</li>\n<li>set group id 执行者变为用户组 2755</li>\n<li>sticky bit 只有文件拥有者才可以删除 1777</li>\n</ul>\n</li>\n</ul>\n<p>###Login Shell<br>/etc/passwd字段含义:帐号:x:UID:GID:用户信息:主目录:login shell<br>eg:lightdm:x:104:111:Light Display Manager:/var/lib/lightdm:/bin/false</p>\n<p>###配置文件</p>\n<ul>\n<li>登录执行脚本及顺序<ol>\n<li>/etc/profile</li>\n<li>.bash_profile</li>\n<li>.bash_login</li>\n<li>.profile</li>\n</ol>\n</li>\n<li>注销<ol>\n<li>.bash_logout</li>\n</ol>\n</li>\n<li>执行新Shell<ol>\n<li>交互模式(interactive) .bashrc</li>\n<li>非交互模式 /bin/bash 检查BASH_ENV /bin/sh不检查任何文件</li>\n</ol>\n</li>\n</ul>\n<p>###括号匹配</p>\n<ul>\n<li>echo l{i,o}ve</li>\n<li>cp file{,.bak} 备份文件</li>\n<li>mkdir {1,2}/{3,4}</li>\n</ul>\n<p>##Shell Script<br>###执行</p>\n<ul>\n<li><code>bash script.sh</code></li>\n<li><code>sh script.sh</code></li>\n<li><code>. script.sh</code></li>\n<li><code>source .bashrc</code> 直接使配置生效</li>\n<li>. source 都会让script.sh在父Shell中执行<code>echo $SHLVL</code> <code>ps axf</code>查看层级</li>\n</ul>\n<p>###调试</p>\n<ul>\n<li>检测语法 <code>bash -v script.sh</code></li>\n<li>不执行查看程序代码 <code>bash -n script.sh</code></li>\n<li>追踪脚本执行 <code>bash -x</code></li>\n</ul>\n<p>##命令<br>###内置命令</p>\n<ol>\n<li> <code>type bg</code>  bg is a shell builtin 判断内置命令</li>\n<li> <code>help -s</code> 显示命令语法 eg: <code>help -s alias</code>  alias: alias [-p] [name[=value] … ]</li>\n<li> <code>echo</code> -n 不换行 -e \\n等解释</li>\n<li> <code>cd -</code> 返回先前目录</li>\n<li> <code>:</code> 传回真值</li>\n<li> <code>alias ll=&#39;ls -l&#39;</code> 重命名命令,取消<code>alias ll=&#39;ll&#39;</code> 或者 <code>unalias ll</code> <code>unalias -a</code>取消所有别名</li>\n<li> <code>umask</code> 显示文件权限屏蔽值 创建文件时候 文件权限值=系统默认权限-umask值</li>\n<li> <code>set</code> 设置Bash Shell属性 <code>set -o vi</code>开启vi模式，<code>set +o vi</code> 关闭vi模式,<code>set -o noclobber</code>/<code>set -C</code>转向输出保护存在文件</li>\n<li> <code>shopt</code> 设置Bash Shell行为模式</li>\n<li><code>time</code> 指令执行耗时统计 <code>time ls -la</code></li>\n<li>read 读取变量<ul>\n<li><code>read input</code> 如果没有input变量，默认为$REPLY</li>\n<li><code>read -p &quot;please input a word:&quot;</code></li>\n<li><code>read -a arr&lt;&lt;(echo 1,2,3,6,5,4)</code> 读取数组</li>\n<li><code>IFS=&quot;:&quot;;read f1 f2 f3 f4 &lt; datafile</code> 没有设置IFS则默认空格</li>\n<li><code>read -r raw</code> 不过滤\\</li>\n</ul>\n</li>\n<li><code>exec</code> <code>eval</code> 执行命令</li>\n<li><code>man -k sort</code> 查找命令</li>\n</ol>\n<p>###命令行程序<br>执行时候需要到$PATH中寻找</p>\n<ol>\n<li> <code>which top</code> 在PATH找寻第一top命令所在位置 -a 找寻全部</li>\n<li> <code>locate my.conf</code> 在文件索引数据库中找寻my.conf文件</li>\n<li>date<ul>\n<li><code>date MMDDhhmmYY</code>调整时间 </li>\n<li><code>date + &quot;%d%h%m&quot;</code> 产生指定时间格式</li>\n<li><code>date -R</code> 产生与RFC-2822兼容的时间格式</li>\n</ul>\n</li>\n<li>ls<ul>\n<li><code>ls -A</code> 与 <code>ls -a</code>相同但不显示 .,..</li>\n<li><code>ls -F</code> 在结果中加入标识符(*可执行文件，@软链接文件，=socket文件，|管道文件,不加则表示普通文件)</li>\n</ul>\n</li>\n<li> <code>cat &gt;file</code>输入内容<kbd>CTRL</kbd>+<kbd>D</kbd>编辑保存文件内容到file</li>\n<li> <code>head -n 4</code>显示前4行内容，<code>head -c -20</code>不显示前面20bytes内容,<code>tail</code>类似</li>\n<li> <code>wc</code> -c/w/l计算文件字符/单词/行</li>\n<li> <code>finde . -name &quot;*.txt&quot; -ctime 2 --exec rm -f &#123;&#125; \\; </code> 找寻2天内修改过的text文件删除</li>\n<li>tar<ul>\n<li><code>tar -zxvf backup.tgz -C www/public</code> 解压到指定目录</li>\n<li>tar tvf etc.tar 显示文件内容</li>\n<li>tar xzvf etc.tar 解压</li>\n<li>tar zcvf etc.tar 压缩</li>\n<li>tar rvf etc.tar re.add.file 添加</li>\n<li>tar uvf etc.tar add.file 更新</li>\n<li>tar Avf 1.tar 2.tar all.tar 合并</li>\n<li>tar vf etc.tar –delete etc/hosts 删除指定文件</li>\n</ul>\n</li>\n<li><code>basename /path/filename</code> 取filename</li>\n<li><code>dirname /path/filename</code> 取path </li>\n<li><code>sort -nr +2 -t: /etc/passwd</code> -t 分隔符 +2 跳过两列排序第三列 -nr 反序按数值排序(默认按ASCII)</li>\n<li><code>uniq file</code>删除文件中重复的行，-d找出重复行，-c 计算重复行出现的次数</li>\n<li>cut<ul>\n<li><code>cut -c2-3 file</code> 抽取第2-3个字符</li>\n<li><code>cut -c9- file</code> 抽取第9以后的</li>\n<li><code>cut -c1</code> 抽取第1个字符</li>\n<li><code>cut -c-3,22- file</code>抽取第1-3,和22以后的字符</li>\n<li><code>cut -d: -f3,1 /etc/passwd</code> 抽取paawd见3,1列</li>\n</ul>\n</li>\n<li>tr 转换或删除字符<ul>\n<li><code>tr &#39;[a-z]&#39; &#39;[A-Z]&#39; &lt; file</code> 转换大写</li>\n<li><code>tr -d k</code> 删除字符k</li>\n<li><code>tr -s &#39;[a-z]&#39; &#39;[a-z]&#39; &lt;file </code>压缩aaa为a</li>\n</ul>\n</li>\n<li>grep<ul>\n<li><code>grep -Rin &quot;word&quot; *</code>/<code>grep -Ril &quot;word&quot; *</code> 匹配所有word显示行号，不区分大小</li>\n<li><code>grep -v &quot;word&quot; *</code> 显示不包含word eg:<code>ps -ef | grep nautilus| grep -v &quot;grep nautilus&quot;</code></li>\n<li><code>grep -q &quot;word&quot; file</code> 返回1/0，并放到$?这个变量中</li>\n<li><code>grep -A 2 -e &#39;someone (love|like) you&#39; file</code> 找到h2..以后显示接下来的两行</li>\n</ul>\n</li>\n<li>tee<ul>\n<li><code>tee -a file</code>=<code>cat &gt;&gt;file</code>文件内容<kbd>Ctrl</kbd>+<kbd>D</kbd></li>\n<li><code>tee file</code>存在清空，不存在输入然后<kbd>Ctrl</kbd>+<kbd>D</kbd></li>\n</ul>\n</li>\n<li><code>script log</code>记录接下来命令的执行过程及结果,直到<code>exit</code>退出</li>\n<li>top <kby>z</kby>切换彩色显示</li>\n<li>关机命令<ul>\n<li>sync&amp;&amp;shutdown -h now/+30/20:00</li>\n<li>init 0<ul>\n<li>0 关机</li>\n<li>3 纯文本</li>\n<li>5 图形界面</li>\n<li>6 重新启动</li>\n</ul>\n</li>\n<li>poweroff -f</li>\n</ul>\n</li>\n<li>chown root:root file</li>\n<li>chmod <ul>\n<li>chmod u=rwx,g=rw file</li>\n<li>chmod a-x file</li>\n</ul>\n</li>\n</ol>\n<p>###文件操作<br>20. touch file 建立新文件等同于 &gt; file :&gt;file<br>21. mkdir -m 777 file<br>22. mknod -m 666 file c/b/p n m 建立字符/区块/管道文件 主要设备代码n 次要设备代码m<br>23. mkfifo file 建立管道文件 使用 echo “h2ero” &gt; file ,  cat &lt; file<br>24. ln -sf file lnfile 删除ln再次建立<br>25. stat file 查看文件的所有属性<br>    + stat -c “%a%n” 单独查看文件相关属性输出<br>    + stat -f “%a” 单独查看分区相关属性输出<br>26. chattr +attr =attr -attr AaiD 为文件设置文件取用时间不变/只能转向开启文件进行写入/不能修改文件/不需要dump 特殊属性<br>27. lsattr file 查看文件特殊属性<br>28. gzip<br>    * gzip -d 解压<br>    * gzip -c 压缩<br>        * zcat</p>\n<p>###历史命令</p>\n<ul>\n<li>fc<ul>\n<li>fc ssh 查找最近一个包含ssh</li>\n<li>fc -s ssh 查找最近一个包含ssh，并执行</li>\n</ul>\n</li>\n<li>历史命令扩展<ul>\n<li>!! 执行上一条 = !-1</li>\n<li>!historyline 执行编号为historyline的指令</li>\n<li>!-n 调用倒数第n条指令</li>\n<li>!ssh 调用最近含有ssh的命令</li>\n<li>!?home? 调用最近含有home的命令</li>\n<li>^var1^var2^ 将前一个历史命令中的var1替换为var2再执行</li>\n<li>!# 前面输入的所有字符。ls !# 相当于执行ls ls</li>\n<li>!!:$ 前一条命令的最后一个参数=$_</li>\n<li>!ls:1 找出最近一条以ls开头的命令的第一个参数=!ls:^</li>\n<li>!ls:* 找出最近一天以ls开头的所有参数</li>\n<li>!!:3-5 找出前一条3-5的参数</li>\n<li>!!:s/var/var1/替换前1条指令中的var 为 var1</li>\n<li>!!:h 删除后面的文件名</li>\n<li>!!:t 删除前面的目录</li>\n<li>!!:p 显示前一条命令但是不执行</li>\n</ul>\n</li>\n</ul>\n<p>###执行多条命令</p>\n<ol>\n<li>cmd1&amp;&amp;cmd2 cmd1执行成功cmd2才执行</li>\n<li>cmd1||cmd2 cmd1执行失败cmd2才执行</li>\n<li>(cmd1,cmd2,cmd3)子shell中执行</li>\n<li>{ cmd1,cmd2,cmd3 }在当前shell中执行</li>\n</ol>\n<p>##变量<br>###数组</p>\n<ul>\n<li>语法${A[index]}}，声明arr=(1 2 3 4)</li>\n<li>所有元素<code>$&#123;A[@]&#125;/$&#123;A[*]&#125;</code></li>\n<li>长度<code>$&#123;#A[@]&#125;/$&#123;#A[*]&#125;</code></li>\n<li>赋值 <code>arr[$&#123;#arr[*]&#125;]=2</code></li>\n</ul>\n<p>###取消变量</p>\n<ul>\n<li>unset -v variable unset -f function</li>\n</ul>\n<p>###环境变量</p>\n<ul>\n<li>export -p 显示全部环境变量</li>\n<li><code>declare -x LANG=&quot;en_US.UTF-8&quot;</code> 或者 <code>export LANG=&quot;en_US.UTF-8&quot;</code><br>###Bash 内置变量</li>\n<li>$BASH bash完整路径</li>\n<li>$BASH_VERSION bash版本</li>\n<li>$CDPATH cd切换搜寻目录</li>\n<li>$HISCONTROL 控制指令是否存入历史，三个值ignorespace,ignoredups,ignoreboth，</li>\n<li>$HISTFILESIZE 行数</li>\n<li>$HISTIGNORE <code>export HISTIGNORE=ls:ps:cd:t*:\\&amp; </code></li>\n<li>HISTTIMEFORMAT=’%F%T’ 时间格式</li>\n<li><code>locale</code> 语系</li>\n<li>$PATH 命令搜索目录</li>\n<li>RANDOM</li>\n<li>$* 所有参数一个字符串 “arg1 arg2 arg3”</li>\n<li>$n 第n个参数</li>\n<li>$@ 所有参数分开字符串 “arg1” “arg2” “arg3”</li>\n<li>$# 位置参数个数</li>\n<li>$? 上一条命令传回的值1/0 成功或者失败</li>\n<li>$$ 当前bash shell 进程标号 eg: kill $$</li>\n<li>$_ <ul>\n<li>script执行时候bash路径/bin/bash</li>\n<li>上一条命令最后一个参数值</li>\n<li>检查邮件时候,邮件文件名</li>\n</ul>\n</li>\n</ul>\n<p>###变量属性</p>\n<ul>\n<li>readonly<ul>\n<li>readonly -p 显示所有只读属性</li>\n<li>readonly -a/f 声明只读变量或者函数</li>\n</ul>\n</li>\n<li>declare <ul>\n<li>declare -p | grep x  显示x变量属性</li>\n<li>declare -p x 显示x变量属性</li>\n<li>declare -a/f/i/r/x 声明数组/函数/整数/只读/环境变量</li>\n<li>declare -F 显示所有的函数名称及属性</li>\n</ul>\n</li>\n</ul>\n<p>###HEREDOC</p>\n<ol>\n<li>重定向到msg文件<pre><code> cat  &lt;&lt;HEREDOC &gt;msg \n doc\n HEREDOC\n</code></pre>\n</li>\n<li>直接输出<pre><code> cat &lt;&lt;HEREDOC \n $USER can be used\n HEREDOC\n</code></pre>\n</li>\n<li>直接输出不支持变量替换<pre><code> cat &lt;&lt;&quot;HEREDOC&quot;\n $USER can&#39;t be used\n HEREDOC\n</code></pre>\n</li>\n</ol>\n<p>##高级变量<br>###分类</p>\n<ol>\n<li><p>${var} 变量扩展</p>\n<ul>\n<li><p>测试存在</p>\n<table>\n<thead>\n<tr>\n<th>条件式</th>\n<th>目的</th>\n<th>判断条件</th>\n<th>符合的处理方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>${待测变量-默认值}</td>\n<td>给不存在变量赋值</td>\n<td>不存在</td>\n<td>赋值</td>\n</tr>\n<tr>\n<td>${待测变量:-默认值}</td>\n<td>给不存在或空值变量赋值</td>\n<td>不存在或空值</td>\n<td>赋值</td>\n</tr>\n<tr>\n<td>${待测变量:=默认值}</td>\n<td>给空值赋值</td>\n<td>不存在或空值</td>\n<td>赋值</td>\n</tr>\n<tr>\n<td>${待测变量:?默认值}</td>\n<td>检查变量是否完备</td>\n<td>不存在或空值</td>\n<td>显示变量名称:提示信息，停止执行后面的</td>\n</tr>\n<tr>\n<td>${待测变量:i默认值}</td>\n<td>判断是否为真</td>\n<td>测试存在且非空</td>\n<td>传回默认值</td>\n</tr>\n</tbody></table>\n<p> 记忆</p>\n<table>\n<thead>\n<tr>\n<th>:</th>\n<th>空</th>\n<th>测试值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-</td>\n<td>负向</td>\n<td>测不存在</td>\n</tr>\n<tr>\n<td>=</td>\n<td>设值</td>\n<td>给空值变量设置一个默认值</td>\n</tr>\n<tr>\n<td>?</td>\n<td>有问题</td>\n<td>检查条件是否完备后再执行</td>\n</tr>\n<tr>\n<td>-</td>\n<td>正向</td>\n<td>测试存在</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ol>\n<pre><code>+ 取字符串\n\n   | $&#123;var:start&#125;     | 指定位置截取到最后       | \n   |------------------|--------------------------|\n   | $&#123;var:start:len&#125; | 指定位置截取len个        | \n   | $&#123;#var&#125;          | 变量字符长度             | \n   | $&#123;#var[@]&#125;       | 数组元素个数             | \n   | $&#123;#var[\\*]&#125;      | 数组元素个数             | \n   | $&#123;var:start:len&#125; | 指定位置截取len个        | \n   | $&#123;@:start&#125;       | 指定位置截取到最后的参数 | \n   | $&#123;@:start:count&#125; | 指定位置截取到最后的参数 | \n\n+ 对比\n\n   | $&#123;var#tpl&#125;  | 由前面对比删除最短 | \n   |-------------|--------------------|\n   | $&#123;var##tpl&#125; | 由前面对比删除最长 | \n   | $&#123;var%tpl&#125;  | 由后面对比删除最短 | \n   | $&#123;var%%tpl&#125; | 由后面对比删除最长 | \n\n+ 修改 若不加/str则为删除，替换为空\n\n   | 1 | $&#123;var/tpl/str&#125;  | 替换地一个符tpl的  |\n   |---|-----------------|--------------------|\n   | 2 | $&#123;var//tpl/str&#125; | 替换地全部符合tpl的|\n   | 3 | $&#123;var#tpl/str&#125;  | 同1，由开始替换    |\n   | 4 | $&#123;var#tpl/str&#125;  | 同2，由开始替换    |\n\n+ 取变量\n    1. $&#123;!var@&#125; 或者 `$&#123;!var*&#125;` 去所有一var开头的变量名称\n    2. $&#123;!arr[@]&#125; 或者 `$&#123;!arr[*]&#125;` 取所有数组索引\n</code></pre>\n<ol start=\"2\">\n<li>$(cmd) 或者 <code>cmd</code> 命令扩展</li>\n<li>算术扩展<ol>\n<li>$((exp)) </li>\n<li><code>expr exp</code></li>\n<li>$[exp]</li>\n</ol>\n</li>\n</ol>\n<p>##流程控制</p>\n<ol>\n<li>if cmd1&amp;&amp;cmd2 也可当做if用<ol>\n<li>if-then<pre><code> if condition;then\n     cmd\n fi\n</code></pre>\n</li>\n<li>if-then-else<pre><code> if condition;then\n     cmd\n else\n     cmd\n fi\n</code></pre>\n</li>\n<li>if-then-elif-then-else<pre><code> if condition;then\n     cmd\n elif condition;then\n else\n     cmd\n fi\n</code></pre>\n</li>\n</ol>\n</li>\n<li>条件<ol>\n<li>执行命令返回的结果，eg: grep -q ^h2ero$ filename</li>\n<li>[[ ]] eg: [[ str &gt; xyz ]]</li>\n<li>test eg: test “str”&gt;“xyz”</li>\n<li><input disabled=\"\" type=\"checkbox\"> eg:[ “str”&gt;“xyz” ] , [ -f dir/file ]</li>\n</ol>\n</li>\n<li>case 如果shopt -s extglob 则开启高级样式<pre><code> case testitem in\n     j|k|l) cmd;;\n esac\n</code></pre>\n</li>\n<li>for<pre><code> for i in arr\n do\n     cmd\n done\n for ((i=1;i&lt;10;i++))\n do\n     cmd\n done\n</code></pre>\n</li>\n<li>while or until<pre><code> while condition\n do \n     cmd\n done\n 死循环\n while ((1))|true|:\n for(;1;)\n do\n     cmd\n done\n</code></pre>\n</li>\n<li>select <pre><code> select s in arr\n do \n     $REPLY $f\n done\n eg:\n select i in $(ls ../)\n do\n     if [ $REPLY==&#39;q&#39; ];then\n         kill -INT $$\n     fi\n done\n</code></pre>\n##转向<br>###默认文件代码(file descriptor)</li>\n</ol>\n<ul>\n<li>stdin 0 stdout 1 stderr 2</li>\n</ul>\n<p>###文件代码操作</p>\n<ul>\n<li>fileDescriptor&lt;&gt;file 打开文件</li>\n<li>fileDescriptor&lt;&amp;- 关闭文件</li>\n<li>fileDescriptor&gt;&amp;- 关闭转向输出文件</li>\n<li>n&lt;&amp;m 复制转向输入的文件代码m存为n,使n连接到m</li>\n<li>n&gt;&amp;m 复制转向输出的文件代码m存为n,使n连接到m</li>\n<li><code>&gt;|</code> 忽略noclobber直接覆盖</li>\n<li>eg:exec 6 &lt; file ;cat &lt;&amp;6</li>\n</ul>\n<p>##系统信号</p>\n<ul>\n<li><code>kill -l/trap -l</code>显示使用系统信号</li>\n<li>kill <ul>\n<li><code>kill -信号id/名 PID</code> 或者 <code>kill -s 信号 PID</code></li>\n<li><code>kill -HUP PID</code> 重启进程，若是daemon就重新读取系统配置。</li>\n<li><kbd>CTRL</kbd>+<kbd>C</kbd> 发出INT信号。</li>\n</ul>\n</li>\n<li>trap<ul>\n<li><code>trap &quot;echo &#39;kill this ?&#39;&quot; INT</code>  注册INT信号</li>\n<li><code>trap - INT</code>  取消注册INT信号</li>\n<li><code>trap &#39;&#39; INT</code> 忽略INT信号</li>\n<li><code>trap -p</code> 显示全部注册信号</li>\n</ul>\n</li>\n</ul>\n<p>##进程</p>\n<ul>\n<li>进程字段|USER|PID|%CUP|%MEN|VSZ|RSS|TTY|STAT|START|TIME|COMMAND|</li>\n<li>进程NI(nice) 值，NI值越大，优先度越小。<ul>\n<li><code>nice -n num runapp</code></li>\n<li><code>renice num -p PID -g GROUP -u USER</code> 为指定进程/群组/用户调整NI值</li>\n</ul>\n</li>\n</ul>\n<p>###工作控制</p>\n<ul>\n<li><kbd>Ctrl</kbd>+<kbd>Z</kbd>暂停执行程序，bg后台执行。</li>\n<li>jobs -l 查看执行程序,%% 或者 %+调用当前程序，%- 调用前一个。%n调用编号为n的程序等同fg %n,后台执行%n&amp;或者bg %n</li>\n</ul>\n<p>##用户管理</p>\n<ul>\n<li>建立帐号<pre><code>  adduser h2ero\n  useradd -D 显示创建用户时候的默认配置，/etc/default/useradd\n  deluser/userdle username ~目录保存 \n</code></pre>\n</li>\n</ul>\n<p>##其他</p>\n<ol>\n<li>添加字符集<pre><code> cat /usr/share/i18n/SUPPORTED\n vim /var/lib/locales/supported.d/local\n dpkg-reconfigure --force locales\n</code></pre>\n</li>\n<li>目录转换<pre><code> export LANG=en_US\n xdg-user-dirs-gtk-update\n export LANG=zh_CN\n</code></pre>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>##基础知识<br>###linux文件分类</p>\n<ul>\n<li>-  一般文件</li>\n<li>d  目录</li>\n<li>l  符号链接文件</li>\n<li>b  磁盘设备文件</li>\n<li>c  字符设备文件</li>\n<li>s  Socket文件</li>\n<li>p  连接文件</li>\n</ul>\n<p>判断方式ls -l,file filename</p>\n<p>###文件权限</p>\n<ul>\n<li>三种身份 u g o</li>\n<li>四种权限 r(read)4 w(write)2 x(execute)1 s(set user/group id|sticky bit) <ul>\n<li>set user id 执行者变为文件的拥有者4755</li>\n<li>set group id 执行者变为用户组 2755</li>\n<li>sticky bit 只有文件拥有者才可以删除 1777</li>\n</ul>\n</li>\n</ul>\n<p>###Login Shell<br>/etc/passwd字段含义:帐号:x:UID:GID:用户信息:主目录:login shell<br>eg:lightdm:x:104:111:Light Display Manager:/var/lib/lightdm:/bin/false</p>\n<p>###配置文件</p>\n<ul>\n<li>登录执行脚本及顺序<ol>\n<li>/etc/profile</li>\n<li>.bash_profile</li>\n<li>.bash_login</li>\n<li>.profile</li>\n</ol>\n</li>\n<li>注销<ol>\n<li>.bash_logout</li>\n</ol>\n</li>\n<li>执行新Shell<ol>\n<li>交互模式(interactive) .bashrc</li>\n<li>非交互模式 /bin/bash 检查BASH_ENV /bin/sh不检查任何文件</li>\n</ol>\n</li>\n</ul>\n<p>###括号匹配</p>\n<ul>\n<li>echo l{i,o}ve</li>\n<li>cp file{,.bak} 备份文件</li>\n<li>mkdir {1,2}/{3,4}</li>\n</ul>\n<p>##Shell Script<br>###执行</p>\n<ul>\n<li><code>bash script.sh</code></li>\n<li><code>sh script.sh</code></li>\n<li><code>. script.sh</code></li>\n<li><code>source .bashrc</code> 直接使配置生效</li>\n<li>. source 都会让script.sh在父Shell中执行<code>echo $SHLVL</code> <code>ps axf</code>查看层级</li>\n</ul>\n<p>###调试</p>\n<ul>\n<li>检测语法 <code>bash -v script.sh</code></li>\n<li>不执行查看程序代码 <code>bash -n script.sh</code></li>\n<li>追踪脚本执行 <code>bash -x</code></li>\n</ul>\n<p>##命令<br>###内置命令</p>\n<ol>\n<li> <code>type bg</code>  bg is a shell builtin 判断内置命令</li>\n<li> <code>help -s</code> 显示命令语法 eg: <code>help -s alias</code>  alias: alias [-p] [name[=value] … ]</li>\n<li> <code>echo</code> -n 不换行 -e \\n等解释</li>\n<li> <code>cd -</code> 返回先前目录</li>\n<li> <code>:</code> 传回真值</li>\n<li> <code>alias ll=&#39;ls -l&#39;</code> 重命名命令,取消<code>alias ll=&#39;ll&#39;</code> 或者 <code>unalias ll</code> <code>unalias -a</code>取消所有别名</li>\n<li> <code>umask</code> 显示文件权限屏蔽值 创建文件时候 文件权限值=系统默认权限-umask值</li>\n<li> <code>set</code> 设置Bash Shell属性 <code>set -o vi</code>开启vi模式，<code>set +o vi</code> 关闭vi模式,<code>set -o noclobber</code>/<code>set -C</code>转向输出保护存在文件</li>\n<li> <code>shopt</code> 设置Bash Shell行为模式</li>\n<li><code>time</code> 指令执行耗时统计 <code>time ls -la</code></li>\n<li>read 读取变量<ul>\n<li><code>read input</code> 如果没有input变量，默认为$REPLY</li>\n<li><code>read -p &quot;please input a word:&quot;</code></li>\n<li><code>read -a arr&lt;&lt;(echo 1,2,3,6,5,4)</code> 读取数组</li>\n<li><code>IFS=&quot;:&quot;;read f1 f2 f3 f4 &lt; datafile</code> 没有设置IFS则默认空格</li>\n<li><code>read -r raw</code> 不过滤\\</li>\n</ul>\n</li>\n<li><code>exec</code> <code>eval</code> 执行命令</li>\n<li><code>man -k sort</code> 查找命令</li>\n</ol>\n<p>###命令行程序<br>执行时候需要到$PATH中寻找</p>\n<ol>\n<li> <code>which top</code> 在PATH找寻第一top命令所在位置 -a 找寻全部</li>\n<li> <code>locate my.conf</code> 在文件索引数据库中找寻my.conf文件</li>\n<li>date<ul>\n<li><code>date MMDDhhmmYY</code>调整时间 </li>\n<li><code>date + &quot;%d%h%m&quot;</code> 产生指定时间格式</li>\n<li><code>date -R</code> 产生与RFC-2822兼容的时间格式</li>\n</ul>\n</li>\n<li>ls<ul>\n<li><code>ls -A</code> 与 <code>ls -a</code>相同但不显示 .,..</li>\n<li><code>ls -F</code> 在结果中加入标识符(*可执行文件，@软链接文件，=socket文件，|管道文件,不加则表示普通文件)</li>\n</ul>\n</li>\n<li> <code>cat &gt;file</code>输入内容<kbd>CTRL</kbd>+<kbd>D</kbd>编辑保存文件内容到file</li>\n<li> <code>head -n 4</code>显示前4行内容，<code>head -c -20</code>不显示前面20bytes内容,<code>tail</code>类似</li>\n<li> <code>wc</code> -c/w/l计算文件字符/单词/行</li>\n<li> <code>finde . -name &quot;*.txt&quot; -ctime 2 --exec rm -f &#123;&#125; \\; </code> 找寻2天内修改过的text文件删除</li>\n<li>tar<ul>\n<li><code>tar -zxvf backup.tgz -C www/public</code> 解压到指定目录</li>\n<li>tar tvf etc.tar 显示文件内容</li>\n<li>tar xzvf etc.tar 解压</li>\n<li>tar zcvf etc.tar 压缩</li>\n<li>tar rvf etc.tar re.add.file 添加</li>\n<li>tar uvf etc.tar add.file 更新</li>\n<li>tar Avf 1.tar 2.tar all.tar 合并</li>\n<li>tar vf etc.tar –delete etc/hosts 删除指定文件</li>\n</ul>\n</li>\n<li><code>basename /path/filename</code> 取filename</li>\n<li><code>dirname /path/filename</code> 取path </li>\n<li><code>sort -nr +2 -t: /etc/passwd</code> -t 分隔符 +2 跳过两列排序第三列 -nr 反序按数值排序(默认按ASCII)</li>\n<li><code>uniq file</code>删除文件中重复的行，-d找出重复行，-c 计算重复行出现的次数</li>\n<li>cut<ul>\n<li><code>cut -c2-3 file</code> 抽取第2-3个字符</li>\n<li><code>cut -c9- file</code> 抽取第9以后的</li>\n<li><code>cut -c1</code> 抽取第1个字符</li>\n<li><code>cut -c-3,22- file</code>抽取第1-3,和22以后的字符</li>\n<li><code>cut -d: -f3,1 /etc/passwd</code> 抽取paawd见3,1列</li>\n</ul>\n</li>\n<li>tr 转换或删除字符<ul>\n<li><code>tr &#39;[a-z]&#39; &#39;[A-Z]&#39; &lt; file</code> 转换大写</li>\n<li><code>tr -d k</code> 删除字符k</li>\n<li><code>tr -s &#39;[a-z]&#39; &#39;[a-z]&#39; &lt;file </code>压缩aaa为a</li>\n</ul>\n</li>\n<li>grep<ul>\n<li><code>grep -Rin &quot;word&quot; *</code>/<code>grep -Ril &quot;word&quot; *</code> 匹配所有word显示行号，不区分大小</li>\n<li><code>grep -v &quot;word&quot; *</code> 显示不包含word eg:<code>ps -ef | grep nautilus| grep -v &quot;grep nautilus&quot;</code></li>\n<li><code>grep -q &quot;word&quot; file</code> 返回1/0，并放到$?这个变量中</li>\n<li><code>grep -A 2 -e &#39;someone (love|like) you&#39; file</code> 找到h2..以后显示接下来的两行</li>\n</ul>\n</li>\n<li>tee<ul>\n<li><code>tee -a file</code>=<code>cat &gt;&gt;file</code>文件内容<kbd>Ctrl</kbd>+<kbd>D</kbd></li>\n<li><code>tee file</code>存在清空，不存在输入然后<kbd>Ctrl</kbd>+<kbd>D</kbd></li>\n</ul>\n</li>\n<li><code>script log</code>记录接下来命令的执行过程及结果,直到<code>exit</code>退出</li>\n<li>top <kby>z</kby>切换彩色显示</li>\n<li>关机命令<ul>\n<li>sync&amp;&amp;shutdown -h now/+30/20:00</li>\n<li>init 0<ul>\n<li>0 关机</li>\n<li>3 纯文本</li>\n<li>5 图形界面</li>\n<li>6 重新启动</li>\n</ul>\n</li>\n<li>poweroff -f</li>\n</ul>\n</li>\n<li>chown root:root file</li>\n<li>chmod <ul>\n<li>chmod u=rwx,g=rw file</li>\n<li>chmod a-x file</li>\n</ul>\n</li>\n</ol>\n<p>###文件操作<br>20. touch file 建立新文件等同于 &gt; file :&gt;file<br>21. mkdir -m 777 file<br>22. mknod -m 666 file c/b/p n m 建立字符/区块/管道文件 主要设备代码n 次要设备代码m<br>23. mkfifo file 建立管道文件 使用 echo “h2ero” &gt; file ,  cat &lt; file<br>24. ln -sf file lnfile 删除ln再次建立<br>25. stat file 查看文件的所有属性<br>    + stat -c “%a%n” 单独查看文件相关属性输出<br>    + stat -f “%a” 单独查看分区相关属性输出<br>26. chattr +attr =attr -attr AaiD 为文件设置文件取用时间不变/只能转向开启文件进行写入/不能修改文件/不需要dump 特殊属性<br>27. lsattr file 查看文件特殊属性<br>28. gzip<br>    * gzip -d 解压<br>    * gzip -c 压缩<br>        * zcat</p>\n<p>###历史命令</p>\n<ul>\n<li>fc<ul>\n<li>fc ssh 查找最近一个包含ssh</li>\n<li>fc -s ssh 查找最近一个包含ssh，并执行</li>\n</ul>\n</li>\n<li>历史命令扩展<ul>\n<li>!! 执行上一条 = !-1</li>\n<li>!historyline 执行编号为historyline的指令</li>\n<li>!-n 调用倒数第n条指令</li>\n<li>!ssh 调用最近含有ssh的命令</li>\n<li>!?home? 调用最近含有home的命令</li>\n<li>^var1^var2^ 将前一个历史命令中的var1替换为var2再执行</li>\n<li>!# 前面输入的所有字符。ls !# 相当于执行ls ls</li>\n<li>!!:$ 前一条命令的最后一个参数=$_</li>\n<li>!ls:1 找出最近一条以ls开头的命令的第一个参数=!ls:^</li>\n<li>!ls:* 找出最近一天以ls开头的所有参数</li>\n<li>!!:3-5 找出前一条3-5的参数</li>\n<li>!!:s/var/var1/替换前1条指令中的var 为 var1</li>\n<li>!!:h 删除后面的文件名</li>\n<li>!!:t 删除前面的目录</li>\n<li>!!:p 显示前一条命令但是不执行</li>\n</ul>\n</li>\n</ul>\n<p>###执行多条命令</p>\n<ol>\n<li>cmd1&amp;&amp;cmd2 cmd1执行成功cmd2才执行</li>\n<li>cmd1||cmd2 cmd1执行失败cmd2才执行</li>\n<li>(cmd1,cmd2,cmd3)子shell中执行</li>\n<li>{ cmd1,cmd2,cmd3 }在当前shell中执行</li>\n</ol>\n<p>##变量<br>###数组</p>\n<ul>\n<li>语法${A[index]}}，声明arr=(1 2 3 4)</li>\n<li>所有元素<code>$&#123;A[@]&#125;/$&#123;A[*]&#125;</code></li>\n<li>长度<code>$&#123;#A[@]&#125;/$&#123;#A[*]&#125;</code></li>\n<li>赋值 <code>arr[$&#123;#arr[*]&#125;]=2</code></li>\n</ul>\n<p>###取消变量</p>\n<ul>\n<li>unset -v variable unset -f function</li>\n</ul>\n<p>###环境变量</p>\n<ul>\n<li>export -p 显示全部环境变量</li>\n<li><code>declare -x LANG=&quot;en_US.UTF-8&quot;</code> 或者 <code>export LANG=&quot;en_US.UTF-8&quot;</code><br>###Bash 内置变量</li>\n<li>$BASH bash完整路径</li>\n<li>$BASH_VERSION bash版本</li>\n<li>$CDPATH cd切换搜寻目录</li>\n<li>$HISCONTROL 控制指令是否存入历史，三个值ignorespace,ignoredups,ignoreboth，</li>\n<li>$HISTFILESIZE 行数</li>\n<li>$HISTIGNORE <code>export HISTIGNORE=ls:ps:cd:t*:\\&amp; </code></li>\n<li>HISTTIMEFORMAT=’%F%T’ 时间格式</li>\n<li><code>locale</code> 语系</li>\n<li>$PATH 命令搜索目录</li>\n<li>RANDOM</li>\n<li>$* 所有参数一个字符串 “arg1 arg2 arg3”</li>\n<li>$n 第n个参数</li>\n<li>$@ 所有参数分开字符串 “arg1” “arg2” “arg3”</li>\n<li>$# 位置参数个数</li>\n<li>$? 上一条命令传回的值1/0 成功或者失败</li>\n<li>$$ 当前bash shell 进程标号 eg: kill $$</li>\n<li>$_ <ul>\n<li>script执行时候bash路径/bin/bash</li>\n<li>上一条命令最后一个参数值</li>\n<li>检查邮件时候,邮件文件名</li>\n</ul>\n</li>\n</ul>\n<p>###变量属性</p>\n<ul>\n<li>readonly<ul>\n<li>readonly -p 显示所有只读属性</li>\n<li>readonly -a/f 声明只读变量或者函数</li>\n</ul>\n</li>\n<li>declare <ul>\n<li>declare -p | grep x  显示x变量属性</li>\n<li>declare -p x 显示x变量属性</li>\n<li>declare -a/f/i/r/x 声明数组/函数/整数/只读/环境变量</li>\n<li>declare -F 显示所有的函数名称及属性</li>\n</ul>\n</li>\n</ul>\n<p>###HEREDOC</p>\n<ol>\n<li>重定向到msg文件<pre><code> cat  &lt;&lt;HEREDOC &gt;msg \n doc\n HEREDOC\n</code></pre>\n</li>\n<li>直接输出<pre><code> cat &lt;&lt;HEREDOC \n $USER can be used\n HEREDOC\n</code></pre>\n</li>\n<li>直接输出不支持变量替换<pre><code> cat &lt;&lt;&quot;HEREDOC&quot;\n $USER can&#39;t be used\n HEREDOC\n</code></pre>\n</li>\n</ol>\n<p>##高级变量<br>###分类</p>\n<ol>\n<li><p>${var} 变量扩展</p>\n<ul>\n<li><p>测试存在</p>\n<table>\n<thead>\n<tr>\n<th>条件式</th>\n<th>目的</th>\n<th>判断条件</th>\n<th>符合的处理方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>${待测变量-默认值}</td>\n<td>给不存在变量赋值</td>\n<td>不存在</td>\n<td>赋值</td>\n</tr>\n<tr>\n<td>${待测变量:-默认值}</td>\n<td>给不存在或空值变量赋值</td>\n<td>不存在或空值</td>\n<td>赋值</td>\n</tr>\n<tr>\n<td>${待测变量:=默认值}</td>\n<td>给空值赋值</td>\n<td>不存在或空值</td>\n<td>赋值</td>\n</tr>\n<tr>\n<td>${待测变量:?默认值}</td>\n<td>检查变量是否完备</td>\n<td>不存在或空值</td>\n<td>显示变量名称:提示信息，停止执行后面的</td>\n</tr>\n<tr>\n<td>${待测变量:i默认值}</td>\n<td>判断是否为真</td>\n<td>测试存在且非空</td>\n<td>传回默认值</td>\n</tr>\n</tbody></table>\n<p> 记忆</p>\n<table>\n<thead>\n<tr>\n<th>:</th>\n<th>空</th>\n<th>测试值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-</td>\n<td>负向</td>\n<td>测不存在</td>\n</tr>\n<tr>\n<td>=</td>\n<td>设值</td>\n<td>给空值变量设置一个默认值</td>\n</tr>\n<tr>\n<td>?</td>\n<td>有问题</td>\n<td>检查条件是否完备后再执行</td>\n</tr>\n<tr>\n<td>-</td>\n<td>正向</td>\n<td>测试存在</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ol>\n<pre><code>+ 取字符串\n\n   | $&#123;var:start&#125;     | 指定位置截取到最后       | \n   |------------------|--------------------------|\n   | $&#123;var:start:len&#125; | 指定位置截取len个        | \n   | $&#123;#var&#125;          | 变量字符长度             | \n   | $&#123;#var[@]&#125;       | 数组元素个数             | \n   | $&#123;#var[\\*]&#125;      | 数组元素个数             | \n   | $&#123;var:start:len&#125; | 指定位置截取len个        | \n   | $&#123;@:start&#125;       | 指定位置截取到最后的参数 | \n   | $&#123;@:start:count&#125; | 指定位置截取到最后的参数 | \n\n+ 对比\n\n   | $&#123;var#tpl&#125;  | 由前面对比删除最短 | \n   |-------------|--------------------|\n   | $&#123;var##tpl&#125; | 由前面对比删除最长 | \n   | $&#123;var%tpl&#125;  | 由后面对比删除最短 | \n   | $&#123;var%%tpl&#125; | 由后面对比删除最长 | \n\n+ 修改 若不加/str则为删除，替换为空\n\n   | 1 | $&#123;var/tpl/str&#125;  | 替换地一个符tpl的  |\n   |---|-----------------|--------------------|\n   | 2 | $&#123;var//tpl/str&#125; | 替换地全部符合tpl的|\n   | 3 | $&#123;var#tpl/str&#125;  | 同1，由开始替换    |\n   | 4 | $&#123;var#tpl/str&#125;  | 同2，由开始替换    |\n\n+ 取变量\n    1. $&#123;!var@&#125; 或者 `$&#123;!var*&#125;` 去所有一var开头的变量名称\n    2. $&#123;!arr[@]&#125; 或者 `$&#123;!arr[*]&#125;` 取所有数组索引\n</code></pre>\n<ol start=\"2\">\n<li>$(cmd) 或者 <code>cmd</code> 命令扩展</li>\n<li>算术扩展<ol>\n<li>$((exp)) </li>\n<li><code>expr exp</code></li>\n<li>$[exp]</li>\n</ol>\n</li>\n</ol>\n<p>##流程控制</p>\n<ol>\n<li>if cmd1&amp;&amp;cmd2 也可当做if用<ol>\n<li>if-then<pre><code> if condition;then\n     cmd\n fi\n</code></pre>\n</li>\n<li>if-then-else<pre><code> if condition;then\n     cmd\n else\n     cmd\n fi\n</code></pre>\n</li>\n<li>if-then-elif-then-else<pre><code> if condition;then\n     cmd\n elif condition;then\n else\n     cmd\n fi\n</code></pre>\n</li>\n</ol>\n</li>\n<li>条件<ol>\n<li>执行命令返回的结果，eg: grep -q ^h2ero$ filename</li>\n<li>[[ ]] eg: [[ str &gt; xyz ]]</li>\n<li>test eg: test “str”&gt;“xyz”</li>\n<li><input disabled=\"\" type=\"checkbox\"> eg:[ “str”&gt;“xyz” ] , [ -f dir/file ]</li>\n</ol>\n</li>\n<li>case 如果shopt -s extglob 则开启高级样式<pre><code> case testitem in\n     j|k|l) cmd;;\n esac\n</code></pre>\n</li>\n<li>for<pre><code> for i in arr\n do\n     cmd\n done\n for ((i=1;i&lt;10;i++))\n do\n     cmd\n done\n</code></pre>\n</li>\n<li>while or until<pre><code> while condition\n do \n     cmd\n done\n 死循环\n while ((1))|true|:\n for(;1;)\n do\n     cmd\n done\n</code></pre>\n</li>\n<li>select <pre><code> select s in arr\n do \n     $REPLY $f\n done\n eg:\n select i in $(ls ../)\n do\n     if [ $REPLY==&#39;q&#39; ];then\n         kill -INT $$\n     fi\n done\n</code></pre>\n##转向<br>###默认文件代码(file descriptor)</li>\n</ol>\n<ul>\n<li>stdin 0 stdout 1 stderr 2</li>\n</ul>\n<p>###文件代码操作</p>\n<ul>\n<li>fileDescriptor&lt;&gt;file 打开文件</li>\n<li>fileDescriptor&lt;&amp;- 关闭文件</li>\n<li>fileDescriptor&gt;&amp;- 关闭转向输出文件</li>\n<li>n&lt;&amp;m 复制转向输入的文件代码m存为n,使n连接到m</li>\n<li>n&gt;&amp;m 复制转向输出的文件代码m存为n,使n连接到m</li>\n<li><code>&gt;|</code> 忽略noclobber直接覆盖</li>\n<li>eg:exec 6 &lt; file ;cat &lt;&amp;6</li>\n</ul>\n<p>##系统信号</p>\n<ul>\n<li><code>kill -l/trap -l</code>显示使用系统信号</li>\n<li>kill <ul>\n<li><code>kill -信号id/名 PID</code> 或者 <code>kill -s 信号 PID</code></li>\n<li><code>kill -HUP PID</code> 重启进程，若是daemon就重新读取系统配置。</li>\n<li><kbd>CTRL</kbd>+<kbd>C</kbd> 发出INT信号。</li>\n</ul>\n</li>\n<li>trap<ul>\n<li><code>trap &quot;echo &#39;kill this ?&#39;&quot; INT</code>  注册INT信号</li>\n<li><code>trap - INT</code>  取消注册INT信号</li>\n<li><code>trap &#39;&#39; INT</code> 忽略INT信号</li>\n<li><code>trap -p</code> 显示全部注册信号</li>\n</ul>\n</li>\n</ul>\n<p>##进程</p>\n<ul>\n<li>进程字段|USER|PID|%CUP|%MEN|VSZ|RSS|TTY|STAT|START|TIME|COMMAND|</li>\n<li>进程NI(nice) 值，NI值越大，优先度越小。<ul>\n<li><code>nice -n num runapp</code></li>\n<li><code>renice num -p PID -g GROUP -u USER</code> 为指定进程/群组/用户调整NI值</li>\n</ul>\n</li>\n</ul>\n<p>###工作控制</p>\n<ul>\n<li><kbd>Ctrl</kbd>+<kbd>Z</kbd>暂停执行程序，bg后台执行。</li>\n<li>jobs -l 查看执行程序,%% 或者 %+调用当前程序，%- 调用前一个。%n调用编号为n的程序等同fg %n,后台执行%n&amp;或者bg %n</li>\n</ul>\n<p>##用户管理</p>\n<ul>\n<li>建立帐号<pre><code>  adduser h2ero\n  useradd -D 显示创建用户时候的默认配置，/etc/default/useradd\n  deluser/userdle username ~目录保存 \n</code></pre>\n</li>\n</ul>\n<p>##其他</p>\n<ol>\n<li>添加字符集<pre><code> cat /usr/share/i18n/SUPPORTED\n vim /var/lib/locales/supported.d/local\n dpkg-reconfigure --force locales\n</code></pre>\n</li>\n<li>目录转换<pre><code> export LANG=en_US\n xdg-user-dirs-gtk-update\n export LANG=zh_CN\n</code></pre>\n</li>\n</ol>\n"},{"layout":"post","title":"VIM","date":"2012-09-03T16:00:00.000Z","_content":"#VIM#\n\n##编辑\n\n###常用\nC 改变改行后面部分相当于c$\nci\" ci' ci( ci< 同vi'\n== 修复行缩进\nC-A 递增数字\n\n###补全\n整行补全                        CTRL-X CTRL-L\n根据当前文件里关键字补全        CTRL-X CTRL-N\n根据字典补全                    CTRL-X CTRL-K\n根据同义词字典补全              CTRL-X CTRL-T\n根据头文件内关键字补全          CTRL-X CTRL-I\n根据标签补全                    CTRL-X CTRL-]\n补全文件名                      CTRL-X CTRL-F\n补全宏定义                      CTRL-X CTRL-D\n补全vim命令                     CTRL-X CTRL-V\n用户自定义补全方式              CTRL-X CTRL-U\n拼写建议                        CTRL-X CTRL-S \n\n##搜索\n* 搜索当前光标位置下的单词\n\n##移动\n'. 跳转到上一次编辑的行\ng; 跳转到最后一次修改的位置\n\n##Vim Visual Mode\nvi{ 选中{}中间的内容,不包括{}\nva{ 选中{}中间内容，包括{}\nvi( 选中()中间内容\nvi< 选中<>中间内容\nvi[ 选中[]中间内容\nvit 选中中间的内容\nvi” 选中”\"中间内容\nvi’ 选中”中间的内容\nvis 选中一个句子\nvib 选中一个block\nviw选中一个单词\nvip 选中一个段落 \n\n\n##其他\n* vim file +cmd 打开文件执行命令 vim file +123\n* v% 选中括号内容\n* g8 显示utf8编码\n* :set rtp 显示runtimepath\n* :set ft=html 设置filetype\n* ZZ :wq ZQ :q!\n[Google][1]\n[1]: http://location/    \"name\"\n","source":"_posts/wiki/2012-09-04-vim-wiki.md","raw":"---\nlayout: post\ntitle: VIM\ntags: vim\ndate: 2012-09-04\ncategories:  wiki\n---\n#VIM#\n\n##编辑\n\n###常用\nC 改变改行后面部分相当于c$\nci\" ci' ci( ci< 同vi'\n== 修复行缩进\nC-A 递增数字\n\n###补全\n整行补全                        CTRL-X CTRL-L\n根据当前文件里关键字补全        CTRL-X CTRL-N\n根据字典补全                    CTRL-X CTRL-K\n根据同义词字典补全              CTRL-X CTRL-T\n根据头文件内关键字补全          CTRL-X CTRL-I\n根据标签补全                    CTRL-X CTRL-]\n补全文件名                      CTRL-X CTRL-F\n补全宏定义                      CTRL-X CTRL-D\n补全vim命令                     CTRL-X CTRL-V\n用户自定义补全方式              CTRL-X CTRL-U\n拼写建议                        CTRL-X CTRL-S \n\n##搜索\n* 搜索当前光标位置下的单词\n\n##移动\n'. 跳转到上一次编辑的行\ng; 跳转到最后一次修改的位置\n\n##Vim Visual Mode\nvi{ 选中{}中间的内容,不包括{}\nva{ 选中{}中间内容，包括{}\nvi( 选中()中间内容\nvi< 选中<>中间内容\nvi[ 选中[]中间内容\nvit 选中中间的内容\nvi” 选中”\"中间内容\nvi’ 选中”中间的内容\nvis 选中一个句子\nvib 选中一个block\nviw选中一个单词\nvip 选中一个段落 \n\n\n##其他\n* vim file +cmd 打开文件执行命令 vim file +123\n* v% 选中括号内容\n* g8 显示utf8编码\n* :set rtp 显示runtimepath\n* :set ft=html 设置filetype\n* ZZ :wq ZQ :q!\n[Google][1]\n[1]: http://location/    \"name\"\n","slug":"wiki/2012-09-04-vim-wiki","published":1,"updated":"2021-03-08T07:20:36.093Z","_id":"ckm08nri6000vgcu11sax65y7","comments":1,"photos":[],"link":"","content":"<p>#VIM#</p>\n<p>##编辑</p>\n<p>###常用<br>C 改变改行后面部分相当于c$<br>ci” ci’ ci( ci&lt; 同vi’<br>== 修复行缩进<br>C-A 递增数字</p>\n<p>###补全<br>整行补全                        CTRL-X CTRL-L<br>根据当前文件里关键字补全        CTRL-X CTRL-N<br>根据字典补全                    CTRL-X CTRL-K<br>根据同义词字典补全              CTRL-X CTRL-T<br>根据头文件内关键字补全          CTRL-X CTRL-I<br>根据标签补全                    CTRL-X CTRL-]<br>补全文件名                      CTRL-X CTRL-F<br>补全宏定义                      CTRL-X CTRL-D<br>补全vim命令                     CTRL-X CTRL-V<br>用户自定义补全方式              CTRL-X CTRL-U<br>拼写建议                        CTRL-X CTRL-S </p>\n<p>##搜索</p>\n<ul>\n<li>搜索当前光标位置下的单词</li>\n</ul>\n<p>##移动<br>‘. 跳转到上一次编辑的行<br>g; 跳转到最后一次修改的位置</p>\n<p>##Vim Visual Mode<br>vi{ 选中{}中间的内容,不包括{}<br>va{ 选中{}中间内容，包括{}<br>vi( 选中()中间内容<br>vi&lt; 选中&lt;&gt;中间内容<br>vi[ 选中[]中间内容<br>vit 选中中间的内容<br>vi” 选中””中间内容<br>vi’ 选中”中间的内容<br>vis 选中一个句子<br>vib 选中一个block<br>viw选中一个单词<br>vip 选中一个段落 </p>\n<p>##其他</p>\n<ul>\n<li>vim file +cmd 打开文件执行命令 vim file +123</li>\n<li>v% 选中括号内容</li>\n<li>g8 显示utf8编码</li>\n<li>:set rtp 显示runtimepath</li>\n<li>:set ft=html 设置filetype</li>\n<li>ZZ :wq ZQ :q!<br><a href=\"http://location/\" title=\"name\">Google</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>#VIM#</p>\n<p>##编辑</p>\n<p>###常用<br>C 改变改行后面部分相当于c$<br>ci” ci’ ci( ci&lt; 同vi’<br>== 修复行缩进<br>C-A 递增数字</p>\n<p>###补全<br>整行补全                        CTRL-X CTRL-L<br>根据当前文件里关键字补全        CTRL-X CTRL-N<br>根据字典补全                    CTRL-X CTRL-K<br>根据同义词字典补全              CTRL-X CTRL-T<br>根据头文件内关键字补全          CTRL-X CTRL-I<br>根据标签补全                    CTRL-X CTRL-]<br>补全文件名                      CTRL-X CTRL-F<br>补全宏定义                      CTRL-X CTRL-D<br>补全vim命令                     CTRL-X CTRL-V<br>用户自定义补全方式              CTRL-X CTRL-U<br>拼写建议                        CTRL-X CTRL-S </p>\n<p>##搜索</p>\n<ul>\n<li>搜索当前光标位置下的单词</li>\n</ul>\n<p>##移动<br>‘. 跳转到上一次编辑的行<br>g; 跳转到最后一次修改的位置</p>\n<p>##Vim Visual Mode<br>vi{ 选中{}中间的内容,不包括{}<br>va{ 选中{}中间内容，包括{}<br>vi( 选中()中间内容<br>vi&lt; 选中&lt;&gt;中间内容<br>vi[ 选中[]中间内容<br>vit 选中中间的内容<br>vi” 选中””中间内容<br>vi’ 选中”中间的内容<br>vis 选中一个句子<br>vib 选中一个block<br>viw选中一个单词<br>vip 选中一个段落 </p>\n<p>##其他</p>\n<ul>\n<li>vim file +cmd 打开文件执行命令 vim file +123</li>\n<li>v% 选中括号内容</li>\n<li>g8 显示utf8编码</li>\n<li>:set rtp 显示runtimepath</li>\n<li>:set ft=html 设置filetype</li>\n<li>ZZ :wq ZQ :q!<br><a href=\"http://location/\" title=\"name\">Google</a></li>\n</ul>\n"},{"layout":"post","title":"Git","date":"2012-09-21T16:00:00.000Z","_content":"\n###Git ignore\n1. .gitignore生效\n```\ngit rm -r --cached .\ngit add .\ngit commit -m \".gitignore work\"\n```\n\n###Git log\ngit log --oneline 和git log --pretty=oneline 前者commit id 为部分\n\n###Git 统计代码贡献\n```\ngit log --shortstat --author \"Aviv Ben-Yosef\" --since \"2 weeks ago\" --until \"1 week ago\" \n    | grep \"files changed\" \n    | awk '{files+=$1; inserted+=$4; deleted+=$6} END \n           {print \"files changed\", files, \"lines inserted:\", inserted, \"lines deleted:\", deleted}'\n```\n###Git tip\n1. reset --hard HEAD^后想恢复之前的提交，可以git reflog 找到提交的id然后用git cherry-pick对该ID的提交进行回访。\n2. 更改提交者信息`git filter-branch -f --env-filter \"GIT_AUTHOR_NAME='Newname'; GIT_AUTHOR_EMAIL='newemail'; GIT_COMMITTER_NAME='Newname'; GIT_COMMITTER_EMAIL='newemail';\" HEAD`\n\n[git contribution][0]\n[git get contributor][1]\n\n[0]:http://stackoverflow.com/questions/4592866/git-how-to-estimate-a-contribution-of-a-person-to-my-project-in-terms-of-added   \"contribution\"\n\n[1]:http://codeimpossible.com/2011/12/16/Stupid-Git-Trick-getting-contributor-stats/   \"git get contributor\"\n\n\n","source":"_posts/wiki/2012-09-22-Git-wiki.md","raw":"---\nlayout: post\ntitle: Git\ntags: git \ndate: 2012-09-22\ncategories: wiki\n---\n\n###Git ignore\n1. .gitignore生效\n```\ngit rm -r --cached .\ngit add .\ngit commit -m \".gitignore work\"\n```\n\n###Git log\ngit log --oneline 和git log --pretty=oneline 前者commit id 为部分\n\n###Git 统计代码贡献\n```\ngit log --shortstat --author \"Aviv Ben-Yosef\" --since \"2 weeks ago\" --until \"1 week ago\" \n    | grep \"files changed\" \n    | awk '{files+=$1; inserted+=$4; deleted+=$6} END \n           {print \"files changed\", files, \"lines inserted:\", inserted, \"lines deleted:\", deleted}'\n```\n###Git tip\n1. reset --hard HEAD^后想恢复之前的提交，可以git reflog 找到提交的id然后用git cherry-pick对该ID的提交进行回访。\n2. 更改提交者信息`git filter-branch -f --env-filter \"GIT_AUTHOR_NAME='Newname'; GIT_AUTHOR_EMAIL='newemail'; GIT_COMMITTER_NAME='Newname'; GIT_COMMITTER_EMAIL='newemail';\" HEAD`\n\n[git contribution][0]\n[git get contributor][1]\n\n[0]:http://stackoverflow.com/questions/4592866/git-how-to-estimate-a-contribution-of-a-person-to-my-project-in-terms-of-added   \"contribution\"\n\n[1]:http://codeimpossible.com/2011/12/16/Stupid-Git-Trick-getting-contributor-stats/   \"git get contributor\"\n\n\n","slug":"wiki/2012-09-22-Git-wiki","published":1,"updated":"2021-03-08T07:20:35.334Z","_id":"ckm08nria0013gcu1e5xab73s","comments":1,"photos":[],"link":"","content":"<p>###Git ignore</p>\n<ol>\n<li>.gitignore生效<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r --cached .</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;.gitignore work&quot;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>###Git log<br>git log –oneline 和git log –pretty=oneline 前者commit id 为部分</p>\n<p>###Git 统计代码贡献</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --shortstat --author &quot;Aviv Ben-Yosef&quot; --since &quot;2 weeks ago&quot; --until &quot;1 week ago&quot; </span><br><span class=\"line\">    | grep &quot;files changed&quot; </span><br><span class=\"line\">    | awk &#39;&#123;files+&#x3D;$1; inserted+&#x3D;$4; deleted+&#x3D;$6&#125; END </span><br><span class=\"line\">           &#123;print &quot;files changed&quot;, files, &quot;lines inserted:&quot;, inserted, &quot;lines deleted:&quot;, deleted&#125;&#39;</span><br></pre></td></tr></table></figure>\n<p>###Git tip</p>\n<ol>\n<li>reset –hard HEAD^后想恢复之前的提交，可以git reflog 找到提交的id然后用git cherry-pick对该ID的提交进行回访。</li>\n<li>更改提交者信息<code>git filter-branch -f --env-filter &quot;GIT_AUTHOR_NAME=&#39;Newname&#39;; GIT_AUTHOR_EMAIL=&#39;newemail&#39;; GIT_COMMITTER_NAME=&#39;Newname&#39;; GIT_COMMITTER_EMAIL=&#39;newemail&#39;;&quot; HEAD</code></li>\n</ol>\n<p><a href=\"http://stackoverflow.com/questions/4592866/git-how-to-estimate-a-contribution-of-a-person-to-my-project-in-terms-of-added\" title=\"contribution\">git contribution</a><br><a href=\"http://codeimpossible.com/2011/12/16/Stupid-Git-Trick-getting-contributor-stats/\" title=\"git get contributor\">git get contributor</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>###Git ignore</p>\n<ol>\n<li>.gitignore生效<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r --cached .</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;.gitignore work&quot;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>###Git log<br>git log –oneline 和git log –pretty=oneline 前者commit id 为部分</p>\n<p>###Git 统计代码贡献</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --shortstat --author &quot;Aviv Ben-Yosef&quot; --since &quot;2 weeks ago&quot; --until &quot;1 week ago&quot; </span><br><span class=\"line\">    | grep &quot;files changed&quot; </span><br><span class=\"line\">    | awk &#39;&#123;files+&#x3D;$1; inserted+&#x3D;$4; deleted+&#x3D;$6&#125; END </span><br><span class=\"line\">           &#123;print &quot;files changed&quot;, files, &quot;lines inserted:&quot;, inserted, &quot;lines deleted:&quot;, deleted&#125;&#39;</span><br></pre></td></tr></table></figure>\n<p>###Git tip</p>\n<ol>\n<li>reset –hard HEAD^后想恢复之前的提交，可以git reflog 找到提交的id然后用git cherry-pick对该ID的提交进行回访。</li>\n<li>更改提交者信息<code>git filter-branch -f --env-filter &quot;GIT_AUTHOR_NAME=&#39;Newname&#39;; GIT_AUTHOR_EMAIL=&#39;newemail&#39;; GIT_COMMITTER_NAME=&#39;Newname&#39;; GIT_COMMITTER_EMAIL=&#39;newemail&#39;;&quot; HEAD</code></li>\n</ol>\n<p><a href=\"http://stackoverflow.com/questions/4592866/git-how-to-estimate-a-contribution-of-a-person-to-my-project-in-terms-of-added\" title=\"contribution\">git contribution</a><br><a href=\"http://codeimpossible.com/2011/12/16/Stupid-Git-Trick-getting-contributor-stats/\" title=\"git get contributor\">git get contributor</a></p>\n"},{"layout":"post","title":"MySQL","date":"2012-11-17T16:00:00.000Z","_content":"\n1. `set @now=(DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s'));`\n2. `INSERT INTO test VALUES ('',uid, @now) ON DUPLICATE KEY  update date_added=@now;` 当出现uid相同的列时候执行后面的语句。\n3. `set @i=0;select (@i:=@i+1)   as   i  from games limit 20；`选择1-20\n4. join\n   1. 笛卡尔积(交叉连接),join,cross join\n   \n   \t\t\tSELECT * FROM table1 CROSS JOIN table2\n\t\t\tSELECT * FROM table1 JOIN table2\n\t\t\tSELECT * FROM table1,table2\n   2. 内连接INNER JOIN\n   3. 外连接LEFT [OUTER] JOIN,RIGHT [OUTER] JOIN\n   4. `USING select * from t1 join t1 on t1.id=t2.id `可以改为` select * from t1 join USING(id)`\n5. `having select *,sum(cash) s_cash from transaction group by uid having s_cash > 20000`\n6. `create table t1 select * from t2,insert into t1 select * t2`;\n7. `SELECT * from name where field REGEXP '.*h2ero|h2ero.*'`;\n8. `select last_insert_id()`\n9. 快速导入数据\n\n\t\tmysql>show variables like 'max_allowed_packet';\n\t\tmysql>show variables like 'net_buffer_length';\n\t\t$>mysqldump -uroot -p  matchmove_reports -e --max_allowed_packet=1048576 --net_buffer_length=2048 > ~/Downloads/matchmove_reports.sql\n10. 两张表不同列导出同一日期数据\n\t\t\n\t\t# User,Download\n\t\tselect date,sum(Download) Download,sum(SignUp) SignUp from ( select  *  from (SELECT DATE(date_added) date, COUNT(id) 'SignUp',0 'Download' FROM users GROUP BY date) s union (SELECT DATE(date_added) date, 0 'SignUp',COUNT(id) 'Download' FROM `tracks` GROUP BY date) ) r group by date;\n11.  新建用户\n\n        //创建用户\n        mysql> insert into mysql.user(Host,User,Password) values('localhost','phplamp',password('1234'));\n        //刷新系统权限表\n        mysql>flush privileges;\n        mysql>exit;\n11. 授权\n\n        grant select, insert, update, delete on weimei2.* to h2ero@localhost;\n\n","source":"_posts/wiki/2012-11-18-mysql-wiki.md","raw":"---\nlayout: post\ntitle: MySQL\ntags: mysql\ndate: 2012-11-18\ncategories: mysql \n---\n\n1. `set @now=(DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s'));`\n2. `INSERT INTO test VALUES ('',uid, @now) ON DUPLICATE KEY  update date_added=@now;` 当出现uid相同的列时候执行后面的语句。\n3. `set @i=0;select (@i:=@i+1)   as   i  from games limit 20；`选择1-20\n4. join\n   1. 笛卡尔积(交叉连接),join,cross join\n   \n   \t\t\tSELECT * FROM table1 CROSS JOIN table2\n\t\t\tSELECT * FROM table1 JOIN table2\n\t\t\tSELECT * FROM table1,table2\n   2. 内连接INNER JOIN\n   3. 外连接LEFT [OUTER] JOIN,RIGHT [OUTER] JOIN\n   4. `USING select * from t1 join t1 on t1.id=t2.id `可以改为` select * from t1 join USING(id)`\n5. `having select *,sum(cash) s_cash from transaction group by uid having s_cash > 20000`\n6. `create table t1 select * from t2,insert into t1 select * t2`;\n7. `SELECT * from name where field REGEXP '.*h2ero|h2ero.*'`;\n8. `select last_insert_id()`\n9. 快速导入数据\n\n\t\tmysql>show variables like 'max_allowed_packet';\n\t\tmysql>show variables like 'net_buffer_length';\n\t\t$>mysqldump -uroot -p  matchmove_reports -e --max_allowed_packet=1048576 --net_buffer_length=2048 > ~/Downloads/matchmove_reports.sql\n10. 两张表不同列导出同一日期数据\n\t\t\n\t\t# User,Download\n\t\tselect date,sum(Download) Download,sum(SignUp) SignUp from ( select  *  from (SELECT DATE(date_added) date, COUNT(id) 'SignUp',0 'Download' FROM users GROUP BY date) s union (SELECT DATE(date_added) date, 0 'SignUp',COUNT(id) 'Download' FROM `tracks` GROUP BY date) ) r group by date;\n11.  新建用户\n\n        //创建用户\n        mysql> insert into mysql.user(Host,User,Password) values('localhost','phplamp',password('1234'));\n        //刷新系统权限表\n        mysql>flush privileges;\n        mysql>exit;\n11. 授权\n\n        grant select, insert, update, delete on weimei2.* to h2ero@localhost;\n\n","slug":"wiki/2012-11-18-mysql-wiki","published":1,"updated":"2021-03-08T07:20:36.139Z","_id":"ckm08nric0017gcu14ttb0whl","comments":1,"photos":[],"link":"","content":"<ol>\n<li><p><code>set @now=(DATE_FORMAT(NOW(),&#39;%Y-%m-%d %H:%i:%s&#39;));</code></p>\n</li>\n<li><p><code>INSERT INTO test VALUES (&#39;&#39;,uid, @now) ON DUPLICATE KEY  update date_added=@now;</code> 当出现uid相同的列时候执行后面的语句。</p>\n</li>\n<li><p><code>set @i=0;select (@i:=@i+1)   as   i  from games limit 20；</code>选择1-20</p>\n</li>\n<li><p>join</p>\n<ol>\n<li><p>笛卡尔积(交叉连接),join,cross join</p>\n<pre><code>     SELECT * FROM table1 CROSS JOIN table2\n  SELECT * FROM table1 JOIN table2\n  SELECT * FROM table1,table2\n</code></pre>\n</li>\n<li><p>内连接INNER JOIN</p>\n</li>\n<li><p>外连接LEFT [OUTER] JOIN,RIGHT [OUTER] JOIN</p>\n</li>\n<li><p><code>USING select * from t1 join t1 on t1.id=t2.id </code>可以改为<code> select * from t1 join USING(id)</code></p>\n</li>\n</ol>\n</li>\n<li><p><code>having select *,sum(cash) s_cash from transaction group by uid having s_cash &gt; 20000</code></p>\n</li>\n<li><p><code>create table t1 select * from t2,insert into t1 select * t2</code>;</p>\n</li>\n<li><p><code>SELECT * from name where field REGEXP &#39;.*h2ero|h2ero.*&#39;</code>;</p>\n</li>\n<li><p><code>select last_insert_id()</code></p>\n</li>\n<li><p>快速导入数据</p>\n<pre><code> mysql&gt;show variables like &#39;max_allowed_packet&#39;;\n mysql&gt;show variables like &#39;net_buffer_length&#39;;\n $&gt;mysqldump -uroot -p  matchmove_reports -e --max_allowed_packet=1048576 --net_buffer_length=2048 &gt; ~/Downloads/matchmove_reports.sql\n</code></pre>\n</li>\n<li><p>两张表不同列导出同一日期数据</p>\n<pre><code># User,Download\nselect date,sum(Download) Download,sum(SignUp) SignUp from ( select  *  from (SELECT DATE(date_added) date, COUNT(id) &#39;SignUp&#39;,0 &#39;Download&#39; FROM users GROUP BY date) s union (SELECT DATE(date_added) date, 0 &#39;SignUp&#39;,COUNT(id) &#39;Download&#39; FROM `tracks` GROUP BY date) ) r group by date;\n</code></pre>\n</li>\n<li><p> 新建用户</p>\n<pre><code>//创建用户\nmysql&gt; insert into mysql.user(Host,User,Password) values(&#39;localhost&#39;,&#39;phplamp&#39;,password(&#39;1234&#39;));\n//刷新系统权限表\nmysql&gt;flush privileges;\nmysql&gt;exit;\n</code></pre>\n</li>\n<li><p>授权</p>\n<pre><code>grant select, insert, update, delete on weimei2.* to h2ero@localhost;\n</code></pre>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p><code>set @now=(DATE_FORMAT(NOW(),&#39;%Y-%m-%d %H:%i:%s&#39;));</code></p>\n</li>\n<li><p><code>INSERT INTO test VALUES (&#39;&#39;,uid, @now) ON DUPLICATE KEY  update date_added=@now;</code> 当出现uid相同的列时候执行后面的语句。</p>\n</li>\n<li><p><code>set @i=0;select (@i:=@i+1)   as   i  from games limit 20；</code>选择1-20</p>\n</li>\n<li><p>join</p>\n<ol>\n<li><p>笛卡尔积(交叉连接),join,cross join</p>\n<pre><code>     SELECT * FROM table1 CROSS JOIN table2\n  SELECT * FROM table1 JOIN table2\n  SELECT * FROM table1,table2\n</code></pre>\n</li>\n<li><p>内连接INNER JOIN</p>\n</li>\n<li><p>外连接LEFT [OUTER] JOIN,RIGHT [OUTER] JOIN</p>\n</li>\n<li><p><code>USING select * from t1 join t1 on t1.id=t2.id </code>可以改为<code> select * from t1 join USING(id)</code></p>\n</li>\n</ol>\n</li>\n<li><p><code>having select *,sum(cash) s_cash from transaction group by uid having s_cash &gt; 20000</code></p>\n</li>\n<li><p><code>create table t1 select * from t2,insert into t1 select * t2</code>;</p>\n</li>\n<li><p><code>SELECT * from name where field REGEXP &#39;.*h2ero|h2ero.*&#39;</code>;</p>\n</li>\n<li><p><code>select last_insert_id()</code></p>\n</li>\n<li><p>快速导入数据</p>\n<pre><code> mysql&gt;show variables like &#39;max_allowed_packet&#39;;\n mysql&gt;show variables like &#39;net_buffer_length&#39;;\n $&gt;mysqldump -uroot -p  matchmove_reports -e --max_allowed_packet=1048576 --net_buffer_length=2048 &gt; ~/Downloads/matchmove_reports.sql\n</code></pre>\n</li>\n<li><p>两张表不同列导出同一日期数据</p>\n<pre><code># User,Download\nselect date,sum(Download) Download,sum(SignUp) SignUp from ( select  *  from (SELECT DATE(date_added) date, COUNT(id) &#39;SignUp&#39;,0 &#39;Download&#39; FROM users GROUP BY date) s union (SELECT DATE(date_added) date, 0 &#39;SignUp&#39;,COUNT(id) &#39;Download&#39; FROM `tracks` GROUP BY date) ) r group by date;\n</code></pre>\n</li>\n<li><p> 新建用户</p>\n<pre><code>//创建用户\nmysql&gt; insert into mysql.user(Host,User,Password) values(&#39;localhost&#39;,&#39;phplamp&#39;,password(&#39;1234&#39;));\n//刷新系统权限表\nmysql&gt;flush privileges;\nmysql&gt;exit;\n</code></pre>\n</li>\n<li><p>授权</p>\n<pre><code>grant select, insert, update, delete on weimei2.* to h2ero@localhost;\n</code></pre>\n</li>\n</ol>\n"},{"_content":"time\n---\nlayout: post\ntitle: \ntags: \ncategories: \n---\n\n 保留一模板，以后写东西就在上面了，哈哈～今天又没有白活!\n[Google][1]\n\n[1]: http://location/    \"name\"\n","source":"_posts/wiki/tpl.md","raw":"time\n---\nlayout: post\ntitle: \ntags: \ncategories: \n---\n\n 保留一模板，以后写东西就在上面了，哈哈～今天又没有白活!\n[Google][1]\n\n[1]: http://location/    \"name\"\n","slug":"wiki/tpl","published":1,"date":"2021-03-08T07:08:51.674Z","updated":"2021-03-08T07:08:51.674Z","_id":"ckm08nric0018gcu118sq31hy","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h2><p>layout: post<br>title:<br>tags:<br>categories: </p>\n<hr>\n<p> 保留一模板，以后写东西就在上面了，哈哈～今天又没有白活!<br><a href=\"http://location/\" title=\"name\">Google</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h2><p>layout: post<br>title:<br>tags:<br>categories: </p>\n<hr>\n<p> 保留一模板，以后写东西就在上面了，哈哈～今天又没有白活!<br><a href=\"http://location/\" title=\"name\">Google</a></p>\n"},{"layout":"post","title":"IE6 min-height hack 实现","date":"2012-05-05T16:00:00.000Z","_content":"1. css用expression利用js判断设置。\n2. \n```\nselector {\n  min-height:500px;\n  height:auto !important;\n  height:500px;\n}\n```\n来源:[http://www.dustindiaz.com/min-height-fast-hack/](http://www.dustindiaz.com/min-height-fast-hack/)\n","source":"_posts/2012/2012-05-06-ie-min-height-css-hack.md","raw":"---\nlayout: post\ntitle: IE6 min-height hack 实现\ntags: css \ndate: 2012-05-06\ncategories: web\n---\n1. css用expression利用js判断设置。\n2. \n```\nselector {\n  min-height:500px;\n  height:auto !important;\n  height:500px;\n}\n```\n来源:[http://www.dustindiaz.com/min-height-fast-hack/](http://www.dustindiaz.com/min-height-fast-hack/)\n","slug":"2012/2012-05-06-ie-min-height-css-hack","published":1,"updated":"2021-03-08T07:20:35.388Z","_id":"ckm08nrii001dgcu1ce5852ew","comments":1,"photos":[],"link":"","content":"<ol>\n<li>css用expression利用js判断设置。</li>\n<li><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector &#123;</span><br><span class=\"line\">  min-height:500px;</span><br><span class=\"line\">  height:auto !important;</span><br><span class=\"line\">  height:500px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n来源:<a href=\"http://www.dustindiaz.com/min-height-fast-hack/\">http://www.dustindiaz.com/min-height-fast-hack/</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>css用expression利用js判断设置。</li>\n<li><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector &#123;</span><br><span class=\"line\">  min-height:500px;</span><br><span class=\"line\">  height:auto !important;</span><br><span class=\"line\">  height:500px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n来源:<a href=\"http://www.dustindiaz.com/min-height-fast-hack/\">http://www.dustindiaz.com/min-height-fast-hack/</a></li>\n</ol>\n"},{"layout":"post","title":"2012年","date":"2013-01-23T16:00:00.000Z","_content":"\n##2012\n\n### 碎碎念\n\n2012过去快一个月了，说好的总结现在才开始写。2012在学校里面呆了一学期，基本上都是乖乖的去上课，因为不想挂科。上课的时候也差不多是在看借的和买的书，还没有考试就闲不下来出去找工作去了。然后请假考试，因为学校都是要停一个月的课。剩下的7个月都在外边，第一份工作每天回学校第二份在外边租了房子，不过大多数都是一个人呆着。这一年学了很多东西，各种折腾，最近一次折腾下Openwrt折腾了一天没有折腾好，感觉没有以前那种激情了。可能时间不够了。我想这句话比较适合现在的自己吧，`too young too simple sometime naive`。\n\n###做好的\n\n1. 学分修完了。\n2. 搬出学校一个人生活了，当然基本上都是吃自己弄的了。\n3. linux,php,vim,git常用的开发工具软件语言都能用上手了，不枉那些年为戒游戏和QQ装的ubuntu单系统，年尾看正则现在vim里面正则用着那叫一个爽，还看了看vimL，然后看的那本shell的书也给自己带来了很多的东西。\n4. 看了一些书，在学校每周也有去图书馆借新书，学的东西有点点泛。\n5. 认识了很多朋友给自己带来了不少的激情，也让自己很多想法改变了很多。看着同事们都活的蛮开心觉得自己也会有个不错的未来。\n6. PHP单独说下，在MatchMove也算见识到PHP比较NB的用法了，主要是Kohana里面的一些东西，还有譬如namespace等。MatchMove什么都是用的自己熟悉的总之还是蛮享受这四个月的工作时间，不过因为自己太浮躁静不下心来最终决定离开。挺对不住fancy和KJ的。\n\n###挚爱\n\n生命这是那样，自己要珍惜自己才可以让其他人不担心自己。身边的人都生病，外婆病了一年，年纪太大了。老爸老妈也病了，不过都好了。有的时候就觉的时间太短了，要做的事情太多。晃眼一看身边的人都老了，朋友们都各忙各的，没有谁还有那么多的时间了。\n\n##2013\n\n###计划\n\n1. 锻炼好身体\n2. 消灭完买的书\n3. 多混社区\n4. 待心安静下来了再找份安定的工作\n5. 找个能手牵手一起走女朋友\n6. 把FuelPHP的代码给看了\n7. 弄编译原理和算法\n8. 多参加社会活动\n9. 语言继续python打算学学lua\n10. 认真写部落格，坚决不再删微博。\n\n<i class=\"os_date\"> System Version: OS X 10.8 (12A269) Kernel Version: Darwin 12.0.0 2013-01-24 14:49:46 </i>\n\n","source":"_posts/2013/2013-01-24-2012.md","raw":"---\nlayout: post\ntitle: 2012年\ntags: \ndate: 2013-01-24\ncategories:\n---\n\n##2012\n\n### 碎碎念\n\n2012过去快一个月了，说好的总结现在才开始写。2012在学校里面呆了一学期，基本上都是乖乖的去上课，因为不想挂科。上课的时候也差不多是在看借的和买的书，还没有考试就闲不下来出去找工作去了。然后请假考试，因为学校都是要停一个月的课。剩下的7个月都在外边，第一份工作每天回学校第二份在外边租了房子，不过大多数都是一个人呆着。这一年学了很多东西，各种折腾，最近一次折腾下Openwrt折腾了一天没有折腾好，感觉没有以前那种激情了。可能时间不够了。我想这句话比较适合现在的自己吧，`too young too simple sometime naive`。\n\n###做好的\n\n1. 学分修完了。\n2. 搬出学校一个人生活了，当然基本上都是吃自己弄的了。\n3. linux,php,vim,git常用的开发工具软件语言都能用上手了，不枉那些年为戒游戏和QQ装的ubuntu单系统，年尾看正则现在vim里面正则用着那叫一个爽，还看了看vimL，然后看的那本shell的书也给自己带来了很多的东西。\n4. 看了一些书，在学校每周也有去图书馆借新书，学的东西有点点泛。\n5. 认识了很多朋友给自己带来了不少的激情，也让自己很多想法改变了很多。看着同事们都活的蛮开心觉得自己也会有个不错的未来。\n6. PHP单独说下，在MatchMove也算见识到PHP比较NB的用法了，主要是Kohana里面的一些东西，还有譬如namespace等。MatchMove什么都是用的自己熟悉的总之还是蛮享受这四个月的工作时间，不过因为自己太浮躁静不下心来最终决定离开。挺对不住fancy和KJ的。\n\n###挚爱\n\n生命这是那样，自己要珍惜自己才可以让其他人不担心自己。身边的人都生病，外婆病了一年，年纪太大了。老爸老妈也病了，不过都好了。有的时候就觉的时间太短了，要做的事情太多。晃眼一看身边的人都老了，朋友们都各忙各的，没有谁还有那么多的时间了。\n\n##2013\n\n###计划\n\n1. 锻炼好身体\n2. 消灭完买的书\n3. 多混社区\n4. 待心安静下来了再找份安定的工作\n5. 找个能手牵手一起走女朋友\n6. 把FuelPHP的代码给看了\n7. 弄编译原理和算法\n8. 多参加社会活动\n9. 语言继续python打算学学lua\n10. 认真写部落格，坚决不再删微博。\n\n<i class=\"os_date\"> System Version: OS X 10.8 (12A269) Kernel Version: Darwin 12.0.0 2013-01-24 14:49:46 </i>\n\n","slug":"2013/2013-01-24-2012","published":1,"updated":"2021-03-08T07:28:19.147Z","_id":"ckm08nrij001egcu1d72mgeah","comments":1,"photos":[],"link":"","content":"<p>##2012</p>\n<h3 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h3><p>2012过去快一个月了，说好的总结现在才开始写。2012在学校里面呆了一学期，基本上都是乖乖的去上课，因为不想挂科。上课的时候也差不多是在看借的和买的书，还没有考试就闲不下来出去找工作去了。然后请假考试，因为学校都是要停一个月的课。剩下的7个月都在外边，第一份工作每天回学校第二份在外边租了房子，不过大多数都是一个人呆着。这一年学了很多东西，各种折腾，最近一次折腾下Openwrt折腾了一天没有折腾好，感觉没有以前那种激情了。可能时间不够了。我想这句话比较适合现在的自己吧，<code>too young too simple sometime naive</code>。</p>\n<p>###做好的</p>\n<ol>\n<li>学分修完了。</li>\n<li>搬出学校一个人生活了，当然基本上都是吃自己弄的了。</li>\n<li>linux,php,vim,git常用的开发工具软件语言都能用上手了，不枉那些年为戒游戏和QQ装的ubuntu单系统，年尾看正则现在vim里面正则用着那叫一个爽，还看了看vimL，然后看的那本shell的书也给自己带来了很多的东西。</li>\n<li>看了一些书，在学校每周也有去图书馆借新书，学的东西有点点泛。</li>\n<li>认识了很多朋友给自己带来了不少的激情，也让自己很多想法改变了很多。看着同事们都活的蛮开心觉得自己也会有个不错的未来。</li>\n<li>PHP单独说下，在MatchMove也算见识到PHP比较NB的用法了，主要是Kohana里面的一些东西，还有譬如namespace等。MatchMove什么都是用的自己熟悉的总之还是蛮享受这四个月的工作时间，不过因为自己太浮躁静不下心来最终决定离开。挺对不住fancy和KJ的。</li>\n</ol>\n<p>###挚爱</p>\n<p>生命这是那样，自己要珍惜自己才可以让其他人不担心自己。身边的人都生病，外婆病了一年，年纪太大了。老爸老妈也病了，不过都好了。有的时候就觉的时间太短了，要做的事情太多。晃眼一看身边的人都老了，朋友们都各忙各的，没有谁还有那么多的时间了。</p>\n<p>##2013</p>\n<p>###计划</p>\n<ol>\n<li>锻炼好身体</li>\n<li>消灭完买的书</li>\n<li>多混社区</li>\n<li>待心安静下来了再找份安定的工作</li>\n<li>找个能手牵手一起走女朋友</li>\n<li>把FuelPHP的代码给看了</li>\n<li>弄编译原理和算法</li>\n<li>多参加社会活动</li>\n<li>语言继续python打算学学lua</li>\n<li>认真写部落格，坚决不再删微博。</li>\n</ol>\n<p><i class=\"os_date\"> System Version: OS X 10.8 (12A269) Kernel Version: Darwin 12.0.0 2013-01-24 14:49:46 </i></p>\n","site":{"data":{}},"excerpt":"","more":"<p>##2012</p>\n<h3 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h3><p>2012过去快一个月了，说好的总结现在才开始写。2012在学校里面呆了一学期，基本上都是乖乖的去上课，因为不想挂科。上课的时候也差不多是在看借的和买的书，还没有考试就闲不下来出去找工作去了。然后请假考试，因为学校都是要停一个月的课。剩下的7个月都在外边，第一份工作每天回学校第二份在外边租了房子，不过大多数都是一个人呆着。这一年学了很多东西，各种折腾，最近一次折腾下Openwrt折腾了一天没有折腾好，感觉没有以前那种激情了。可能时间不够了。我想这句话比较适合现在的自己吧，<code>too young too simple sometime naive</code>。</p>\n<p>###做好的</p>\n<ol>\n<li>学分修完了。</li>\n<li>搬出学校一个人生活了，当然基本上都是吃自己弄的了。</li>\n<li>linux,php,vim,git常用的开发工具软件语言都能用上手了，不枉那些年为戒游戏和QQ装的ubuntu单系统，年尾看正则现在vim里面正则用着那叫一个爽，还看了看vimL，然后看的那本shell的书也给自己带来了很多的东西。</li>\n<li>看了一些书，在学校每周也有去图书馆借新书，学的东西有点点泛。</li>\n<li>认识了很多朋友给自己带来了不少的激情，也让自己很多想法改变了很多。看着同事们都活的蛮开心觉得自己也会有个不错的未来。</li>\n<li>PHP单独说下，在MatchMove也算见识到PHP比较NB的用法了，主要是Kohana里面的一些东西，还有譬如namespace等。MatchMove什么都是用的自己熟悉的总之还是蛮享受这四个月的工作时间，不过因为自己太浮躁静不下心来最终决定离开。挺对不住fancy和KJ的。</li>\n</ol>\n<p>###挚爱</p>\n<p>生命这是那样，自己要珍惜自己才可以让其他人不担心自己。身边的人都生病，外婆病了一年，年纪太大了。老爸老妈也病了，不过都好了。有的时候就觉的时间太短了，要做的事情太多。晃眼一看身边的人都老了，朋友们都各忙各的，没有谁还有那么多的时间了。</p>\n<p>##2013</p>\n<p>###计划</p>\n<ol>\n<li>锻炼好身体</li>\n<li>消灭完买的书</li>\n<li>多混社区</li>\n<li>待心安静下来了再找份安定的工作</li>\n<li>找个能手牵手一起走女朋友</li>\n<li>把FuelPHP的代码给看了</li>\n<li>弄编译原理和算法</li>\n<li>多参加社会活动</li>\n<li>语言继续python打算学学lua</li>\n<li>认真写部落格，坚决不再删微博。</li>\n</ol>\n<p><i class=\"os_date\"> System Version: OS X 10.8 (12A269) Kernel Version: Darwin 12.0.0 2013-01-24 14:49:46 </i></p>\n"},{"layout":"post","title":"正则表达式《精通正则表达式》笔记","date":"2012-07-05T16:00:00.000Z","_content":"\n###概念###\n\n1. 正则(regex):\n\t+ 元字符+普通字符\n2. 字符组(Character Class):\n\t+ `[abc.?]`     .?等需要转义的字符可以以字符组方式匹配\n    + 字符组都是匹配一个字符 \n\t>`g[.?]` 并不会匹配 g.?\n3. 字符组元字符(Character-class Metacharacter):\n\t+ `[^0-5a-z]`  匹配大小写`[Ss]qr`\n    + 匹配HTML TAG `<H[1-5]>`\n    + ^不包含\n    + `[a|b]`和(a|b)不同,前者|只是一个字符,后者则是\"或\"\n4. 单词分界(Word Boundaries)元字符序列(Metasequences):\n    + `<\\word word\\>`\n    + 匹配单词word开头的和word结尾的\n    + \\b单词分界 \\bcat\\b\n5. 括号及反向引用(Parentheses and Backreferences):\n\t+ (abc)\\1       \\1开始引用 多个括号从左至右\n   \t+ php 使用引用需要转义，即 `preg_match('/(cat)\\\\1/',$str,$res)`\n6. 环视(lookaround):\n    环视和\\b ^ $等一样只是匹配特定的位置。\n    1. 肯定顺序环视(lookahead): \n\t\t+ `(?=h2ero)love you`     从左至右\n    2. 肯定逆序环视:\n    \t+ `(?<=h2ero)lover you`   从右至左\n\t       >分隔123456789为123.456.789,可以是`preg_replace('/(?<=\\d)(?=(\\d\\d\\d)+$)/','.','123456789');`也可以是`preg_replace('/(?=\\d)(?<=(\\d\\d\\d)+$)/','.','123456789');`两个环视的先后顺序不重要。只要在相同位置匹配即可。\n\t3. 否定顺序环视:\n\t\t+ `(?!h2ero)love you`     从左至右\n\t4. 否定逆序环视:\n\t\t+ `(?<!h2ero)lover you`   从右至左\n\n\t\n###拾遗###\n1. `^cat$`       以字符阅读 第一个c开头 第二个a 第三个t结尾 而不是单词cat\n2. `^$`          匹配空行\n3. `\"[^\"]*\"`   匹配`[]`内的字符串\n\n###PHP中的正则###\n1. 单引号转移\\\\表示一个\\所以\\\\\\\\才表示一个\\\n2. 模式修饰符\n\t+ i 忽略大小写\n\t+ m 增强的行锚模式\n\t+ s 点号通配模式\n\t+ x 宽松排列和注释模式\n\t+ u 以UTF-8读取正则表达式和目标字符\n\t+ X 启用PCRE额外功能\n\t+ e 将replacement作为PHP代码\n\t\t> $metric=preg_replace('/(-?\\d+(?:\\.\\d+)?)/e','floor(($1-32)*5/9+0.5)',$subject);\n\t+ S 启用PCRE的study优化尝试\n\t+ U 交换*和*?的匹配优先含义\n\t+ A 将整个匹配尝试锚定在起始位置\n\t+ D $只能匹配锚定在起始位置\n3. preg_match中的RPEG_OFFSET_CAPTURE由于获取每次匹配的偏移量。preg_match_all中的PREG_SET_ORDER每次匹配集中保存。如果要设置多个参数用|连接。\n","source":"_posts/2012/2012-07-06-regx.md","raw":"---\nlayout: post\ntitle: 正则表达式《精通正则表达式》笔记\ntags: \ndate: 2012-07-06\ncategories: note\n---\n\n###概念###\n\n1. 正则(regex):\n\t+ 元字符+普通字符\n2. 字符组(Character Class):\n\t+ `[abc.?]`     .?等需要转义的字符可以以字符组方式匹配\n    + 字符组都是匹配一个字符 \n\t>`g[.?]` 并不会匹配 g.?\n3. 字符组元字符(Character-class Metacharacter):\n\t+ `[^0-5a-z]`  匹配大小写`[Ss]qr`\n    + 匹配HTML TAG `<H[1-5]>`\n    + ^不包含\n    + `[a|b]`和(a|b)不同,前者|只是一个字符,后者则是\"或\"\n4. 单词分界(Word Boundaries)元字符序列(Metasequences):\n    + `<\\word word\\>`\n    + 匹配单词word开头的和word结尾的\n    + \\b单词分界 \\bcat\\b\n5. 括号及反向引用(Parentheses and Backreferences):\n\t+ (abc)\\1       \\1开始引用 多个括号从左至右\n   \t+ php 使用引用需要转义，即 `preg_match('/(cat)\\\\1/',$str,$res)`\n6. 环视(lookaround):\n    环视和\\b ^ $等一样只是匹配特定的位置。\n    1. 肯定顺序环视(lookahead): \n\t\t+ `(?=h2ero)love you`     从左至右\n    2. 肯定逆序环视:\n    \t+ `(?<=h2ero)lover you`   从右至左\n\t       >分隔123456789为123.456.789,可以是`preg_replace('/(?<=\\d)(?=(\\d\\d\\d)+$)/','.','123456789');`也可以是`preg_replace('/(?=\\d)(?<=(\\d\\d\\d)+$)/','.','123456789');`两个环视的先后顺序不重要。只要在相同位置匹配即可。\n\t3. 否定顺序环视:\n\t\t+ `(?!h2ero)love you`     从左至右\n\t4. 否定逆序环视:\n\t\t+ `(?<!h2ero)lover you`   从右至左\n\n\t\n###拾遗###\n1. `^cat$`       以字符阅读 第一个c开头 第二个a 第三个t结尾 而不是单词cat\n2. `^$`          匹配空行\n3. `\"[^\"]*\"`   匹配`[]`内的字符串\n\n###PHP中的正则###\n1. 单引号转移\\\\表示一个\\所以\\\\\\\\才表示一个\\\n2. 模式修饰符\n\t+ i 忽略大小写\n\t+ m 增强的行锚模式\n\t+ s 点号通配模式\n\t+ x 宽松排列和注释模式\n\t+ u 以UTF-8读取正则表达式和目标字符\n\t+ X 启用PCRE额外功能\n\t+ e 将replacement作为PHP代码\n\t\t> $metric=preg_replace('/(-?\\d+(?:\\.\\d+)?)/e','floor(($1-32)*5/9+0.5)',$subject);\n\t+ S 启用PCRE的study优化尝试\n\t+ U 交换*和*?的匹配优先含义\n\t+ A 将整个匹配尝试锚定在起始位置\n\t+ D $只能匹配锚定在起始位置\n3. preg_match中的RPEG_OFFSET_CAPTURE由于获取每次匹配的偏移量。preg_match_all中的PREG_SET_ORDER每次匹配集中保存。如果要设置多个参数用|连接。\n","slug":"2012/2012-07-06-regx","published":1,"updated":"2021-03-08T07:20:35.492Z","_id":"ckm08nrim001igcu11mw69p18","comments":1,"photos":[],"link":"","content":"<p>###概念###</p>\n<ol>\n<li>正则(regex):<ul>\n<li>元字符+普通字符</li>\n</ul>\n</li>\n<li>字符组(Character Class):<ul>\n<li><code>[abc.?]</code>     .?等需要转义的字符可以以字符组方式匹配</li>\n<li>字符组都是匹配一个字符 <blockquote>\n<p><code>g[.?]</code> 并不会匹配 g.?</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>字符组元字符(Character-class Metacharacter):<ul>\n<li><code>[^0-5a-z]</code>  匹配大小写<code>[Ss]qr</code></li>\n<li>匹配HTML TAG <code>&lt;H[1-5]&gt;</code></li>\n<li>^不包含</li>\n<li><code>[a|b]</code>和(a|b)不同,前者|只是一个字符,后者则是”或”</li>\n</ul>\n</li>\n<li>单词分界(Word Boundaries)元字符序列(Metasequences):<ul>\n<li><code>&lt;\\word word\\&gt;</code></li>\n<li>匹配单词word开头的和word结尾的</li>\n<li>\\b单词分界 \\bcat\\b</li>\n</ul>\n</li>\n<li>括号及反向引用(Parentheses and Backreferences):<ul>\n<li>(abc)\\1       \\1开始引用 多个括号从左至右<ul>\n<li>php 使用引用需要转义，即 <code>preg_match(&#39;/(cat)\\\\1/&#39;,$str,$res)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>环视(lookaround):<br> 环视和\\b ^ $等一样只是匹配特定的位置。<ol>\n<li>肯定顺序环视(lookahead): <ul>\n<li><code>(?=h2ero)love you</code>     从左至右</li>\n</ul>\n</li>\n<li>肯定逆序环视:<ul>\n<li><code>(?&lt;=h2ero)lover you</code>   从右至左<blockquote>\n<p>分隔123456789为123.456.789,可以是<code>preg_replace(&#39;/(?&lt;=\\d)(?=(\\d\\d\\d)+$)/&#39;,&#39;.&#39;,&#39;123456789&#39;);</code>也可以是<code>preg_replace(&#39;/(?=\\d)(?&lt;=(\\d\\d\\d)+$)/&#39;,&#39;.&#39;,&#39;123456789&#39;);</code>两个环视的先后顺序不重要。只要在相同位置匹配即可。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>否定顺序环视:<ul>\n<li><code>(?!h2ero)love you</code>     从左至右</li>\n</ul>\n</li>\n<li>否定逆序环视:<ul>\n<li><code>(?&lt;!h2ero)lover you</code>   从右至左</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p>###拾遗###</p>\n<ol>\n<li><code>^cat$</code>       以字符阅读 第一个c开头 第二个a 第三个t结尾 而不是单词cat</li>\n<li><code>^$</code>          匹配空行</li>\n<li><code>&quot;[^&quot;]*&quot;</code>   匹配<code>[]</code>内的字符串</li>\n</ol>\n<p>###PHP中的正则###</p>\n<ol>\n<li>单引号转移\\表示一个\\所以\\\\才表示一个\\</li>\n<li>模式修饰符<ul>\n<li>i 忽略大小写</li>\n<li>m 增强的行锚模式</li>\n<li>s 点号通配模式</li>\n<li>x 宽松排列和注释模式</li>\n<li>u 以UTF-8读取正则表达式和目标字符</li>\n<li>X 启用PCRE额外功能</li>\n<li>e 将replacement作为PHP代码<blockquote>\n<p>$metric=preg_replace(‘/(-?\\d+(?:.\\d+)?)/e’,’floor(($1-32)*5/9+0.5)’,$subject);</p>\n</blockquote>\n</li>\n<li>S 启用PCRE的study优化尝试</li>\n<li>U 交换<em>和</em>?的匹配优先含义</li>\n<li>A 将整个匹配尝试锚定在起始位置</li>\n<li>D $只能匹配锚定在起始位置</li>\n</ul>\n</li>\n<li>preg_match中的RPEG_OFFSET_CAPTURE由于获取每次匹配的偏移量。preg_match_all中的PREG_SET_ORDER每次匹配集中保存。如果要设置多个参数用|连接。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>###概念###</p>\n<ol>\n<li>正则(regex):<ul>\n<li>元字符+普通字符</li>\n</ul>\n</li>\n<li>字符组(Character Class):<ul>\n<li><code>[abc.?]</code>     .?等需要转义的字符可以以字符组方式匹配</li>\n<li>字符组都是匹配一个字符 <blockquote>\n<p><code>g[.?]</code> 并不会匹配 g.?</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>字符组元字符(Character-class Metacharacter):<ul>\n<li><code>[^0-5a-z]</code>  匹配大小写<code>[Ss]qr</code></li>\n<li>匹配HTML TAG <code>&lt;H[1-5]&gt;</code></li>\n<li>^不包含</li>\n<li><code>[a|b]</code>和(a|b)不同,前者|只是一个字符,后者则是”或”</li>\n</ul>\n</li>\n<li>单词分界(Word Boundaries)元字符序列(Metasequences):<ul>\n<li><code>&lt;\\word word\\&gt;</code></li>\n<li>匹配单词word开头的和word结尾的</li>\n<li>\\b单词分界 \\bcat\\b</li>\n</ul>\n</li>\n<li>括号及反向引用(Parentheses and Backreferences):<ul>\n<li>(abc)\\1       \\1开始引用 多个括号从左至右<ul>\n<li>php 使用引用需要转义，即 <code>preg_match(&#39;/(cat)\\\\1/&#39;,$str,$res)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>环视(lookaround):<br> 环视和\\b ^ $等一样只是匹配特定的位置。<ol>\n<li>肯定顺序环视(lookahead): <ul>\n<li><code>(?=h2ero)love you</code>     从左至右</li>\n</ul>\n</li>\n<li>肯定逆序环视:<ul>\n<li><code>(?&lt;=h2ero)lover you</code>   从右至左<blockquote>\n<p>分隔123456789为123.456.789,可以是<code>preg_replace(&#39;/(?&lt;=\\d)(?=(\\d\\d\\d)+$)/&#39;,&#39;.&#39;,&#39;123456789&#39;);</code>也可以是<code>preg_replace(&#39;/(?=\\d)(?&lt;=(\\d\\d\\d)+$)/&#39;,&#39;.&#39;,&#39;123456789&#39;);</code>两个环视的先后顺序不重要。只要在相同位置匹配即可。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>否定顺序环视:<ul>\n<li><code>(?!h2ero)love you</code>     从左至右</li>\n</ul>\n</li>\n<li>否定逆序环视:<ul>\n<li><code>(?&lt;!h2ero)lover you</code>   从右至左</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p>###拾遗###</p>\n<ol>\n<li><code>^cat$</code>       以字符阅读 第一个c开头 第二个a 第三个t结尾 而不是单词cat</li>\n<li><code>^$</code>          匹配空行</li>\n<li><code>&quot;[^&quot;]*&quot;</code>   匹配<code>[]</code>内的字符串</li>\n</ol>\n<p>###PHP中的正则###</p>\n<ol>\n<li>单引号转移\\表示一个\\所以\\\\才表示一个\\</li>\n<li>模式修饰符<ul>\n<li>i 忽略大小写</li>\n<li>m 增强的行锚模式</li>\n<li>s 点号通配模式</li>\n<li>x 宽松排列和注释模式</li>\n<li>u 以UTF-8读取正则表达式和目标字符</li>\n<li>X 启用PCRE额外功能</li>\n<li>e 将replacement作为PHP代码<blockquote>\n<p>$metric=preg_replace(‘/(-?\\d+(?:.\\d+)?)/e’,’floor(($1-32)*5/9+0.5)’,$subject);</p>\n</blockquote>\n</li>\n<li>S 启用PCRE的study优化尝试</li>\n<li>U 交换<em>和</em>?的匹配优先含义</li>\n<li>A 将整个匹配尝试锚定在起始位置</li>\n<li>D $只能匹配锚定在起始位置</li>\n</ul>\n</li>\n<li>preg_match中的RPEG_OFFSET_CAPTURE由于获取每次匹配的偏移量。preg_match_all中的PREG_SET_ORDER每次匹配集中保存。如果要设置多个参数用|连接。</li>\n</ol>\n"},{"layout":"post","title":"拾遗","date":"2012-07-28T16:00:00.000Z","_content":"+ strip_tags除了用于过滤不要的标签也可用于截取html后过滤掉未闭合的tag\n+ javascript html_strip [这样](http://stackoverflow.com/questions/822452/strip-html-from-text-javascript)实现\n    ```\n\t\tfunction strip(html)\n\t\t{\n\t\t   var tmp = document.createElement(\"DIV\");\n\t\t   tmp.innerHTML = html;\n\t\t   return tmp.textContent||tmp.innerText;\n\t\t}\n    ```\n+ 匹配url正则表达式 [在线正则表达式测试工具](http://regexpal.com/)\n    ```\n\t\t(https?|ftp|telnet):\\/\\/((?:[a-z0-9@:.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?\n    ```\n    ```\n\t<?php\n\t\t//带www和http的生成链接\n\t\tfunction text2url($text){\n\t\t\t\t\t$pattern=\"/((?:https?):\\/\\/)?((?:[a-z0-9@:.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?/iS\";\n\t\t\t\t\tpreg_match_all($pattern, $text, $matches);\n\t\t\t\t\tforeach ($matches[0] as $url){\n\t\t\t\t\t\tif($url){\n\t\t\t\t\t\t\t$search[]=$url;\n\t\t\t\t\t\t\t$replace[]='<a target=\"_blank\" href=http://'.str_replace('http://','',$url).'>'.$url.'</a>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn str_replace($search, $replace, $text);\n\t\t\t\t}\n    ```\n","source":"_posts/2012/2012-07-29-php-tip.md","raw":"---\nlayout: post\ntitle: 拾遗\ntags: php javascript\ndate: 2012-07-29\ncategories: php\n---\n+ strip_tags除了用于过滤不要的标签也可用于截取html后过滤掉未闭合的tag\n+ javascript html_strip [这样](http://stackoverflow.com/questions/822452/strip-html-from-text-javascript)实现\n    ```\n\t\tfunction strip(html)\n\t\t{\n\t\t   var tmp = document.createElement(\"DIV\");\n\t\t   tmp.innerHTML = html;\n\t\t   return tmp.textContent||tmp.innerText;\n\t\t}\n    ```\n+ 匹配url正则表达式 [在线正则表达式测试工具](http://regexpal.com/)\n    ```\n\t\t(https?|ftp|telnet):\\/\\/((?:[a-z0-9@:.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?\n    ```\n    ```\n\t<?php\n\t\t//带www和http的生成链接\n\t\tfunction text2url($text){\n\t\t\t\t\t$pattern=\"/((?:https?):\\/\\/)?((?:[a-z0-9@:.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?/iS\";\n\t\t\t\t\tpreg_match_all($pattern, $text, $matches);\n\t\t\t\t\tforeach ($matches[0] as $url){\n\t\t\t\t\t\tif($url){\n\t\t\t\t\t\t\t$search[]=$url;\n\t\t\t\t\t\t\t$replace[]='<a target=\"_blank\" href=http://'.str_replace('http://','',$url).'>'.$url.'</a>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn str_replace($search, $replace, $text);\n\t\t\t\t}\n    ```\n","slug":"2012/2012-07-29-php-tip","published":1,"updated":"2021-03-08T07:20:35.537Z","_id":"ckm08nrin001jgcu15nzyg54u","comments":1,"photos":[],"link":"","content":"<ul>\n<li>strip_tags除了用于过滤不要的标签也可用于截取html后过滤掉未闭合的tag</li>\n<li>javascript html_strip <a href=\"http://stackoverflow.com/questions/822452/strip-html-from-text-javascript\">这样</a>实现  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function strip(html)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   var tmp &#x3D; document.createElement(&quot;DIV&quot;);</span><br><span class=\"line\">   tmp.innerHTML &#x3D; html;</span><br><span class=\"line\">   return tmp.textContent||tmp.innerText;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>匹配url正则表达式 <a href=\"http://regexpal.com/\">在线正则表达式测试工具</a>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(https?|ftp|telnet):\\&#x2F;\\&#x2F;((?:[a-z0-9@:.-]|%[0-9A-F]&#123;2&#125;)&#123;3,&#125;)(?::(\\d+))?((?:\\&#x2F;(?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:@]|%[0-9A-F]&#123;2&#125;)*)*)(?:\\?((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?(?:#((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">\t&#x2F;&#x2F;带www和http的生成链接</span><br><span class=\"line\">\tfunction text2url($text)&#123;</span><br><span class=\"line\">\t\t\t\t$pattern&#x3D;&quot;&#x2F;((?:https?):\\&#x2F;\\&#x2F;)?((?:[a-z0-9@:.-]|%[0-9A-F]&#123;2&#125;)&#123;3,&#125;)(?::(\\d+))?((?:\\&#x2F;(?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:@]|%[0-9A-F]&#123;2&#125;)*)*)(?:\\?((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?(?:#((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?&#x2F;iS&quot;;</span><br><span class=\"line\">\t\t\t\tpreg_match_all($pattern, $text, $matches);</span><br><span class=\"line\">\t\t\t\tforeach ($matches[0] as $url)&#123;</span><br><span class=\"line\">\t\t\t\t\tif($url)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t$search[]&#x3D;$url;</span><br><span class=\"line\">\t\t\t\t\t\t$replace[]&#x3D;&#39;&lt;a target&#x3D;&quot;_blank&quot; href&#x3D;http:&#x2F;&#x2F;&#39;.str_replace(&#39;http:&#x2F;&#x2F;&#39;,&#39;&#39;,$url).&#39;&gt;&#39;.$url.&#39;&lt;&#x2F;a&gt;&#39;;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\treturn str_replace($search, $replace, $text);</span><br><span class=\"line\">\t\t\t&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>strip_tags除了用于过滤不要的标签也可用于截取html后过滤掉未闭合的tag</li>\n<li>javascript html_strip <a href=\"http://stackoverflow.com/questions/822452/strip-html-from-text-javascript\">这样</a>实现  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function strip(html)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   var tmp &#x3D; document.createElement(&quot;DIV&quot;);</span><br><span class=\"line\">   tmp.innerHTML &#x3D; html;</span><br><span class=\"line\">   return tmp.textContent||tmp.innerText;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>匹配url正则表达式 <a href=\"http://regexpal.com/\">在线正则表达式测试工具</a>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(https?|ftp|telnet):\\&#x2F;\\&#x2F;((?:[a-z0-9@:.-]|%[0-9A-F]&#123;2&#125;)&#123;3,&#125;)(?::(\\d+))?((?:\\&#x2F;(?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:@]|%[0-9A-F]&#123;2&#125;)*)*)(?:\\?((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?(?:#((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">\t&#x2F;&#x2F;带www和http的生成链接</span><br><span class=\"line\">\tfunction text2url($text)&#123;</span><br><span class=\"line\">\t\t\t\t$pattern&#x3D;&quot;&#x2F;((?:https?):\\&#x2F;\\&#x2F;)?((?:[a-z0-9@:.-]|%[0-9A-F]&#123;2&#125;)&#123;3,&#125;)(?::(\\d+))?((?:\\&#x2F;(?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:@]|%[0-9A-F]&#123;2&#125;)*)*)(?:\\?((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?(?:#((?:[a-z0-9-._~!$&amp;&#39;()*+,;&#x3D;:\\&#x2F;?@]|%[0-9A-F]&#123;2&#125;)*))?&#x2F;iS&quot;;</span><br><span class=\"line\">\t\t\t\tpreg_match_all($pattern, $text, $matches);</span><br><span class=\"line\">\t\t\t\tforeach ($matches[0] as $url)&#123;</span><br><span class=\"line\">\t\t\t\t\tif($url)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t$search[]&#x3D;$url;</span><br><span class=\"line\">\t\t\t\t\t\t$replace[]&#x3D;&#39;&lt;a target&#x3D;&quot;_blank&quot; href&#x3D;http:&#x2F;&#x2F;&#39;.str_replace(&#39;http:&#x2F;&#x2F;&#39;,&#39;&#39;,$url).&#39;&gt;&#39;.$url.&#39;&lt;&#x2F;a&gt;&#39;;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\treturn str_replace($search, $replace, $text);</span><br><span class=\"line\">\t\t\t&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"layout":"post","title":"web安全","date":"2012-08-01T16:00:00.000Z","_content":"###常用查找###\n\n1. dede查看`/data/mysqli_error_trace.inc` `/data/mysql_error_trace.inc`文件查找关键词index.php,login.php\n2. dede版本`/data/admin/ver.txt`\n\n","source":"_posts/2012/2012-08-02-hack-website.md","raw":"---\nlayout: post\ntitle: web安全\ntags: \ndate: 2012-08-02\ncategories: hack\n---\n###常用查找###\n\n1. dede查看`/data/mysqli_error_trace.inc` `/data/mysql_error_trace.inc`文件查找关键词index.php,login.php\n2. dede版本`/data/admin/ver.txt`\n\n","slug":"2012/2012-08-02-hack-website","published":1,"updated":"2021-03-08T07:20:35.571Z","_id":"ckm08nrio001mgcu195om0q48","comments":1,"photos":[],"link":"","content":"<p>###常用查找###</p>\n<ol>\n<li>dede查看<code>/data/mysqli_error_trace.inc</code> <code>/data/mysql_error_trace.inc</code>文件查找关键词index.php,login.php</li>\n<li>dede版本<code>/data/admin/ver.txt</code></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>###常用查找###</p>\n<ol>\n<li>dede查看<code>/data/mysqli_error_trace.inc</code> <code>/data/mysql_error_trace.inc</code>文件查找关键词index.php,login.php</li>\n<li>dede版本<code>/data/admin/ver.txt</code></li>\n</ol>\n"},{"layout":"post","title":"Mac下配置Postfix使用SMTP","date":"2012-11-24T16:00:00.000Z","_content":"\n上一次弄过，然后这一次再弄又给忘了，苦逼周末还在弄公司的东西。最近书也没有怎么看，自己的代码也没有怎么敲，现在在的这家公司感觉东西也学的差不多了。\n公司用的发送Email用[Swift mailer][2]，Mac下SMTP需要用到[Postfix][3]这个软件，Mac自带。\n###配置\n`sudo vi /System/Library/LaunchDaemons/org.postfix.master.plist`\n在`</dict>`加入`<key>RunAtLoad</key> <true/> <key>KeepAlive</key> <true/>`\n###启用\n```\n$ sudo launchctl\nlaunchd% start org.postfix.master\n#测试运行没有\ntelnet localhost 25\n#停止\nlaunchd% stop org.postfix.master\n```\n参考：\n\n1. [Sending emails with PHP using Swiftmailer and SMTP on Mac OSX][0]\n2. [How to Enable Local SMTP (Postfix) on OS-X Leopard][1]\n[0]:http://marvelley.com/2011/02/02/sending-emails-with-php-using-swiftmailer-and-smtp-on-mac-osx/  \n[1]:http://www.freshblurbs.com/blog/2009/05/10/how-enable-local-smtp-postfix-os-x-leopard.html\n[2]: http://swiftmailer.org/\n[3]: http://www.postfix.org/\n","source":"_posts/2012/2012-11-25-Mac-SMTP-Postfix-enable.md","raw":"---\nlayout: post\ntitle: Mac下配置Postfix使用SMTP\ntags: Postfix Mac SMTP\ndate: 2012-11-25\ncategories: mac\n---\n\n上一次弄过，然后这一次再弄又给忘了，苦逼周末还在弄公司的东西。最近书也没有怎么看，自己的代码也没有怎么敲，现在在的这家公司感觉东西也学的差不多了。\n公司用的发送Email用[Swift mailer][2]，Mac下SMTP需要用到[Postfix][3]这个软件，Mac自带。\n###配置\n`sudo vi /System/Library/LaunchDaemons/org.postfix.master.plist`\n在`</dict>`加入`<key>RunAtLoad</key> <true/> <key>KeepAlive</key> <true/>`\n###启用\n```\n$ sudo launchctl\nlaunchd% start org.postfix.master\n#测试运行没有\ntelnet localhost 25\n#停止\nlaunchd% stop org.postfix.master\n```\n参考：\n\n1. [Sending emails with PHP using Swiftmailer and SMTP on Mac OSX][0]\n2. [How to Enable Local SMTP (Postfix) on OS-X Leopard][1]\n[0]:http://marvelley.com/2011/02/02/sending-emails-with-php-using-swiftmailer-and-smtp-on-mac-osx/  \n[1]:http://www.freshblurbs.com/blog/2009/05/10/how-enable-local-smtp-postfix-os-x-leopard.html\n[2]: http://swiftmailer.org/\n[3]: http://www.postfix.org/\n","slug":"2012/2012-11-25-Mac-SMTP-Postfix-enable","published":1,"updated":"2021-03-08T07:20:35.689Z","_id":"ckm08nrir001ngcu1crny2quv","comments":1,"photos":[],"link":"","content":"<p>上一次弄过，然后这一次再弄又给忘了，苦逼周末还在弄公司的东西。最近书也没有怎么看，自己的代码也没有怎么敲，现在在的这家公司感觉东西也学的差不多了。<br>公司用的发送Email用<a href=\"http://swiftmailer.org/\">Swift mailer</a>，Mac下SMTP需要用到<a href=\"http://www.postfix.org/\">Postfix</a>这个软件，Mac自带。<br>###配置<br><code>sudo vi /System/Library/LaunchDaemons/org.postfix.master.plist</code><br>在<code>&lt;/dict&gt;</code>加入<code>&lt;key&gt;RunAtLoad&lt;/key&gt; &lt;true/&gt; &lt;key&gt;KeepAlive&lt;/key&gt; &lt;true/&gt;</code><br>###启用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo launchctl</span><br><span class=\"line\">launchd% start org.postfix.master</span><br><span class=\"line\">#测试运行没有</span><br><span class=\"line\">telnet localhost 25</span><br><span class=\"line\">#停止</span><br><span class=\"line\">launchd% stop org.postfix.master</span><br></pre></td></tr></table></figure>\n<p>参考：</p>\n<ol>\n<li><a href=\"http://marvelley.com/2011/02/02/sending-emails-with-php-using-swiftmailer-and-smtp-on-mac-osx/\">Sending emails with PHP using Swiftmailer and SMTP on Mac OSX</a></li>\n<li><a href=\"http://www.freshblurbs.com/blog/2009/05/10/how-enable-local-smtp-postfix-os-x-leopard.html\">How to Enable Local SMTP (Postfix) on OS-X Leopard</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>上一次弄过，然后这一次再弄又给忘了，苦逼周末还在弄公司的东西。最近书也没有怎么看，自己的代码也没有怎么敲，现在在的这家公司感觉东西也学的差不多了。<br>公司用的发送Email用<a href=\"http://swiftmailer.org/\">Swift mailer</a>，Mac下SMTP需要用到<a href=\"http://www.postfix.org/\">Postfix</a>这个软件，Mac自带。<br>###配置<br><code>sudo vi /System/Library/LaunchDaemons/org.postfix.master.plist</code><br>在<code>&lt;/dict&gt;</code>加入<code>&lt;key&gt;RunAtLoad&lt;/key&gt; &lt;true/&gt; &lt;key&gt;KeepAlive&lt;/key&gt; &lt;true/&gt;</code><br>###启用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo launchctl</span><br><span class=\"line\">launchd% start org.postfix.master</span><br><span class=\"line\">#测试运行没有</span><br><span class=\"line\">telnet localhost 25</span><br><span class=\"line\">#停止</span><br><span class=\"line\">launchd% stop org.postfix.master</span><br></pre></td></tr></table></figure>\n<p>参考：</p>\n<ol>\n<li><a href=\"http://marvelley.com/2011/02/02/sending-emails-with-php-using-swiftmailer-and-smtp-on-mac-osx/\">Sending emails with PHP using Swiftmailer and SMTP on Mac OSX</a></li>\n<li><a href=\"http://www.freshblurbs.com/blog/2009/05/10/how-enable-local-smtp-postfix-os-x-leopard.html\">How to Enable Local SMTP (Postfix) on OS-X Leopard</a></li>\n</ol>\n"},{"layout":"post","title":"linux vsftpd添加用户","date":"2012-08-26T16:00:00.000Z","_content":"先修改`/etc/vsftpd.conf`去掉一下行注释。`#local_enable=YES`和`#write_enable=YES`。然后执行一下命令。\n\n```\nsudo useradd h2ero -d /home/\nsudo passwd h2ero\nsudo service vsftpd restart\n```\n参考:[How to setup vsftpd FTP on Ubuntu Linux](http://cviorel.easyblog.ro/2009/03/05/how-to-setup-vsftpd-ftp-on-ubuntu-linux/)\n","source":"_posts/2012/2012-08-27-ubuntu-vsftp-add-user.md","raw":"---\nlayout: post\ntitle: linux vsftpd添加用户\ntags: vsftpd ubuntu ftp\ndate: 2012-08-27\ncategories: linux\n---\n先修改`/etc/vsftpd.conf`去掉一下行注释。`#local_enable=YES`和`#write_enable=YES`。然后执行一下命令。\n\n```\nsudo useradd h2ero -d /home/\nsudo passwd h2ero\nsudo service vsftpd restart\n```\n参考:[How to setup vsftpd FTP on Ubuntu Linux](http://cviorel.easyblog.ro/2009/03/05/how-to-setup-vsftpd-ftp-on-ubuntu-linux/)\n","slug":"2012/2012-08-27-ubuntu-vsftp-add-user","published":1,"updated":"2021-03-08T07:20:35.613Z","_id":"ckm08nris001ogcu16arha9ky","comments":1,"photos":[],"link":"","content":"<p>先修改<code>/etc/vsftpd.conf</code>去掉一下行注释。<code>#local_enable=YES</code>和<code>#write_enable=YES</code>。然后执行一下命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo useradd h2ero -d &#x2F;home&#x2F;</span><br><span class=\"line\">sudo passwd h2ero</span><br><span class=\"line\">sudo service vsftpd restart</span><br></pre></td></tr></table></figure>\n<p>参考:<a href=\"http://cviorel.easyblog.ro/2009/03/05/how-to-setup-vsftpd-ftp-on-ubuntu-linux/\">How to setup vsftpd FTP on Ubuntu Linux</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>先修改<code>/etc/vsftpd.conf</code>去掉一下行注释。<code>#local_enable=YES</code>和<code>#write_enable=YES</code>。然后执行一下命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo useradd h2ero -d &#x2F;home&#x2F;</span><br><span class=\"line\">sudo passwd h2ero</span><br><span class=\"line\">sudo service vsftpd restart</span><br></pre></td></tr></table></figure>\n<p>参考:<a href=\"http://cviorel.easyblog.ro/2009/03/05/how-to-setup-vsftpd-ftp-on-ubuntu-linux/\">How to setup vsftpd FTP on Ubuntu Linux</a></p>\n"},{"layout":"post","title":"fuelphp 备忘","date":"2012-11-24T16:00:00.000Z","_content":"来不起了，不过还是记一下。不然就忘了。FuelPHP主要和Kohana,CodeIgniter相关。很多东西都类似。支持HMVC,[Cascading Filesystem][0],namespace。这些也许就是选他的原因了，如果什么时候kohana支持namespace了一定还是用kohana。不过暂时还不支持，fuelphp看起来还不错，不过很多都不完善，比如Cascading File System就是个悲剧。也有可能是自己没有搞懂，最近都在折腾Kohana和Fuelphp，Kohana中如果有用到module是可以直接通过路由访问的。而且不用设置路由，基于CFS直接冲module里面找。省很多东西，配置文件来说Kohana是merge，而Fuelphp是rewrite，所以有要多弄很多东西。不过各有各的好处。\n\n1. module直接访问，如果一个Module继承自另外一个Module，相同的Controller/action下，kohana不用再设置,不过带来的坏处就是不需要是的时候需要通过设置url router去屏蔽，其实这样是不可控制的。而Fuelphp需要设置Url router去控制，其实对于一站点或者一module来说就那么点点Controller这样可控制性更强。\n2. Controller_Template，kohana和fuelphp都可以设置$template，不过对于继承的kohana可以通过CFS找到，Fuelphp只能设置的时候添加'NS::template/default'来找到，总是觉得[Cascading Filesystem][0]在Fuelphp里面没有体现出来。悲剧，不过实现起来还是比较简单，修改下源码即可实现。\n3. Config合并和覆盖看个人喜欢，比较不喜欢kohana的合并。\n4. Fuelphp的namespace。\n\n\n[0]:http://kohanaframework.org/3.3/guide/kohana/files   \"Cascading Filesystem\"\n","source":"_posts/2012/2012-11-25-fuelphp-multisit.md","raw":"---\nlayout: post\ntitle: fuelphp 备忘\ntags: fuelphp php framework\ndate: 2012-11-25\ncategories: php\n---\n来不起了，不过还是记一下。不然就忘了。FuelPHP主要和Kohana,CodeIgniter相关。很多东西都类似。支持HMVC,[Cascading Filesystem][0],namespace。这些也许就是选他的原因了，如果什么时候kohana支持namespace了一定还是用kohana。不过暂时还不支持，fuelphp看起来还不错，不过很多都不完善，比如Cascading File System就是个悲剧。也有可能是自己没有搞懂，最近都在折腾Kohana和Fuelphp，Kohana中如果有用到module是可以直接通过路由访问的。而且不用设置路由，基于CFS直接冲module里面找。省很多东西，配置文件来说Kohana是merge，而Fuelphp是rewrite，所以有要多弄很多东西。不过各有各的好处。\n\n1. module直接访问，如果一个Module继承自另外一个Module，相同的Controller/action下，kohana不用再设置,不过带来的坏处就是不需要是的时候需要通过设置url router去屏蔽，其实这样是不可控制的。而Fuelphp需要设置Url router去控制，其实对于一站点或者一module来说就那么点点Controller这样可控制性更强。\n2. Controller_Template，kohana和fuelphp都可以设置$template，不过对于继承的kohana可以通过CFS找到，Fuelphp只能设置的时候添加'NS::template/default'来找到，总是觉得[Cascading Filesystem][0]在Fuelphp里面没有体现出来。悲剧，不过实现起来还是比较简单，修改下源码即可实现。\n3. Config合并和覆盖看个人喜欢，比较不喜欢kohana的合并。\n4. Fuelphp的namespace。\n\n\n[0]:http://kohanaframework.org/3.3/guide/kohana/files   \"Cascading Filesystem\"\n","slug":"2012/2012-11-25-fuelphp-multisit","published":1,"updated":"2021-03-08T07:20:35.649Z","_id":"ckm08nrit001tgcu16eco79q2","comments":1,"photos":[],"link":"","content":"<p>来不起了，不过还是记一下。不然就忘了。FuelPHP主要和Kohana,CodeIgniter相关。很多东西都类似。支持HMVC,<a href=\"http://kohanaframework.org/3.3/guide/kohana/files\" title=\"Cascading Filesystem\">Cascading Filesystem</a>,namespace。这些也许就是选他的原因了，如果什么时候kohana支持namespace了一定还是用kohana。不过暂时还不支持，fuelphp看起来还不错，不过很多都不完善，比如Cascading File System就是个悲剧。也有可能是自己没有搞懂，最近都在折腾Kohana和Fuelphp，Kohana中如果有用到module是可以直接通过路由访问的。而且不用设置路由，基于CFS直接冲module里面找。省很多东西，配置文件来说Kohana是merge，而Fuelphp是rewrite，所以有要多弄很多东西。不过各有各的好处。</p>\n<ol>\n<li>module直接访问，如果一个Module继承自另外一个Module，相同的Controller/action下，kohana不用再设置,不过带来的坏处就是不需要是的时候需要通过设置url router去屏蔽，其实这样是不可控制的。而Fuelphp需要设置Url router去控制，其实对于一站点或者一module来说就那么点点Controller这样可控制性更强。</li>\n<li>Controller_Template，kohana和fuelphp都可以设置$template，不过对于继承的kohana可以通过CFS找到，Fuelphp只能设置的时候添加’NS::template/default’来找到，总是觉得<a href=\"http://kohanaframework.org/3.3/guide/kohana/files\" title=\"Cascading Filesystem\">Cascading Filesystem</a>在Fuelphp里面没有体现出来。悲剧，不过实现起来还是比较简单，修改下源码即可实现。</li>\n<li>Config合并和覆盖看个人喜欢，比较不喜欢kohana的合并。</li>\n<li>Fuelphp的namespace。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>来不起了，不过还是记一下。不然就忘了。FuelPHP主要和Kohana,CodeIgniter相关。很多东西都类似。支持HMVC,<a href=\"http://kohanaframework.org/3.3/guide/kohana/files\" title=\"Cascading Filesystem\">Cascading Filesystem</a>,namespace。这些也许就是选他的原因了，如果什么时候kohana支持namespace了一定还是用kohana。不过暂时还不支持，fuelphp看起来还不错，不过很多都不完善，比如Cascading File System就是个悲剧。也有可能是自己没有搞懂，最近都在折腾Kohana和Fuelphp，Kohana中如果有用到module是可以直接通过路由访问的。而且不用设置路由，基于CFS直接冲module里面找。省很多东西，配置文件来说Kohana是merge，而Fuelphp是rewrite，所以有要多弄很多东西。不过各有各的好处。</p>\n<ol>\n<li>module直接访问，如果一个Module继承自另外一个Module，相同的Controller/action下，kohana不用再设置,不过带来的坏处就是不需要是的时候需要通过设置url router去屏蔽，其实这样是不可控制的。而Fuelphp需要设置Url router去控制，其实对于一站点或者一module来说就那么点点Controller这样可控制性更强。</li>\n<li>Controller_Template，kohana和fuelphp都可以设置$template，不过对于继承的kohana可以通过CFS找到，Fuelphp只能设置的时候添加’NS::template/default’来找到，总是觉得<a href=\"http://kohanaframework.org/3.3/guide/kohana/files\" title=\"Cascading Filesystem\">Cascading Filesystem</a>在Fuelphp里面没有体现出来。悲剧，不过实现起来还是比较简单，修改下源码即可实现。</li>\n<li>Config合并和覆盖看个人喜欢，比较不喜欢kohana的合并。</li>\n<li>Fuelphp的namespace。</li>\n</ol>\n"},{"layout":"post","title":"netbeans","date":"2012-11-28T16:00:00.000Z","_content":"###jvi\n1. 安装jvi后不能通过右键菜单行号不能显示，:set nu解决\n2. :w 需要回车两次，Menu>Tools>Options>jVi>Platform notice 去掉\":\" command completion auto popup. 这项，这个时候没有自动补全需要按<kbd>Ctrl</kbd>+<kbd>space</kbd>,或者<kbd>Ctrl</kbd>+<kbd>D</kbd>\n3. zc zo 折叠打开函数。zM zR 全部\n###QuickOpener\n###show-path-in-title\n","source":"_posts/2012/2012-11-29-jvi-netbeans.md","raw":"---\nlayout: post\ntitle: netbeans\ntags: netbens jVi plugin \ndate: 2012-11-29\ncategories: plugin\n---\n###jvi\n1. 安装jvi后不能通过右键菜单行号不能显示，:set nu解决\n2. :w 需要回车两次，Menu>Tools>Options>jVi>Platform notice 去掉\":\" command completion auto popup. 这项，这个时候没有自动补全需要按<kbd>Ctrl</kbd>+<kbd>space</kbd>,或者<kbd>Ctrl</kbd>+<kbd>D</kbd>\n3. zc zo 折叠打开函数。zM zR 全部\n###QuickOpener\n###show-path-in-title\n","slug":"2012/2012-11-29-jvi-netbeans","published":1,"updated":"2021-03-08T07:20:35.716Z","_id":"ckm08nriu001ugcu14nna10qt","comments":1,"photos":[],"link":"","content":"<p>###jvi</p>\n<ol>\n<li>安装jvi后不能通过右键菜单行号不能显示，:set nu解决</li>\n<li>:w 需要回车两次，Menu&gt;Tools&gt;Options&gt;jVi&gt;Platform notice 去掉”:” command completion auto popup. 这项，这个时候没有自动补全需要按<kbd>Ctrl</kbd>+<kbd>space</kbd>,或者<kbd>Ctrl</kbd>+<kbd>D</kbd></li>\n<li>zc zo 折叠打开函数。zM zR 全部<br>###QuickOpener<br>###show-path-in-title</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>###jvi</p>\n<ol>\n<li>安装jvi后不能通过右键菜单行号不能显示，:set nu解决</li>\n<li>:w 需要回车两次，Menu&gt;Tools&gt;Options&gt;jVi&gt;Platform notice 去掉”:” command completion auto popup. 这项，这个时候没有自动补全需要按<kbd>Ctrl</kbd>+<kbd>space</kbd>,或者<kbd>Ctrl</kbd>+<kbd>D</kbd></li>\n<li>zc zo 折叠打开函数。zM zR 全部<br>###QuickOpener<br>###show-path-in-title</li>\n</ol>\n"},{"layout":"post","title":"为Youtube播放事件添加Google Analytics统计","date":"2012-12-17T16:00:00.000Z","_content":"Google Analytics太过于强大，才发现国内的什么CNZZ,51la,百度统计等都弱爆。单单是 [Dimensions & Metrics][0]就可以满足对网站各种不同的数据分析。以前都不明白为什么很多外国的官方网站都放Youtube的视频，原来Youtube提供的API也非常强大。可惜这些好产品在国内都不能用。不过做个英文站这些都会用到。\n要统计Youtube的播放及其他事件需要参照[IFrame embeds using the IFrame Player API][1]\n\n```\n//先在页面添加div#player\nvar tag = document.createElement('script');\ntag.src = \"http://www.youtube.com/player_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\nvar player;\nfunction onYouTubePlayerAPIReady() {\n    player = new YT.Player('player', {\n        height: '390',\n        width: '640',\n        videoId: 'zLQFkztsozw',\n        events: {\n            'onReady': onPlayerReady,\n            'onStateChange': onPlayerStateChange\n        }\n    });\n}\nfunction onPlayerStateChange(event) {\n    if(event.data == YT.PlayerState.PLAYING) {\n        _gaq.push(['_trackEvent', 'Videos', 'Play', player.getVideoUrl()]);\n    }\n    if(event.data == YT.PlayerState.ENDED) {\n        _gaq.push(['_trackEvent', 'Videos', 'Watch to End', player.getVideoUrl()]);\n    }\n}\ntag.onload = onYouTubePlayerAPIReady();\n```\n\n然后就可以在Google Analytics里面看到。\n\n|  Event Category |  Event Action   |  total event |  unique event |\n| --------------- | --------------- | ------------ | ------------- |\n|  Videos         |  Play           |  90          |  85           |\n|  Videos         |  Watched to End |  30          |  30           |\n\n[0]:https://developers.google.com/analytics/devguides/reporting/core/dimsmets\n[1]:https://developers.google.com/youtube/player_parameters#IFrame_Player_API\n\n","source":"_posts/2012/2012-12-18-YouTube_Google_Analytics.md","raw":"---\nlayout: post\ntitle: 为Youtube播放事件添加Google Analytics统计\ntags: Youtube GoogleAnalytics\ndate: 2012-12-18\ncategories: wiki\n---\nGoogle Analytics太过于强大，才发现国内的什么CNZZ,51la,百度统计等都弱爆。单单是 [Dimensions & Metrics][0]就可以满足对网站各种不同的数据分析。以前都不明白为什么很多外国的官方网站都放Youtube的视频，原来Youtube提供的API也非常强大。可惜这些好产品在国内都不能用。不过做个英文站这些都会用到。\n要统计Youtube的播放及其他事件需要参照[IFrame embeds using the IFrame Player API][1]\n\n```\n//先在页面添加div#player\nvar tag = document.createElement('script');\ntag.src = \"http://www.youtube.com/player_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\nvar player;\nfunction onYouTubePlayerAPIReady() {\n    player = new YT.Player('player', {\n        height: '390',\n        width: '640',\n        videoId: 'zLQFkztsozw',\n        events: {\n            'onReady': onPlayerReady,\n            'onStateChange': onPlayerStateChange\n        }\n    });\n}\nfunction onPlayerStateChange(event) {\n    if(event.data == YT.PlayerState.PLAYING) {\n        _gaq.push(['_trackEvent', 'Videos', 'Play', player.getVideoUrl()]);\n    }\n    if(event.data == YT.PlayerState.ENDED) {\n        _gaq.push(['_trackEvent', 'Videos', 'Watch to End', player.getVideoUrl()]);\n    }\n}\ntag.onload = onYouTubePlayerAPIReady();\n```\n\n然后就可以在Google Analytics里面看到。\n\n|  Event Category |  Event Action   |  total event |  unique event |\n| --------------- | --------------- | ------------ | ------------- |\n|  Videos         |  Play           |  90          |  85           |\n|  Videos         |  Watched to End |  30          |  30           |\n\n[0]:https://developers.google.com/analytics/devguides/reporting/core/dimsmets\n[1]:https://developers.google.com/youtube/player_parameters#IFrame_Player_API\n\n","slug":"2012/2012-12-18-YouTube_Google_Analytics","published":1,"updated":"2021-03-08T07:25:14.997Z","_id":"ckm08nriw001ygcu13lr65ysi","comments":1,"photos":[],"link":"","content":"<p>Google Analytics太过于强大，才发现国内的什么CNZZ,51la,百度统计等都弱爆。单单是 <a href=\"https://developers.google.com/analytics/devguides/reporting/core/dimsmets\">Dimensions &amp; Metrics</a>就可以满足对网站各种不同的数据分析。以前都不明白为什么很多外国的官方网站都放Youtube的视频，原来Youtube提供的API也非常强大。可惜这些好产品在国内都不能用。不过做个英文站这些都会用到。<br>要统计Youtube的播放及其他事件需要参照<a href=\"https://developers.google.com/youtube/player_parameters#IFrame_Player_API\">IFrame embeds using the IFrame Player API</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;先在页面添加div#player</span><br><span class=\"line\">var tag &#x3D; document.createElement(&#39;script&#39;);</span><br><span class=\"line\">tag.src &#x3D; &quot;http:&#x2F;&#x2F;www.youtube.com&#x2F;player_api&quot;;</span><br><span class=\"line\">var firstScriptTag &#x3D; document.getElementsByTagName(&#39;script&#39;)[0];</span><br><span class=\"line\">firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);</span><br><span class=\"line\"></span><br><span class=\"line\">var player;</span><br><span class=\"line\">function onYouTubePlayerAPIReady() &#123;</span><br><span class=\"line\">    player &#x3D; new YT.Player(&#39;player&#39;, &#123;</span><br><span class=\"line\">        height: &#39;390&#39;,</span><br><span class=\"line\">        width: &#39;640&#39;,</span><br><span class=\"line\">        videoId: &#39;zLQFkztsozw&#39;,</span><br><span class=\"line\">        events: &#123;</span><br><span class=\"line\">            &#39;onReady&#39;: onPlayerReady,</span><br><span class=\"line\">            &#39;onStateChange&#39;: onPlayerStateChange</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function onPlayerStateChange(event) &#123;</span><br><span class=\"line\">    if(event.data &#x3D;&#x3D; YT.PlayerState.PLAYING) &#123;</span><br><span class=\"line\">        _gaq.push([&#39;_trackEvent&#39;, &#39;Videos&#39;, &#39;Play&#39;, player.getVideoUrl()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if(event.data &#x3D;&#x3D; YT.PlayerState.ENDED) &#123;</span><br><span class=\"line\">        _gaq.push([&#39;_trackEvent&#39;, &#39;Videos&#39;, &#39;Watch to End&#39;, player.getVideoUrl()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">tag.onload &#x3D; onYouTubePlayerAPIReady();</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以在Google Analytics里面看到。</p>\n<table>\n<thead>\n<tr>\n<th>Event Category</th>\n<th>Event Action</th>\n<th>total event</th>\n<th>unique event</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Videos</td>\n<td>Play</td>\n<td>90</td>\n<td>85</td>\n</tr>\n<tr>\n<td>Videos</td>\n<td>Watched to End</td>\n<td>30</td>\n<td>30</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<p>Google Analytics太过于强大，才发现国内的什么CNZZ,51la,百度统计等都弱爆。单单是 <a href=\"https://developers.google.com/analytics/devguides/reporting/core/dimsmets\">Dimensions &amp; Metrics</a>就可以满足对网站各种不同的数据分析。以前都不明白为什么很多外国的官方网站都放Youtube的视频，原来Youtube提供的API也非常强大。可惜这些好产品在国内都不能用。不过做个英文站这些都会用到。<br>要统计Youtube的播放及其他事件需要参照<a href=\"https://developers.google.com/youtube/player_parameters#IFrame_Player_API\">IFrame embeds using the IFrame Player API</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;先在页面添加div#player</span><br><span class=\"line\">var tag &#x3D; document.createElement(&#39;script&#39;);</span><br><span class=\"line\">tag.src &#x3D; &quot;http:&#x2F;&#x2F;www.youtube.com&#x2F;player_api&quot;;</span><br><span class=\"line\">var firstScriptTag &#x3D; document.getElementsByTagName(&#39;script&#39;)[0];</span><br><span class=\"line\">firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);</span><br><span class=\"line\"></span><br><span class=\"line\">var player;</span><br><span class=\"line\">function onYouTubePlayerAPIReady() &#123;</span><br><span class=\"line\">    player &#x3D; new YT.Player(&#39;player&#39;, &#123;</span><br><span class=\"line\">        height: &#39;390&#39;,</span><br><span class=\"line\">        width: &#39;640&#39;,</span><br><span class=\"line\">        videoId: &#39;zLQFkztsozw&#39;,</span><br><span class=\"line\">        events: &#123;</span><br><span class=\"line\">            &#39;onReady&#39;: onPlayerReady,</span><br><span class=\"line\">            &#39;onStateChange&#39;: onPlayerStateChange</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function onPlayerStateChange(event) &#123;</span><br><span class=\"line\">    if(event.data &#x3D;&#x3D; YT.PlayerState.PLAYING) &#123;</span><br><span class=\"line\">        _gaq.push([&#39;_trackEvent&#39;, &#39;Videos&#39;, &#39;Play&#39;, player.getVideoUrl()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if(event.data &#x3D;&#x3D; YT.PlayerState.ENDED) &#123;</span><br><span class=\"line\">        _gaq.push([&#39;_trackEvent&#39;, &#39;Videos&#39;, &#39;Watch to End&#39;, player.getVideoUrl()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">tag.onload &#x3D; onYouTubePlayerAPIReady();</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以在Google Analytics里面看到。</p>\n<table>\n<thead>\n<tr>\n<th>Event Category</th>\n<th>Event Action</th>\n<th>total event</th>\n<th>unique event</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Videos</td>\n<td>Play</td>\n<td>90</td>\n<td>85</td>\n</tr>\n<tr>\n<td>Videos</td>\n<td>Watched to End</td>\n<td>30</td>\n<td>30</td>\n</tr>\n</tbody></table>\n"},{"layout":"post","title":"各搜索引擎header信息","date":"2012-12-08T16:00:00.000Z","_content":"整理了一下日志里面的爬虫信息。\n\n* baidu image: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; baidu Transcoder;)\"`\n* soso: `\"Mozilla/5.0(compatible; Sosospider/2.0; +http://help.soso.com/webspider.htm)\"`\n* baidu: `\"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\" `\n* esou: `\"Mozilla/5.0 (compatible; EasouSpider; +http://www.easou.com/spider.html)\"`\n* jike: `\"Mozilla/5.0 (compatible; JikeSpider; +http://shoulu.jike.com/spider.html)\"`\n* procog: `\"Mozilla/5.0 (compatible; ProCogBot/1.0; +http://www.procog.com/spider.html)\"`\n* openindex: `\"Mozilla/5.0 (compatible; OpenindexSpider; +http://www.openindex.io/en/webmasters/spider.html)\"`\n* google: `\"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\"`\n* 360: `\"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.0.11) Gecko/20070312 Firefox/1.5.0.11; 360Spider\"`\n* bing: ` \"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)\"`\n","source":"_posts/2012/2012-12-09-spider.md","raw":"---\nlayout: post\ntitle: 各搜索引擎header信息\ntags: search\ndate: 2012-12-09\ncategories: wiki\n---\n整理了一下日志里面的爬虫信息。\n\n* baidu image: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; baidu Transcoder;)\"`\n* soso: `\"Mozilla/5.0(compatible; Sosospider/2.0; +http://help.soso.com/webspider.htm)\"`\n* baidu: `\"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\" `\n* esou: `\"Mozilla/5.0 (compatible; EasouSpider; +http://www.easou.com/spider.html)\"`\n* jike: `\"Mozilla/5.0 (compatible; JikeSpider; +http://shoulu.jike.com/spider.html)\"`\n* procog: `\"Mozilla/5.0 (compatible; ProCogBot/1.0; +http://www.procog.com/spider.html)\"`\n* openindex: `\"Mozilla/5.0 (compatible; OpenindexSpider; +http://www.openindex.io/en/webmasters/spider.html)\"`\n* google: `\"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\"`\n* 360: `\"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.0.11) Gecko/20070312 Firefox/1.5.0.11; 360Spider\"`\n* bing: ` \"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)\"`\n","slug":"2012/2012-12-09-spider","published":1,"updated":"2021-03-08T07:20:35.749Z","_id":"ckm08nriy0021gcu108whdh5w","comments":1,"photos":[],"link":"","content":"<p>整理了一下日志里面的爬虫信息。</p>\n<ul>\n<li>baidu image: <code>&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; baidu Transcoder;)&quot;</code></li>\n<li>soso: <code>&quot;Mozilla/5.0(compatible; Sosospider/2.0; +http://help.soso.com/webspider.htm)&quot;</code></li>\n<li>baidu: <code>&quot;Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)&quot; </code></li>\n<li>esou: <code>&quot;Mozilla/5.0 (compatible; EasouSpider; +http://www.easou.com/spider.html)&quot;</code></li>\n<li>jike: <code>&quot;Mozilla/5.0 (compatible; JikeSpider; +http://shoulu.jike.com/spider.html)&quot;</code></li>\n<li>procog: <code>&quot;Mozilla/5.0 (compatible; ProCogBot/1.0; +http://www.procog.com/spider.html)&quot;</code></li>\n<li>openindex: <code>&quot;Mozilla/5.0 (compatible; OpenindexSpider; +http://www.openindex.io/en/webmasters/spider.html)&quot;</code></li>\n<li>google: <code>&quot;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&quot;</code></li>\n<li>360: <code>&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.0.11) Gecko/20070312 Firefox/1.5.0.11; 360Spider&quot;</code></li>\n<li>bing: <code> &quot;Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)&quot;</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>整理了一下日志里面的爬虫信息。</p>\n<ul>\n<li>baidu image: <code>&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; baidu Transcoder;)&quot;</code></li>\n<li>soso: <code>&quot;Mozilla/5.0(compatible; Sosospider/2.0; +http://help.soso.com/webspider.htm)&quot;</code></li>\n<li>baidu: <code>&quot;Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)&quot; </code></li>\n<li>esou: <code>&quot;Mozilla/5.0 (compatible; EasouSpider; +http://www.easou.com/spider.html)&quot;</code></li>\n<li>jike: <code>&quot;Mozilla/5.0 (compatible; JikeSpider; +http://shoulu.jike.com/spider.html)&quot;</code></li>\n<li>procog: <code>&quot;Mozilla/5.0 (compatible; ProCogBot/1.0; +http://www.procog.com/spider.html)&quot;</code></li>\n<li>openindex: <code>&quot;Mozilla/5.0 (compatible; OpenindexSpider; +http://www.openindex.io/en/webmasters/spider.html)&quot;</code></li>\n<li>google: <code>&quot;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&quot;</code></li>\n<li>360: <code>&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.0.11) Gecko/20070312 Firefox/1.5.0.11; 360Spider&quot;</code></li>\n<li>bing: <code> &quot;Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)&quot;</code></li>\n</ul>\n"},{"layout":"post","title":"换种写部落格的方式啦。","date":"2012-07-05T16:00:00.000Z","_content":"\n\n换下写部落格的方式，前段时间看了看markdown的语法。而换这种方式一切又要归咎于学习Git开始。也算这学期的收获吧。一来以前就开始用github开始记自己的一些笔记，二来用不惯wordpress主要还是在排版上，而markdown确实很舒服，对于我这种天生就不会排版的人太适用了。以前给某某发的E-mail那叫一个乱字。github全免费，以后多做笔记了。折腾这个主题比较烦暂时不考虑兼容其他浏览器了，毕竟firefox才是最爱。（最后还是换做Luke的主题去了。）\n\n","source":"_posts/2012/2012-07-06-h2ero-new-blog-new-life.md","raw":"---\nlayout: post\ntitle: 换种写部落格的方式啦。\ntags: \ndate: 2012-07-06\ncategories: self\n---\n\n\n换下写部落格的方式，前段时间看了看markdown的语法。而换这种方式一切又要归咎于学习Git开始。也算这学期的收获吧。一来以前就开始用github开始记自己的一些笔记，二来用不惯wordpress主要还是在排版上，而markdown确实很舒服，对于我这种天生就不会排版的人太适用了。以前给某某发的E-mail那叫一个乱字。github全免费，以后多做笔记了。折腾这个主题比较烦暂时不考虑兼容其他浏览器了，毕竟firefox才是最爱。（最后还是换做Luke的主题去了。）\n\n","slug":"2012/2012-07-06-h2ero-new-blog-new-life","published":1,"updated":"2021-03-08T07:20:35.439Z","_id":"ckm08nriz0025gcu1by6gabpf","comments":1,"photos":[],"link":"","content":"<p>换下写部落格的方式，前段时间看了看markdown的语法。而换这种方式一切又要归咎于学习Git开始。也算这学期的收获吧。一来以前就开始用github开始记自己的一些笔记，二来用不惯wordpress主要还是在排版上，而markdown确实很舒服，对于我这种天生就不会排版的人太适用了。以前给某某发的E-mail那叫一个乱字。github全免费，以后多做笔记了。折腾这个主题比较烦暂时不考虑兼容其他浏览器了，毕竟firefox才是最爱。（最后还是换做Luke的主题去了。）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>换下写部落格的方式，前段时间看了看markdown的语法。而换这种方式一切又要归咎于学习Git开始。也算这学期的收获吧。一来以前就开始用github开始记自己的一些笔记，二来用不惯wordpress主要还是在排版上，而markdown确实很舒服，对于我这种天生就不会排版的人太适用了。以前给某某发的E-mail那叫一个乱字。github全免费，以后多做笔记了。折腾这个主题比较烦暂时不考虑兼容其他浏览器了，毕竟firefox才是最爱。（最后还是换做Luke的主题去了。）</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckm08nrdo0000gcu1gksfdsmp","category_id":"ckm08nrdu0002gcu1bxn71lw2","_id":"ckm08nre0000bgcu19to4fo8m"},{"post_id":"ckm08nrds0001gcu18mx29uqa","category_id":"ckm08nrdu0002gcu1bxn71lw2","_id":"ckm08nre1000fgcu1b2fh0fn3"},{"post_id":"ckm08nrdu0003gcu1h08hbzow","category_id":"ckm08nrdu0002gcu1bxn71lw2","_id":"ckm08nre1000ggcu145bfd7hy"},{"post_id":"ckm08nrdw0005gcu1cxzx17me","category_id":"ckm08nre1000egcu1ahky03le","_id":"ckm08nre3000jgcu1dwqu2b7o"},{"post_id":"ckm08nrdx0006gcu1fxqv0e9r","category_id":"ckm08nre2000igcu1193peoww","_id":"ckm08nre3000kgcu150bh8g3q"},{"post_id":"ckm08nre3000lgcu18l8w6obb","category_id":"ckm08nre1000egcu1ahky03le","_id":"ckm08nre6000ogcu19h69em0p"},{"post_id":"ckm08nre4000mgcu1c7wp2br7","category_id":"ckm08nre1000egcu1ahky03le","_id":"ckm08nre6000pgcu10aas9agx"},{"post_id":"ckm08nri5000ugcu1fxq8evh7","category_id":"ckm08nri7000wgcu14cry07ri","_id":"ckm08nri90011gcu1crq229rj"},{"post_id":"ckm08nri6000vgcu11sax65y7","category_id":"ckm08nri7000wgcu14cry07ri","_id":"ckm08nri90012gcu1b92bh9mx"},{"post_id":"ckm08nria0013gcu1e5xab73s","category_id":"ckm08nri7000wgcu14cry07ri","_id":"ckm08nrib0015gcu1dasa6di3"},{"post_id":"ckm08nric0017gcu14ttb0whl","category_id":"ckm08nrid0019gcu1dwc3h4dr","_id":"ckm08nrie001cgcu1gl7i5tce"},{"post_id":"ckm08nrii001dgcu1ce5852ew","category_id":"ckm08nre2000igcu1193peoww","_id":"ckm08nrik001ggcu179pzhl1s"},{"post_id":"ckm08nrin001jgcu15nzyg54u","category_id":"ckm08nre1000egcu1ahky03le","_id":"ckm08nris001pgcu13wfd1l6d"},{"post_id":"ckm08nrim001igcu11mw69p18","category_id":"ckm08nrio001kgcu15mfmh003","_id":"ckm08nriv001vgcu1dklj47vd"},{"post_id":"ckm08nris001ogcu16arha9ky","category_id":"ckm08nrdu0002gcu1bxn71lw2","_id":"ckm08nriw001zgcu1fdna5xbq"},{"post_id":"ckm08nrit001tgcu16eco79q2","category_id":"ckm08nre1000egcu1ahky03le","_id":"ckm08nriy0022gcu133095nv7"},{"post_id":"ckm08nrio001mgcu195om0q48","category_id":"ckm08nrit001qgcu1dznwhall","_id":"ckm08nrj00026gcu11b6a71a3"},{"post_id":"ckm08nriw001ygcu13lr65ysi","category_id":"ckm08nri7000wgcu14cry07ri","_id":"ckm08nrj00028gcu1e7fe5wb8"},{"post_id":"ckm08nrir001ngcu1crny2quv","category_id":"ckm08nriv001wgcu1ercdfm7z","_id":"ckm08nrj1002bgcu19z9nelln"},{"post_id":"ckm08nriy0021gcu108whdh5w","category_id":"ckm08nri7000wgcu14cry07ri","_id":"ckm08nrj1002dgcu1c5rkb6cq"},{"post_id":"ckm08nriu001ugcu14nna10qt","category_id":"ckm08nriz0023gcu19mmfhr0m","_id":"ckm08nrj1002egcu13kt642yn"},{"post_id":"ckm08nriz0025gcu1by6gabpf","category_id":"ckm08nrj00029gcu1fkqu2y1k","_id":"ckm08nrj5002hgcu1fb195kb3"}],"PostTag":[{"post_id":"ckm08nrds0001gcu18mx29uqa","tag_id":"ckm08nrdw0004gcu1d6bb8no7","_id":"ckm08nrdz0009gcu19x1v83rk"},{"post_id":"ckm08nrdw0005gcu1cxzx17me","tag_id":"ckm08nrdz0008gcu1fckn4hqi","_id":"ckm08nre1000dgcu18s2bhvl4"},{"post_id":"ckm08nrdx0006gcu1fxqv0e9r","tag_id":"ckm08nre0000cgcu14ilggseh","_id":"ckm08nre2000hgcu1ck643o5o"},{"post_id":"ckm08nre3000lgcu18l8w6obb","tag_id":"ckm08nre5000ngcu1bmsk9ji2","_id":"ckm08nre6000rgcu17199h34y"},{"post_id":"ckm08nre4000mgcu1c7wp2br7","tag_id":"ckm08nre6000qgcu18e748ti8","_id":"ckm08nre7000sgcu13n9h1bs4"},{"post_id":"ckm08nri6000vgcu11sax65y7","tag_id":"ckm08nrdw0004gcu1d6bb8no7","_id":"ckm08nri8000ygcu19hewftsw"},{"post_id":"ckm08nri5000ugcu1fxq8evh7","tag_id":"ckm08nri7000xgcu14wodb054","_id":"ckm08nri90010gcu1azrffas3"},{"post_id":"ckm08nria0013gcu1e5xab73s","tag_id":"ckm08nria0014gcu11frtgwt9","_id":"ckm08nrib0016gcu1gq691odw"},{"post_id":"ckm08nric0017gcu14ttb0whl","tag_id":"ckm08nrie001agcu1hg2ucd25","_id":"ckm08nrie001bgcu19rcx3t5d"},{"post_id":"ckm08nrii001dgcu1ce5852ew","tag_id":"ckm08nrij001fgcu1g8uxgtnq","_id":"ckm08nrik001hgcu14v6dc7yu"},{"post_id":"ckm08nrin001jgcu15nzyg54u","tag_id":"ckm08nrit001rgcu12m062dsx","_id":"ckm08nriw0020gcu1co92aqfa"},{"post_id":"ckm08nrir001ngcu1crny2quv","tag_id":"ckm08nriv001xgcu11jkwd4mt","_id":"ckm08nrj00027gcu1fitgf3u8"},{"post_id":"ckm08nris001ogcu16arha9ky","tag_id":"ckm08nriz0024gcu11o63hhzg","_id":"ckm08nrj1002cgcu147chaufv"},{"post_id":"ckm08nrit001tgcu16eco79q2","tag_id":"ckm08nrj1002agcu103pb8ak1","_id":"ckm08nrj3002ggcu1d4k32pg2"},{"post_id":"ckm08nriu001ugcu14nna10qt","tag_id":"ckm08nrj1002fgcu1ck3a7whj","_id":"ckm08nrj5002jgcu19fnu21p4"},{"post_id":"ckm08nriw001ygcu13lr65ysi","tag_id":"ckm08nrj5002igcu15b44543b","_id":"ckm08nrj7002lgcu1ag1ac8z5"},{"post_id":"ckm08nriy0021gcu108whdh5w","tag_id":"ckm08nrj6002kgcu1eave3omp","_id":"ckm08nrj7002ngcu12g1x685m"}],"Tag":[{"name":"vim","_id":"ckm08nrdw0004gcu1d6bb8no7"},{"name":"dedecms","_id":"ckm08nrdz0008gcu1fckn4hqi"},{"name":"IE6","_id":"ckm08nre0000cgcu14ilggseh"},{"name":"css compression","_id":"ckm08nre5000ngcu1bmsk9ji2"},{"name":"codeigniter","_id":"ckm08nre6000qgcu18e748ti8"},{"name":"shell terminator","_id":"ckm08nri7000xgcu14wodb054"},{"name":"git","_id":"ckm08nria0014gcu11frtgwt9"},{"name":"mysql","_id":"ckm08nrie001agcu1hg2ucd25"},{"name":"css","_id":"ckm08nrij001fgcu1g8uxgtnq"},{"name":"h2ero love you","_id":"ckm08nrio001lgcu1cph643vq"},{"name":"php javascript","_id":"ckm08nrit001rgcu12m062dsx"},{"name":"Postfix Mac SMTP","_id":"ckm08nriv001xgcu11jkwd4mt"},{"name":"vsftpd ubuntu ftp","_id":"ckm08nriz0024gcu11o63hhzg"},{"name":"fuelphp php framework","_id":"ckm08nrj1002agcu103pb8ak1"},{"name":"netbens jVi plugin","_id":"ckm08nrj1002fgcu1ck3a7whj"},{"name":"Youtube GoogleAnalytics","_id":"ckm08nrj5002igcu15b44543b"},{"name":"search","_id":"ckm08nrj6002kgcu1eave3omp"},{"name":"h2ero loveYou markdown newLift newBlog","_id":"ckm08nrj7002mgcu13igggz43"}]}}